//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 12/11/2020 9:26:50
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects;
using System.Data.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Sage500AppModel", "FK_thrAnormalCondPosition_thrPositions", "ThrPosition", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrPosition), "ThrAnormalCondPositions", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrAnormalCondPosition), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "FK_thrCompetenciaCargo_thrPositions", "ThrPosition", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrPosition), "ThrCompetenciaCargos", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrCompetenciaCargo), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "FK_thrCompetenciaCargo_thrCompetencia", "ThrCompetencia", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrCompetencia), "ThrCompetenciaCargos", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrCompetenciaCargo), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "FK_OrgUnitPositions_Positions", "ThrPosition", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrPosition), "ThrOrgUnitPositions", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrOrgUnitPosition), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "FK_OrgUnitPositions_OrganizativeUnits", "ThrOrganizativeUnit", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrOrganizativeUnit), "ThrOrgUnitPositions", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrOrgUnitPosition), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "FK_thrPositionRisk_thrRisk", "ThrRisk", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrRisk), "ThrPositionRisks", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPositionRisk), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "FK_thrPositionRisk_thrPositions", "ThrPosition", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrPosition), "ThrPositionRisks", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPositionRisk), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "FK_WorkTranLineDists_WorkTranLines", "ThrWorkTranLine", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrWorkTranLine), "ThrWorkTranLineDists", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrWorkTranLineDist), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "FK_WorkTranLines_WorkTrans", "ThrWorkTran", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrWorkTran), "ThrWorkTranLines", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrWorkTranLine), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "FK_thrSheduleJornada_thrShedule", "ThrShedule", RelationshipMultiplicity.ZeroOrOne, typeof(Sage500AppModel.ThrShedule), "ThrSheduleJornadas", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrSheduleJornada), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "FK_thrPositionConditionLab_thrPositions", "ThrPosition", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrPosition), "ThrPositionConditionLabs", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPositionConditionLab), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrPeople_ThrPeopleAbsence", "ThrPeople", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrPeople), "ThrPeopleAbsences", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeopleAbsence), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrAbsence_ThrPeopleAbsence", "ThrAbsence", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrAbsence), "ThrPeopleAbsences", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeopleAbsence), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrPeople_ThrPeopleIncidence", "ThrPeople", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrPeople), "ThrPeopleIncidences", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeopleIncidence), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrIncidence_ThrPeopleIncidence", "ThrIncidence", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrIncidence), "ThrPeopleIncidences", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeopleIncidence), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrPeople_ThrPeopleLicence", "ThrPeople", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrPeople), "ThrPeopleLicences", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeopleLicence), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrLicence_ThrPeopleLicence", "ThrLicence", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrLicence), "ThrPeopleLicences", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeopleLicence), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrPeople_ThrPeopleSubsidy", "ThrPeople", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrPeople), "ThrPeopleSubsidies", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeopleSubsidy), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrSubsidy_ThrPeopleSubsidy", "ThrSubsidy", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrSubsidy), "ThrPeopleSubsidies", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeopleSubsidy), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "FK_thrAnormalCondPosition_thrAnormalCondition", "ThrAnormalCondition", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrAnormalCondition), "ThrAnormalCondPositions", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrAnormalCondPosition), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrAnormalCondition_ThrWorkedTimeAnormalCondition", "ThrAnormalCondition", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrAnormalCondition), "ThrWorkedTimeAnormalConditions", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrWorkedTimeAnormalCondition), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrWorkedTime_ThrWorkedTimeAnormalCondition", "ThrWorkedTime", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrWorkedTime), "ThrWorkedTimeAnormalConditions", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrWorkedTimeAnormalCondition), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrOrgUnitPosition_ThrPeopleMovement", "ThrOrgUnitPosition", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrOrgUnitPosition), "ThrPeopleMovements", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeopleMovement), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrPeople_ThrPeopleMovement", "ThrPeople", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrPeople), "ThrPeopleMovements", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeopleMovement), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrMovement_ThrPeopleMovement", "ThrMovement", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrMovement), "ThrPeopleMovements", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeopleMovement), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrOrganizativeUnit_ThrPeople", "ThrOrganizativeUnit", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrOrganizativeUnit), "ThrPeople", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeople), true)]
[assembly: EdmRelationshipAttribute("Sage500AppModel", "ThrPeople_ThrPeopleVacation", "ThrPeople", RelationshipMultiplicity.One, typeof(Sage500AppModel.ThrPeople), "ThrPeopleVacations", RelationshipMultiplicity.Many, typeof(Sage500AppModel.ThrPeopleVacation), true)]

#endregion

namespace Sage500AppModel
{

    #region Sage500AppEntities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Sage500AppEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new Sage500AppEntities object.
        /// </summary>
        public Sage500AppEntities() :
                base(@"name=Sage500AppEntitiesConnectionString", "Sage500AppEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new Sage500AppEntities object using the connection string found in the 'Sage500AppEntities' section of the application configuration file.
        /// </summary>
        public Sage500AppEntities(string connectionString) :
                base(connectionString, "Sage500AppEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new Sage500AppEntities object.
        /// </summary>
        public Sage500AppEntities(EntityConnection connection) : base(connection, "Sage500AppEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }


        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrAnormalCondition> ThrAnormalConditions
        {
            get
            {
                if ((_ThrAnormalConditions == null))
                {
                    _ThrAnormalConditions = base.CreateObjectSet<ThrAnormalCondition>("ThrAnormalConditions");
                }
                return _ThrAnormalConditions;
            }
        }
        private ObjectSet<ThrAnormalCondition> _ThrAnormalConditions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrAnormalCondPosition> ThrAnormalCondPositions
        {
            get
            {
                if ((_ThrAnormalCondPositions == null))
                {
                    _ThrAnormalCondPositions = base.CreateObjectSet<ThrAnormalCondPosition>("ThrAnormalCondPositions");
                }
                return _ThrAnormalCondPositions;
            }
        }
        private ObjectSet<ThrAnormalCondPosition> _ThrAnormalCondPositions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrCivilState> ThrCivilStates
        {
            get
            {
                if ((_ThrCivilStates == null))
                {
                    _ThrCivilStates = base.CreateObjectSet<ThrCivilState>("ThrCivilStates");
                }
                return _ThrCivilStates;
            }
        }
        private ObjectSet<ThrCivilState> _ThrCivilStates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrCompany> ThrCompanies
        {
            get
            {
                if ((_ThrCompanies == null))
                {
                    _ThrCompanies = base.CreateObjectSet<ThrCompany>("ThrCompanies");
                }
                return _ThrCompanies;
            }
        }
        private ObjectSet<ThrCompany> _ThrCompanies;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrCompetencia> ThrCompetencias
        {
            get
            {
                if ((_ThrCompetencias == null))
                {
                    _ThrCompetencias = base.CreateObjectSet<ThrCompetencia>("ThrCompetencias");
                }
                return _ThrCompetencias;
            }
        }
        private ObjectSet<ThrCompetencia> _ThrCompetencias;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrCompetenciaCargo> ThrCompetenciaCargos
        {
            get
            {
                if ((_ThrCompetenciaCargos == null))
                {
                    _ThrCompetenciaCargos = base.CreateObjectSet<ThrCompetenciaCargo>("ThrCompetenciaCargos");
                }
                return _ThrCompetenciaCargos;
            }
        }
        private ObjectSet<ThrCompetenciaCargo> _ThrCompetenciaCargos;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrCulturalLevel> ThrCulturalLevels
        {
            get
            {
                if ((_ThrCulturalLevels == null))
                {
                    _ThrCulturalLevels = base.CreateObjectSet<ThrCulturalLevel>("ThrCulturalLevels");
                }
                return _ThrCulturalLevels;
            }
        }
        private ObjectSet<ThrCulturalLevel> _ThrCulturalLevels;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrEscalaGroup> ThrEscalaGroups
        {
            get
            {
                if ((_ThrEscalaGroups == null))
                {
                    _ThrEscalaGroups = base.CreateObjectSet<ThrEscalaGroup>("ThrEscalaGroups");
                }
                return _ThrEscalaGroups;
            }
        }
        private ObjectSet<ThrEscalaGroup> _ThrEscalaGroups;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrInvestigationCategory> ThrInvestigationCategories
        {
            get
            {
                if ((_ThrInvestigationCategories == null))
                {
                    _ThrInvestigationCategories = base.CreateObjectSet<ThrInvestigationCategory>("ThrInvestigationCategories");
                }
                return _ThrInvestigationCategories;
            }
        }
        private ObjectSet<ThrInvestigationCategory> _ThrInvestigationCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrMunicipality> ThrMunicipalities
        {
            get
            {
                if ((_ThrMunicipalities == null))
                {
                    _ThrMunicipalities = base.CreateObjectSet<ThrMunicipality>("ThrMunicipalities");
                }
                return _ThrMunicipalities;
            }
        }
        private ObjectSet<ThrMunicipality> _ThrMunicipalities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrNacionality> ThrNacionalities
        {
            get
            {
                if ((_ThrNacionalities == null))
                {
                    _ThrNacionalities = base.CreateObjectSet<ThrNacionality>("ThrNacionalities");
                }
                return _ThrNacionalities;
            }
        }
        private ObjectSet<ThrNacionality> _ThrNacionalities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrOcupationalCategory> ThrOcupationalCategories
        {
            get
            {
                if ((_ThrOcupationalCategories == null))
                {
                    _ThrOcupationalCategories = base.CreateObjectSet<ThrOcupationalCategory>("ThrOcupationalCategories");
                }
                return _ThrOcupationalCategories;
            }
        }
        private ObjectSet<ThrOcupationalCategory> _ThrOcupationalCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrOcupationClasification> ThrOcupationClasifications
        {
            get
            {
                if ((_ThrOcupationClasifications == null))
                {
                    _ThrOcupationClasifications = base.CreateObjectSet<ThrOcupationClasification>("ThrOcupationClasifications");
                }
                return _ThrOcupationClasifications;
            }
        }
        private ObjectSet<ThrOcupationClasification> _ThrOcupationClasifications;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrOrganizativeUnit> ThrOrganizativeUnits
        {
            get
            {
                if ((_ThrOrganizativeUnits == null))
                {
                    _ThrOrganizativeUnits = base.CreateObjectSet<ThrOrganizativeUnit>("ThrOrganizativeUnits");
                }
                return _ThrOrganizativeUnits;
            }
        }
        private ObjectSet<ThrOrganizativeUnit> _ThrOrganizativeUnits;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrOrgUnitPosition> ThrOrgUnitPositions
        {
            get
            {
                if ((_ThrOrgUnitPositions == null))
                {
                    _ThrOrgUnitPositions = base.CreateObjectSet<ThrOrgUnitPosition>("ThrOrgUnitPositions");
                }
                return _ThrOrgUnitPositions;
            }
        }
        private ObjectSet<ThrOrgUnitPosition> _ThrOrgUnitPositions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrPositionRisk> ThrPositionRisks
        {
            get
            {
                if ((_ThrPositionRisks == null))
                {
                    _ThrPositionRisks = base.CreateObjectSet<ThrPositionRisk>("ThrPositionRisks");
                }
                return _ThrPositionRisks;
            }
        }
        private ObjectSet<ThrPositionRisk> _ThrPositionRisks;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrPosition> ThrPositions
        {
            get
            {
                if ((_ThrPositions == null))
                {
                    _ThrPositions = base.CreateObjectSet<ThrPosition>("ThrPositions");
                }
                return _ThrPositions;
            }
        }
        private ObjectSet<ThrPosition> _ThrPositions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrRisk> ThrRisks
        {
            get
            {
                if ((_ThrRisks == null))
                {
                    _ThrRisks = base.CreateObjectSet<ThrRisk>("ThrRisks");
                }
                return _ThrRisks;
            }
        }
        private ObjectSet<ThrRisk> _ThrRisks;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrScientificCategory> ThrScientificCategories
        {
            get
            {
                if ((_ThrScientificCategories == null))
                {
                    _ThrScientificCategories = base.CreateObjectSet<ThrScientificCategory>("ThrScientificCategories");
                }
                return _ThrScientificCategories;
            }
        }
        private ObjectSet<ThrScientificCategory> _ThrScientificCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrShedule> ThrShedules
        {
            get
            {
                if ((_ThrShedules == null))
                {
                    _ThrShedules = base.CreateObjectSet<ThrShedule>("ThrShedules");
                }
                return _ThrShedules;
            }
        }
        private ObjectSet<ThrShedule> _ThrShedules;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrSheduleJornada> ThrSheduleJornadas
        {
            get
            {
                if ((_ThrSheduleJornadas == null))
                {
                    _ThrSheduleJornadas = base.CreateObjectSet<ThrSheduleJornada>("ThrSheduleJornadas");
                }
                return _ThrSheduleJornadas;
            }
        }
        private ObjectSet<ThrSheduleJornada> _ThrSheduleJornadas;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrState> ThrStates
        {
            get
            {
                if ((_ThrStates == null))
                {
                    _ThrStates = base.CreateObjectSet<ThrState>("ThrStates");
                }
                return _ThrStates;
            }
        }
        private ObjectSet<ThrState> _ThrStates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrWorkerType> ThrWorkerTypes
        {
            get
            {
                if ((_ThrWorkerTypes == null))
                {
                    _ThrWorkerTypes = base.CreateObjectSet<ThrWorkerType>("ThrWorkerTypes");
                }
                return _ThrWorkerTypes;
            }
        }
        private ObjectSet<ThrWorkerType> _ThrWorkerTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrWorkTranLineDist> ThrWorkTranLineDists
        {
            get
            {
                if ((_ThrWorkTranLineDists == null))
                {
                    _ThrWorkTranLineDists = base.CreateObjectSet<ThrWorkTranLineDist>("ThrWorkTranLineDists");
                }
                return _ThrWorkTranLineDists;
            }
        }
        private ObjectSet<ThrWorkTranLineDist> _ThrWorkTranLineDists;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrWorkTranLine> ThrWorkTranLines
        {
            get
            {
                if ((_ThrWorkTranLines == null))
                {
                    _ThrWorkTranLines = base.CreateObjectSet<ThrWorkTranLine>("ThrWorkTranLines");
                }
                return _ThrWorkTranLines;
            }
        }
        private ObjectSet<ThrWorkTranLine> _ThrWorkTranLines;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrWorkTran> ThrWorkTrans
        {
            get
            {
                if ((_ThrWorkTrans == null))
                {
                    _ThrWorkTrans = base.CreateObjectSet<ThrWorkTran>("ThrWorkTrans");
                }
                return _ThrWorkTrans;
            }
        }
        private ObjectSet<ThrWorkTran> _ThrWorkTrans;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TsmCompany> TsmCompanies
        {
            get
            {
                if ((_TsmCompanies == null))
                {
                    _TsmCompanies = base.CreateObjectSet<TsmCompany>("TsmCompanies");
                }
                return _TsmCompanies;
            }
        }
        private ObjectSet<TsmCompany> _TsmCompanies;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrPeople> ThrPeople
        {
            get
            {
                if ((_ThrPeople == null))
                {
                    _ThrPeople = base.CreateObjectSet<ThrPeople>("ThrPeople");
                }
                return _ThrPeople;
            }
        }
        private ObjectSet<ThrPeople> _ThrPeople;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TglSegment> TglSegments
        {
            get
            {
                if ((_TglSegments == null))
                {
                    _TglSegments = base.CreateObjectSet<TglSegment>("TglSegments");
                }
                return _TglSegments;
            }
        }
        private ObjectSet<TglSegment> _TglSegments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TglSegmentCode> TglSegmentCodes
        {
            get
            {
                if ((_TglSegmentCodes == null))
                {
                    _TglSegmentCodes = base.CreateObjectSet<TglSegmentCode>("TglSegmentCodes");
                }
                return _TglSegmentCodes;
            }
        }
        private ObjectSet<TglSegmentCode> _TglSegmentCodes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrLaboralCondition> ThrLaboralConditions
        {
            get
            {
                if ((_ThrLaboralConditions == null))
                {
                    _ThrLaboralConditions = base.CreateObjectSet<ThrLaboralCondition>("ThrLaboralConditions");
                }
                return _ThrLaboralConditions;
            }
        }
        private ObjectSet<ThrLaboralCondition> _ThrLaboralConditions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrPositionConditionLab> ThrPositionConditionLabs
        {
            get
            {
                if ((_ThrPositionConditionLabs == null))
                {
                    _ThrPositionConditionLabs = base.CreateObjectSet<ThrPositionConditionLab>("ThrPositionConditionLabs");
                }
                return _ThrPositionConditionLabs;
            }
        }
        private ObjectSet<ThrPositionConditionLab> _ThrPositionConditionLabs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrSubsidy> ThrSubsidies
        {
            get
            {
                if ((_ThrSubsidies == null))
                {
                    _ThrSubsidies = base.CreateObjectSet<ThrSubsidy>("ThrSubsidies");
                }
                return _ThrSubsidies;
            }
        }
        private ObjectSet<ThrSubsidy> _ThrSubsidies;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrAbsence> ThrAbsences
        {
            get
            {
                if ((_ThrAbsences == null))
                {
                    _ThrAbsences = base.CreateObjectSet<ThrAbsence>("ThrAbsences");
                }
                return _ThrAbsences;
            }
        }
        private ObjectSet<ThrAbsence> _ThrAbsences;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrLicence> ThrLicences
        {
            get
            {
                if ((_ThrLicences == null))
                {
                    _ThrLicences = base.CreateObjectSet<ThrLicence>("ThrLicences");
                }
                return _ThrLicences;
            }
        }
        private ObjectSet<ThrLicence> _ThrLicences;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrIncidence> ThrIncidences
        {
            get
            {
                if ((_ThrIncidences == null))
                {
                    _ThrIncidences = base.CreateObjectSet<ThrIncidence>("ThrIncidences");
                }
                return _ThrIncidences;
            }
        }
        private ObjectSet<ThrIncidence> _ThrIncidences;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrDeduction> ThrDeductions
        {
            get
            {
                if ((_ThrDeductions == null))
                {
                    _ThrDeductions = base.CreateObjectSet<ThrDeduction>("ThrDeductions");
                }
                return _ThrDeductions;
            }
        }
        private ObjectSet<ThrDeduction> _ThrDeductions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrMovement> ThrMovements
        {
            get
            {
                if ((_ThrMovements == null))
                {
                    _ThrMovements = base.CreateObjectSet<ThrMovement>("ThrMovements");
                }
                return _ThrMovements;
            }
        }
        private ObjectSet<ThrMovement> _ThrMovements;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrRetention> ThrRetentions
        {
            get
            {
                if ((_ThrRetentions == null))
                {
                    _ThrRetentions = base.CreateObjectSet<ThrRetention>("ThrRetentions");
                }
                return _ThrRetentions;
            }
        }
        private ObjectSet<ThrRetention> _ThrRetentions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrPeopleAbsence> ThrPeopleAbsences
        {
            get
            {
                if ((_ThrPeopleAbsences == null))
                {
                    _ThrPeopleAbsences = base.CreateObjectSet<ThrPeopleAbsence>("ThrPeopleAbsences");
                }
                return _ThrPeopleAbsences;
            }
        }
        private ObjectSet<ThrPeopleAbsence> _ThrPeopleAbsences;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrPeopleIncidence> ThrPeopleIncidences
        {
            get
            {
                if ((_ThrPeopleIncidences == null))
                {
                    _ThrPeopleIncidences = base.CreateObjectSet<ThrPeopleIncidence>("ThrPeopleIncidences");
                }
                return _ThrPeopleIncidences;
            }
        }
        private ObjectSet<ThrPeopleIncidence> _ThrPeopleIncidences;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrPeopleLicence> ThrPeopleLicences
        {
            get
            {
                if ((_ThrPeopleLicences == null))
                {
                    _ThrPeopleLicences = base.CreateObjectSet<ThrPeopleLicence>("ThrPeopleLicences");
                }
                return _ThrPeopleLicences;
            }
        }
        private ObjectSet<ThrPeopleLicence> _ThrPeopleLicences;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrPeopleSubsidy> ThrPeopleSubsidies
        {
            get
            {
                if ((_ThrPeopleSubsidies == null))
                {
                    _ThrPeopleSubsidies = base.CreateObjectSet<ThrPeopleSubsidy>("ThrPeopleSubsidies");
                }
                return _ThrPeopleSubsidies;
            }
        }
        private ObjectSet<ThrPeopleSubsidy> _ThrPeopleSubsidies;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrOperationsPeriod> ThrOperationsPeriods
        {
            get
            {
                if ((_ThrOperationsPeriods == null))
                {
                    _ThrOperationsPeriods = base.CreateObjectSet<ThrOperationsPeriod>("ThrOperationsPeriods");
                }
                return _ThrOperationsPeriods;
            }
        }
        private ObjectSet<ThrOperationsPeriod> _ThrOperationsPeriods;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrWorkedTime> ThrWorkedTimes
        {
            get
            {
                if ((_ThrWorkedTimes == null))
                {
                    _ThrWorkedTimes = base.CreateObjectSet<ThrWorkedTime>("ThrWorkedTimes");
                }
                return _ThrWorkedTimes;
            }
        }
        private ObjectSet<ThrWorkedTime> _ThrWorkedTimes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrWorkedTimeAnormalCondition> ThrWorkedTimeAnormalConditions
        {
            get
            {
                if ((_ThrWorkedTimeAnormalConditions == null))
                {
                    _ThrWorkedTimeAnormalConditions = base.CreateObjectSet<ThrWorkedTimeAnormalCondition>("ThrWorkedTimeAnormalConditions");
                }
                return _ThrWorkedTimeAnormalConditions;
            }
        }
        private ObjectSet<ThrWorkedTimeAnormalCondition> _ThrWorkedTimeAnormalConditions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrPeopleVacation> ThrPeopleVacations
        {
            get
            {
                if ((_ThrPeopleVacations == null))
                {
                    _ThrPeopleVacations = base.CreateObjectSet<ThrPeopleVacation>("ThrPeopleVacations");
                }
                return _ThrPeopleVacations;
            }
        }
        private ObjectSet<ThrPeopleVacation> _ThrPeopleVacations;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrPeopleRetention> ThrPeopleRetentions
        {
            get
            {
                if ((_ThrPeopleRetentions == null))
                {
                    _ThrPeopleRetentions = base.CreateObjectSet<ThrPeopleRetention>("ThrPeopleRetentions");
                }
                return _ThrPeopleRetentions;
            }
        }
        private ObjectSet<ThrPeopleRetention> _ThrPeopleRetentions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrPeopleMovement> ThrPeopleMovements
        {
            get
            {
                if ((_ThrPeopleMovements == null))
                {
                    _ThrPeopleMovements = base.CreateObjectSet<ThrPeopleMovement>("ThrPeopleMovements");
                }
                return _ThrPeopleMovements;
            }
        }
        private ObjectSet<ThrPeopleMovement> _ThrPeopleMovements;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThrPeopleDeduction1> ThrPeopleDeduction1s
        {
            get
            {
                if ((_ThrPeopleDeduction1s == null))
                {
                    _ThrPeopleDeduction1s = base.CreateObjectSet<ThrPeopleDeduction1>("ThrPeopleDeduction1s");
                }
                return _ThrPeopleDeduction1s;
            }
        }
        private ObjectSet<ThrPeopleDeduction1> _ThrPeopleDeduction1s;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrAnormalConditions EntitySet.
        /// </summary>
        public void AddToThrAnormalConditions(ThrAnormalCondition thrAnormalCondition)
        {
            base.AddObject("ThrAnormalConditions", thrAnormalCondition);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrAnormalCondPositions EntitySet.
        /// </summary>
        public void AddToThrAnormalCondPositions(ThrAnormalCondPosition thrAnormalCondPosition)
        {
            base.AddObject("ThrAnormalCondPositions", thrAnormalCondPosition);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrCivilStates EntitySet.
        /// </summary>
        public void AddToThrCivilStates(ThrCivilState thrCivilState)
        {
            base.AddObject("ThrCivilStates", thrCivilState);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrCompanies EntitySet.
        /// </summary>
        public void AddToThrCompanies(ThrCompany thrCompany)
        {
            base.AddObject("ThrCompanies", thrCompany);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrCompetencias EntitySet.
        /// </summary>
        public void AddToThrCompetencias(ThrCompetencia thrCompetencia)
        {
            base.AddObject("ThrCompetencias", thrCompetencia);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrCompetenciaCargos EntitySet.
        /// </summary>
        public void AddToThrCompetenciaCargos(ThrCompetenciaCargo thrCompetenciaCargo)
        {
            base.AddObject("ThrCompetenciaCargos", thrCompetenciaCargo);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrCulturalLevels EntitySet.
        /// </summary>
        public void AddToThrCulturalLevels(ThrCulturalLevel thrCulturalLevel)
        {
            base.AddObject("ThrCulturalLevels", thrCulturalLevel);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrEscalaGroups EntitySet.
        /// </summary>
        public void AddToThrEscalaGroups(ThrEscalaGroup thrEscalaGroup)
        {
            base.AddObject("ThrEscalaGroups", thrEscalaGroup);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrInvestigationCategories EntitySet.
        /// </summary>
        public void AddToThrInvestigationCategories(ThrInvestigationCategory thrInvestigationCategory)
        {
            base.AddObject("ThrInvestigationCategories", thrInvestigationCategory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrMunicipalities EntitySet.
        /// </summary>
        public void AddToThrMunicipalities(ThrMunicipality thrMunicipality)
        {
            base.AddObject("ThrMunicipalities", thrMunicipality);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrNacionalities EntitySet.
        /// </summary>
        public void AddToThrNacionalities(ThrNacionality thrNacionality)
        {
            base.AddObject("ThrNacionalities", thrNacionality);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrOcupationalCategories EntitySet.
        /// </summary>
        public void AddToThrOcupationalCategories(ThrOcupationalCategory thrOcupationalCategory)
        {
            base.AddObject("ThrOcupationalCategories", thrOcupationalCategory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrOcupationClasifications EntitySet.
        /// </summary>
        public void AddToThrOcupationClasifications(ThrOcupationClasification thrOcupationClasification)
        {
            base.AddObject("ThrOcupationClasifications", thrOcupationClasification);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrOrganizativeUnits EntitySet.
        /// </summary>
        public void AddToThrOrganizativeUnits(ThrOrganizativeUnit thrOrganizativeUnit)
        {
            base.AddObject("ThrOrganizativeUnits", thrOrganizativeUnit);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrOrgUnitPositions EntitySet.
        /// </summary>
        public void AddToThrOrgUnitPositions(ThrOrgUnitPosition thrOrgUnitPosition)
        {
            base.AddObject("ThrOrgUnitPositions", thrOrgUnitPosition);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrPositionRisks EntitySet.
        /// </summary>
        public void AddToThrPositionRisks(ThrPositionRisk thrPositionRisk)
        {
            base.AddObject("ThrPositionRisks", thrPositionRisk);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrPositions EntitySet.
        /// </summary>
        public void AddToThrPositions(ThrPosition thrPosition)
        {
            base.AddObject("ThrPositions", thrPosition);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrRisks EntitySet.
        /// </summary>
        public void AddToThrRisks(ThrRisk thrRisk)
        {
            base.AddObject("ThrRisks", thrRisk);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrScientificCategories EntitySet.
        /// </summary>
        public void AddToThrScientificCategories(ThrScientificCategory thrScientificCategory)
        {
            base.AddObject("ThrScientificCategories", thrScientificCategory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrShedules EntitySet.
        /// </summary>
        public void AddToThrShedules(ThrShedule thrShedule)
        {
            base.AddObject("ThrShedules", thrShedule);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrSheduleJornadas EntitySet.
        /// </summary>
        public void AddToThrSheduleJornadas(ThrSheduleJornada thrSheduleJornada)
        {
            base.AddObject("ThrSheduleJornadas", thrSheduleJornada);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrStates EntitySet.
        /// </summary>
        public void AddToThrStates(ThrState thrState)
        {
            base.AddObject("ThrStates", thrState);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrWorkerTypes EntitySet.
        /// </summary>
        public void AddToThrWorkerTypes(ThrWorkerType thrWorkerType)
        {
            base.AddObject("ThrWorkerTypes", thrWorkerType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrWorkTranLineDists EntitySet.
        /// </summary>
        public void AddToThrWorkTranLineDists(ThrWorkTranLineDist thrWorkTranLineDist)
        {
            base.AddObject("ThrWorkTranLineDists", thrWorkTranLineDist);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrWorkTranLines EntitySet.
        /// </summary>
        public void AddToThrWorkTranLines(ThrWorkTranLine thrWorkTranLine)
        {
            base.AddObject("ThrWorkTranLines", thrWorkTranLine);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrWorkTrans EntitySet.
        /// </summary>
        public void AddToThrWorkTrans(ThrWorkTran thrWorkTran)
        {
            base.AddObject("ThrWorkTrans", thrWorkTran);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TsmCompanies EntitySet.
        /// </summary>
        public void AddToTsmCompanies(TsmCompany tsmCompany)
        {
            base.AddObject("TsmCompanies", tsmCompany);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrPeople EntitySet.
        /// </summary>
        public void AddToThrPeople(ThrPeople thrPeople)
        {
            base.AddObject("ThrPeople", thrPeople);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TglSegments EntitySet.
        /// </summary>
        public void AddToTglSegments(TglSegment tglSegment)
        {
            base.AddObject("TglSegments", tglSegment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TglSegmentCodes EntitySet.
        /// </summary>
        public void AddToTglSegmentCodes(TglSegmentCode tglSegmentCode)
        {
            base.AddObject("TglSegmentCodes", tglSegmentCode);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrLaboralConditions EntitySet.
        /// </summary>
        public void AddToThrLaboralConditions(ThrLaboralCondition thrLaboralCondition)
        {
            base.AddObject("ThrLaboralConditions", thrLaboralCondition);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrPositionConditionLabs EntitySet.
        /// </summary>
        public void AddToThrPositionConditionLabs(ThrPositionConditionLab thrPositionConditionLab)
        {
            base.AddObject("ThrPositionConditionLabs", thrPositionConditionLab);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrSubsidies EntitySet.
        /// </summary>
        public void AddToThrSubsidies(ThrSubsidy thrSubsidy)
        {
            base.AddObject("ThrSubsidies", thrSubsidy);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrAbsences EntitySet.
        /// </summary>
        public void AddToThrAbsences(ThrAbsence thrAbsence)
        {
            base.AddObject("ThrAbsences", thrAbsence);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrLicences EntitySet.
        /// </summary>
        public void AddToThrLicences(ThrLicence thrLicence)
        {
            base.AddObject("ThrLicences", thrLicence);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrIncidences EntitySet.
        /// </summary>
        public void AddToThrIncidences(ThrIncidence thrIncidence)
        {
            base.AddObject("ThrIncidences", thrIncidence);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrDeductions EntitySet.
        /// </summary>
        public void AddToThrDeductions(ThrDeduction thrDeduction)
        {
            base.AddObject("ThrDeductions", thrDeduction);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrMovements EntitySet.
        /// </summary>
        public void AddToThrMovements(ThrMovement thrMovement)
        {
            base.AddObject("ThrMovements", thrMovement);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrRetentions EntitySet.
        /// </summary>
        public void AddToThrRetentions(ThrRetention thrRetention)
        {
            base.AddObject("ThrRetentions", thrRetention);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrPeopleAbsences EntitySet.
        /// </summary>
        public void AddToThrPeopleAbsences(ThrPeopleAbsence thrPeopleAbsence)
        {
            base.AddObject("ThrPeopleAbsences", thrPeopleAbsence);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrPeopleIncidences EntitySet.
        /// </summary>
        public void AddToThrPeopleIncidences(ThrPeopleIncidence thrPeopleIncidence)
        {
            base.AddObject("ThrPeopleIncidences", thrPeopleIncidence);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrPeopleLicences EntitySet.
        /// </summary>
        public void AddToThrPeopleLicences(ThrPeopleLicence thrPeopleLicence)
        {
            base.AddObject("ThrPeopleLicences", thrPeopleLicence);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrPeopleSubsidies EntitySet.
        /// </summary>
        public void AddToThrPeopleSubsidies(ThrPeopleSubsidy thrPeopleSubsidy)
        {
            base.AddObject("ThrPeopleSubsidies", thrPeopleSubsidy);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrOperationsPeriods EntitySet.
        /// </summary>
        public void AddToThrOperationsPeriods(ThrOperationsPeriod thrOperationsPeriod)
        {
            base.AddObject("ThrOperationsPeriods", thrOperationsPeriod);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrWorkedTimes EntitySet.
        /// </summary>
        public void AddToThrWorkedTimes(ThrWorkedTime thrWorkedTime)
        {
            base.AddObject("ThrWorkedTimes", thrWorkedTime);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrWorkedTimeAnormalConditions EntitySet.
        /// </summary>
        public void AddToThrWorkedTimeAnormalConditions(ThrWorkedTimeAnormalCondition thrWorkedTimeAnormalCondition)
        {
            base.AddObject("ThrWorkedTimeAnormalConditions", thrWorkedTimeAnormalCondition);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrPeopleVacations EntitySet.
        /// </summary>
        public void AddToThrPeopleVacations(ThrPeopleVacation thrPeopleVacation)
        {
            base.AddObject("ThrPeopleVacations", thrPeopleVacation);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrPeopleRetentions EntitySet.
        /// </summary>
        public void AddToThrPeopleRetentions(ThrPeopleRetention thrPeopleRetention)
        {
            base.AddObject("ThrPeopleRetentions", thrPeopleRetention);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrPeopleMovements EntitySet.
        /// </summary>
        public void AddToThrPeopleMovements(ThrPeopleMovement thrPeopleMovement)
        {
            base.AddObject("ThrPeopleMovements", thrPeopleMovement);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ThrPeopleDeduction1s EntitySet.
        /// </summary>
        public void AddToThrPeopleDeduction1s(ThrPeopleDeduction1 thrPeopleDeduction1)
        {
            base.AddObject("ThrPeopleDeduction1s", thrPeopleDeduction1);
        }

        #endregion
    }

    #endregion
}

namespace Sage500AppModel
{

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrAnormalCondition in the schema.
    /// </summary>
    /// <KeyProperties>
    /// AnormalConditionkey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrAnormalCondition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Condiciones Anormales")]
    public partial class ThrAnormalCondition : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrAnormalCondition object.
        /// </summary>
        /// <param name="anormalConditionkey">Initial value of AnormalConditionkey.</param>
        /// <param name="anormalCondID">Initial value of AnormalCondID.</param>
        /// <param name="anormalName">Initial value of AnormalName.</param>
        public static ThrAnormalCondition CreateThrAnormalCondition(int anormalConditionkey, string anormalCondID, string anormalName)
        {
            ThrAnormalCondition thrAnormalCondition = new ThrAnormalCondition();
            thrAnormalCondition.AnormalConditionkey = anormalConditionkey;
            thrAnormalCondition.AnormalCondID = anormalCondID;
            thrAnormalCondition.AnormalName = anormalName;
            return thrAnormalCondition;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for AnormalConditionkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual int AnormalConditionkey
        {
            get
            {
                int value = _AnormalConditionkey;
                OnGetAnormalConditionkey(ref value);
                return value;
            }
            set
            {
                if (_AnormalConditionkey != value)
                {
                  OnAnormalConditionkeyChanging(ref value);
                  ReportPropertyChanging("AnormalConditionkey");
                  _AnormalConditionkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AnormalConditionkey");
                  OnAnormalConditionkeyChanged();
              }
            }
        }
        private int _AnormalConditionkey;
        partial void OnGetAnormalConditionkey(ref int value);
        partial void OnAnormalConditionkeyChanging(ref int value);
        partial void OnAnormalConditionkeyChanged();
    
        /// <summary>
        /// There are no comments for AnormalCondID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Código")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Código")]
        public virtual string AnormalCondID
        {
            get
            {
                string value = _AnormalCondID;
                OnGetAnormalCondID(ref value);
                return value;
            }
            set
            {
                if (_AnormalCondID != value)
                {
                  OnAnormalCondIDChanging(ref value);
                  ReportPropertyChanging("AnormalCondID");
                  _AnormalCondID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AnormalCondID");
                  OnAnormalCondIDChanged();
              }
            }
        }
        private string _AnormalCondID;
        partial void OnGetAnormalCondID(ref string value);
        partial void OnAnormalCondIDChanging(ref string value);
        partial void OnAnormalCondIDChanged();
    
        /// <summary>
        /// There are no comments for AnormalName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Nombre")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Nombre")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string AnormalName
        {
            get
            {
                string value = _AnormalName;
                OnGetAnormalName(ref value);
                return value;
            }
            set
            {
                if (_AnormalName != value)
                {
                  OnAnormalNameChanging(ref value);
                  ReportPropertyChanging("AnormalName");
                  _AnormalName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AnormalName");
                  OnAnormalNameChanged();
              }
            }
        }
        private string _AnormalName;
        partial void OnGetAnormalName(ref string value);
        partial void OnAnormalNameChanging(ref string value);
        partial void OnAnormalNameChanged();
    
        /// <summary>
        /// There are no comments for AnormalTarifa in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Tarifa")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Tarifa")]
        public virtual decimal? AnormalTarifa
        {
            get
            {
                decimal? value = _AnormalTarifa;
                OnGetAnormalTarifa(ref value);
                return value;
            }
            set
            {
                if (_AnormalTarifa != value)
                {
                  OnAnormalTarifaChanging(ref value);
                  ReportPropertyChanging("AnormalTarifa");
                  _AnormalTarifa = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AnormalTarifa");
                  OnAnormalTarifaChanged();
              }
            }
        }
        private decimal? _AnormalTarifa;
        partial void OnGetAnormalTarifa(ref decimal? value);
        partial void OnAnormalTarifaChanging(ref decimal? value);
        partial void OnAnormalTarifaChanged();
    
        /// <summary>
        /// There are no comments for AnormalResolution in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Resolución")]
        public virtual string AnormalResolution
        {
            get
            {
                string value = _AnormalResolution;
                OnGetAnormalResolution(ref value);
                return value;
            }
            set
            {
                if (_AnormalResolution != value)
                {
                  OnAnormalResolutionChanging(ref value);
                  ReportPropertyChanging("AnormalResolution");
                  _AnormalResolution = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AnormalResolution");
                  OnAnormalResolutionChanged();
              }
            }
        }
        private string _AnormalResolution;
        partial void OnGetAnormalResolution(ref string value);
        partial void OnAnormalResolutionChanging(ref string value);
        partial void OnAnormalResolutionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrAnormalCondPositions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrAnormalCondPosition_thrAnormalCondition", "ThrAnormalCondPositions")]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual EntityCollection<ThrAnormalCondPosition> ThrAnormalCondPositions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrAnormalCondPosition>("Sage500AppModel.FK_thrAnormalCondPosition_thrAnormalCondition", "ThrAnormalCondPositions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrAnormalCondPosition>("Sage500AppModel.FK_thrAnormalCondPosition_thrAnormalCondition", "ThrAnormalCondPositions", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrWorkedTimeAnormalConditions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrAnormalCondition_ThrWorkedTimeAnormalCondition", "ThrWorkedTimeAnormalConditions")]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual EntityCollection<ThrWorkedTimeAnormalCondition> ThrWorkedTimeAnormalConditions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrWorkedTimeAnormalCondition>("Sage500AppModel.ThrAnormalCondition_ThrWorkedTimeAnormalCondition", "ThrWorkedTimeAnormalConditions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrWorkedTimeAnormalCondition>("Sage500AppModel.ThrAnormalCondition_ThrWorkedTimeAnormalCondition", "ThrWorkedTimeAnormalConditions", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrAnormalCondPosition in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PositionKey
    /// AnormalConditionKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrAnormalCondPosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrAnormalCondPosition : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrAnormalCondPosition object.
        /// </summary>
        /// <param name="positionKey">Initial value of PositionKey.</param>
        /// <param name="anormalConditionKey">Initial value of AnormalConditionKey.</param>
        public static ThrAnormalCondPosition CreateThrAnormalCondPosition(int positionKey, int anormalConditionKey)
        {
            ThrAnormalCondPosition thrAnormalCondPosition = new ThrAnormalCondPosition();
            thrAnormalCondPosition.PositionKey = positionKey;
            thrAnormalCondPosition.AnormalConditionKey = anormalConditionKey;
            return thrAnormalCondPosition;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PositionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PositionKey
        {
            get
            {
                int value = _PositionKey;
                OnGetPositionKey(ref value);
                return value;
            }
            set
            {
                if (_PositionKey != value)
                {
                  OnPositionKeyChanging(ref value);
                  ReportPropertyChanging("PositionKey");
                  _PositionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PositionKey");
                  OnPositionKeyChanged();
              }
            }
        }
        private int _PositionKey;
        partial void OnGetPositionKey(ref int value);
        partial void OnPositionKeyChanging(ref int value);
        partial void OnPositionKeyChanged();
    
        /// <summary>
        /// There are no comments for AnormalConditionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AnormalConditionKey
        {
            get
            {
                int value = _AnormalConditionKey;
                OnGetAnormalConditionKey(ref value);
                return value;
            }
            set
            {
                if (_AnormalConditionKey != value)
                {
                  OnAnormalConditionKeyChanging(ref value);
                  ReportPropertyChanging("AnormalConditionKey");
                  _AnormalConditionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AnormalConditionKey");
                  OnAnormalConditionKeyChanged();
              }
            }
        }
        private int _AnormalConditionKey;
        partial void OnGetAnormalConditionKey(ref int value);
        partial void OnAnormalConditionKeyChanging(ref int value);
        partial void OnAnormalConditionKeyChanged();
    
        /// <summary>
        /// There are no comments for Qty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Qty
        {
            get
            {
                int? value = _Qty;
                OnGetQty(ref value);
                return value;
            }
            set
            {
                if (_Qty != value)
                {
                  OnQtyChanging(ref value);
                  ReportPropertyChanging("Qty");
                  _Qty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Qty");
                  OnQtyChanged();
              }
            }
        }
        private int? _Qty;
        partial void OnGetQty(ref int? value);
        partial void OnQtyChanging(ref int? value);
        partial void OnQtyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrPosition in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrAnormalCondPosition_thrPositions", "ThrPosition")]
        public virtual ThrPosition ThrPosition
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrAnormalCondPosition_thrPositions", "ThrPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrAnormalCondPosition_thrPositions", "ThrPosition").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPosition in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrPosition> ThrPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrAnormalCondPosition_thrPositions", "ThrPosition");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrPosition>("Sage500AppModel.FK_thrAnormalCondPosition_thrPositions", "ThrPosition", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrAnormalCondPosition_thrPositions", "ThrPosition").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrAnormalCondition in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrAnormalCondPosition_thrAnormalCondition", "ThrAnormalCondition")]
        public virtual ThrAnormalCondition ThrAnormalCondition
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrAnormalCondition>("Sage500AppModel.FK_thrAnormalCondPosition_thrAnormalCondition", "ThrAnormalCondition").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrAnormalCondition>("Sage500AppModel.FK_thrAnormalCondPosition_thrAnormalCondition", "ThrAnormalCondition").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrAnormalCondition in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrAnormalCondition> ThrAnormalConditionReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrAnormalCondition>("Sage500AppModel.FK_thrAnormalCondPosition_thrAnormalCondition", "ThrAnormalCondition");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrAnormalCondition>("Sage500AppModel.FK_thrAnormalCondPosition_thrAnormalCondition", "ThrAnormalCondition", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrAnormalCondition>("Sage500AppModel.FK_thrAnormalCondPosition_thrAnormalCondition", "ThrAnormalCondition").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrCivilState in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CivilStatekey
    /// CivilStateID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrCivilState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrCivilState : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrCivilState object.
        /// </summary>
        /// <param name="civilStatekey">Initial value of CivilStatekey.</param>
        /// <param name="civilStateID">Initial value of CivilStateID.</param>
        public static ThrCivilState CreateThrCivilState(short civilStatekey, string civilStateID)
        {
            ThrCivilState thrCivilState = new ThrCivilState();
            thrCivilState.CivilStatekey = civilStatekey;
            thrCivilState.CivilStateID = civilStateID;
            return thrCivilState;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CivilStatekey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CivilStatekey
        {
            get
            {
                short value = _CivilStatekey;
                OnGetCivilStatekey(ref value);
                return value;
            }
            set
            {
                if (_CivilStatekey != value)
                {
                  OnCivilStatekeyChanging(ref value);
                  ReportPropertyChanging("CivilStatekey");
                  _CivilStatekey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CivilStatekey");
                  OnCivilStatekeyChanged();
              }
            }
        }
        private short _CivilStatekey;
        partial void OnGetCivilStatekey(ref short value);
        partial void OnCivilStatekeyChanging(ref short value);
        partial void OnCivilStatekeyChanged();
    
        /// <summary>
        /// There are no comments for CivilStateID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CivilStateID
        {
            get
            {
                string value = _CivilStateID;
                OnGetCivilStateID(ref value);
                return value;
            }
            set
            {
                if (_CivilStateID != value)
                {
                  OnCivilStateIDChanging(ref value);
                  ReportPropertyChanging("CivilStateID");
                  _CivilStateID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CivilStateID");
                  OnCivilStateIDChanged();
              }
            }
        }
        private string _CivilStateID;
        partial void OnGetCivilStateID(ref string value);
        partial void OnCivilStateIDChanging(ref string value);
        partial void OnCivilStateIDChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrCompany in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Companykey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrCompany : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrCompany object.
        /// </summary>
        /// <param name="companykey">Initial value of Companykey.</param>
        /// <param name="codigoCompany">Initial value of CodigoCompany.</param>
        /// <param name="cuentaBancaria">Initial value of CuentaBancaria.</param>
        /// <param name="province">Initial value of Province.</param>
        /// <param name="municipy">Initial value of Municipy.</param>
        /// <param name="noSegmentoCentro">Initial value of NoSegmentoCentro.</param>
        public static ThrCompany CreateThrCompany(int companykey, string codigoCompany, string cuentaBancaria, int province, int municipy, int noSegmentoCentro)
        {
            ThrCompany thrCompany = new ThrCompany();
            thrCompany.Companykey = companykey;
            thrCompany.CodigoCompany = codigoCompany;
            thrCompany.CuentaBancaria = cuentaBancaria;
            thrCompany.Province = province;
            thrCompany.Municipy = municipy;
            thrCompany.NoSegmentoCentro = noSegmentoCentro;
            return thrCompany;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Companykey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Companykey
        {
            get
            {
                int value = _Companykey;
                OnGetCompanykey(ref value);
                return value;
            }
            set
            {
                if (_Companykey != value)
                {
                  OnCompanykeyChanging(ref value);
                  ReportPropertyChanging("Companykey");
                  _Companykey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Companykey");
                  OnCompanykeyChanged();
              }
            }
        }
        private int _Companykey;
        partial void OnGetCompanykey(ref int value);
        partial void OnCompanykeyChanging(ref int value);
        partial void OnCompanykeyChanged();
    
        /// <summary>
        /// There are no comments for CodigoCompany in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CodigoCompany
        {
            get
            {
                string value = _CodigoCompany;
                OnGetCodigoCompany(ref value);
                return value;
            }
            set
            {
                if (_CodigoCompany != value)
                {
                  OnCodigoCompanyChanging(ref value);
                  ReportPropertyChanging("CodigoCompany");
                  _CodigoCompany = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CodigoCompany");
                  OnCodigoCompanyChanged();
              }
            }
        }
        private string _CodigoCompany;
        partial void OnGetCodigoCompany(ref string value);
        partial void OnCodigoCompanyChanging(ref string value);
        partial void OnCodigoCompanyChanged();
    
        /// <summary>
        /// There are no comments for Sector in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Sector
        {
            get
            {
                string value = _Sector;
                OnGetSector(ref value);
                return value;
            }
            set
            {
                if (_Sector != value)
                {
                  OnSectorChanging(ref value);
                  ReportPropertyChanging("Sector");
                  _Sector = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sector");
                  OnSectorChanged();
              }
            }
        }
        private string _Sector;
        partial void OnGetSector(ref string value);
        partial void OnSectorChanging(ref string value);
        partial void OnSectorChanged();
    
        /// <summary>
        /// There are no comments for CuentaBancaria in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CuentaBancaria
        {
            get
            {
                string value = _CuentaBancaria;
                OnGetCuentaBancaria(ref value);
                return value;
            }
            set
            {
                if (_CuentaBancaria != value)
                {
                  OnCuentaBancariaChanging(ref value);
                  ReportPropertyChanging("CuentaBancaria");
                  _CuentaBancaria = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CuentaBancaria");
                  OnCuentaBancariaChanged();
              }
            }
        }
        private string _CuentaBancaria;
        partial void OnGetCuentaBancaria(ref string value);
        partial void OnCuentaBancariaChanging(ref string value);
        partial void OnCuentaBancariaChanged();
    
        /// <summary>
        /// There are no comments for ContraValoPägoCuc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? ContraValoPägoCuc
        {
            get
            {
                decimal? value = _ContraValoPägoCuc;
                OnGetContraValoPägoCuc(ref value);
                return value;
            }
            set
            {
                if (_ContraValoPägoCuc != value)
                {
                  OnContraValoPägoCucChanging(ref value);
                  ReportPropertyChanging("ContraValoPägoCuc");
                  _ContraValoPägoCuc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ContraValoPägoCuc");
                  OnContraValoPägoCucChanged();
              }
            }
        }
        private decimal? _ContraValoPägoCuc;
        partial void OnGetContraValoPägoCuc(ref decimal? value);
        partial void OnContraValoPägoCucChanging(ref decimal? value);
        partial void OnContraValoPägoCucChanged();
    
        /// <summary>
        /// There are no comments for ContraEstipendioAlimenticio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? ContraEstipendioAlimenticio
        {
            get
            {
                decimal? value = _ContraEstipendioAlimenticio;
                OnGetContraEstipendioAlimenticio(ref value);
                return value;
            }
            set
            {
                if (_ContraEstipendioAlimenticio != value)
                {
                  OnContraEstipendioAlimenticioChanging(ref value);
                  ReportPropertyChanging("ContraEstipendioAlimenticio");
                  _ContraEstipendioAlimenticio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ContraEstipendioAlimenticio");
                  OnContraEstipendioAlimenticioChanged();
              }
            }
        }
        private decimal? _ContraEstipendioAlimenticio;
        partial void OnGetContraEstipendioAlimenticio(ref decimal? value);
        partial void OnContraEstipendioAlimenticioChanging(ref decimal? value);
        partial void OnContraEstipendioAlimenticioChanged();
    
        /// <summary>
        /// There are no comments for Province in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Province
        {
            get
            {
                int value = _Province;
                OnGetProvince(ref value);
                return value;
            }
            set
            {
                if (_Province != value)
                {
                  OnProvinceChanging(ref value);
                  ReportPropertyChanging("Province");
                  _Province = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Province");
                  OnProvinceChanged();
              }
            }
        }
        private int _Province;
        partial void OnGetProvince(ref int value);
        partial void OnProvinceChanging(ref int value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// There are no comments for Municipy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Municipy
        {
            get
            {
                int value = _Municipy;
                OnGetMunicipy(ref value);
                return value;
            }
            set
            {
                if (_Municipy != value)
                {
                  OnMunicipyChanging(ref value);
                  ReportPropertyChanging("Municipy");
                  _Municipy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Municipy");
                  OnMunicipyChanged();
              }
            }
        }
        private int _Municipy;
        partial void OnGetMunicipy(ref int value);
        partial void OnMunicipyChanging(ref int value);
        partial void OnMunicipyChanged();
    
        /// <summary>
        /// There are no comments for NoSegmentoCentro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NoSegmentoCentro
        {
            get
            {
                int value = _NoSegmentoCentro;
                OnGetNoSegmentoCentro(ref value);
                return value;
            }
            set
            {
                if (_NoSegmentoCentro != value)
                {
                  OnNoSegmentoCentroChanging(ref value);
                  ReportPropertyChanging("NoSegmentoCentro");
                  _NoSegmentoCentro = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NoSegmentoCentro");
                  OnNoSegmentoCentroChanged();
              }
            }
        }
        private int _NoSegmentoCentro;
        partial void OnGetNoSegmentoCentro(ref int value);
        partial void OnNoSegmentoCentroChanging(ref int value);
        partial void OnNoSegmentoCentroChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrCompetencia in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CompetenciaKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrCompetencia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrCompetencia : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrCompetencia object.
        /// </summary>
        /// <param name="competenciaKey">Initial value of CompetenciaKey.</param>
        /// <param name="competenciaID">Initial value of CompetenciaID.</param>
        /// <param name="tipoCompetencia">Initial value of TipoCompetencia.</param>
        public static ThrCompetencia CreateThrCompetencia(int competenciaKey, string competenciaID, int tipoCompetencia)
        {
            ThrCompetencia thrCompetencia = new ThrCompetencia();
            thrCompetencia.CompetenciaKey = competenciaKey;
            thrCompetencia.CompetenciaID = competenciaID;
            thrCompetencia.TipoCompetencia = tipoCompetencia;
            return thrCompetencia;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CompetenciaKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CompetenciaKey
        {
            get
            {
                int value = _CompetenciaKey;
                OnGetCompetenciaKey(ref value);
                return value;
            }
            set
            {
                if (_CompetenciaKey != value)
                {
                  OnCompetenciaKeyChanging(ref value);
                  ReportPropertyChanging("CompetenciaKey");
                  _CompetenciaKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CompetenciaKey");
                  OnCompetenciaKeyChanged();
              }
            }
        }
        private int _CompetenciaKey;
        partial void OnGetCompetenciaKey(ref int value);
        partial void OnCompetenciaKeyChanging(ref int value);
        partial void OnCompetenciaKeyChanged();
    
        /// <summary>
        /// There are no comments for CompetenciaID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompetenciaID
        {
            get
            {
                string value = _CompetenciaID;
                OnGetCompetenciaID(ref value);
                return value;
            }
            set
            {
                if (_CompetenciaID != value)
                {
                  OnCompetenciaIDChanging(ref value);
                  ReportPropertyChanging("CompetenciaID");
                  _CompetenciaID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompetenciaID");
                  OnCompetenciaIDChanged();
              }
            }
        }
        private string _CompetenciaID;
        partial void OnGetCompetenciaID(ref string value);
        partial void OnCompetenciaIDChanging(ref string value);
        partial void OnCompetenciaIDChanged();
    
        /// <summary>
        /// There are no comments for CompetenciaDescrip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CompetenciaDescrip
        {
            get
            {
                string value = _CompetenciaDescrip;
                OnGetCompetenciaDescrip(ref value);
                return value;
            }
            set
            {
                if (_CompetenciaDescrip != value)
                {
                  OnCompetenciaDescripChanging(ref value);
                  ReportPropertyChanging("CompetenciaDescrip");
                  _CompetenciaDescrip = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CompetenciaDescrip");
                  OnCompetenciaDescripChanged();
              }
            }
        }
        private string _CompetenciaDescrip;
        partial void OnGetCompetenciaDescrip(ref string value);
        partial void OnCompetenciaDescripChanging(ref string value);
        partial void OnCompetenciaDescripChanged();
    
        /// <summary>
        /// There are no comments for TipoCompetencia in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TipoCompetencia
        {
            get
            {
                int value = _TipoCompetencia;
                OnGetTipoCompetencia(ref value);
                return value;
            }
            set
            {
                if (_TipoCompetencia != value)
                {
                  OnTipoCompetenciaChanging(ref value);
                  ReportPropertyChanging("TipoCompetencia");
                  _TipoCompetencia = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TipoCompetencia");
                  OnTipoCompetenciaChanged();
              }
            }
        }
        private int _TipoCompetencia;
        partial void OnGetTipoCompetencia(ref int value);
        partial void OnTipoCompetenciaChanging(ref int value);
        partial void OnTipoCompetenciaChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrCompetenciaCargos in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrCompetenciaCargo_thrCompetencia", "ThrCompetenciaCargos")]
        public virtual EntityCollection<ThrCompetenciaCargo> ThrCompetenciaCargos
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrCompetenciaCargo>("Sage500AppModel.FK_thrCompetenciaCargo_thrCompetencia", "ThrCompetenciaCargos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrCompetenciaCargo>("Sage500AppModel.FK_thrCompetenciaCargo_thrCompetencia", "ThrCompetenciaCargos", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrCompetenciaCargo in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Positionkey
    /// Competenciakey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrCompetenciaCargo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrCompetenciaCargo : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrCompetenciaCargo object.
        /// </summary>
        /// <param name="positionkey">Initial value of Positionkey.</param>
        /// <param name="competenciakey">Initial value of Competenciakey.</param>
        /// <param name="required">Initial value of Required.</param>
        /// <param name="idnivel">Initial value of Idnivel.</param>
        public static ThrCompetenciaCargo CreateThrCompetenciaCargo(int positionkey, int competenciakey, short required, int idnivel)
        {
            ThrCompetenciaCargo thrCompetenciaCargo = new ThrCompetenciaCargo();
            thrCompetenciaCargo.Positionkey = positionkey;
            thrCompetenciaCargo.Competenciakey = competenciakey;
            thrCompetenciaCargo.Required = required;
            thrCompetenciaCargo.Idnivel = idnivel;
            return thrCompetenciaCargo;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Positionkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Positionkey
        {
            get
            {
                int value = _Positionkey;
                OnGetPositionkey(ref value);
                return value;
            }
            set
            {
                if (_Positionkey != value)
                {
                  OnPositionkeyChanging(ref value);
                  ReportPropertyChanging("Positionkey");
                  _Positionkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Positionkey");
                  OnPositionkeyChanged();
              }
            }
        }
        private int _Positionkey;
        partial void OnGetPositionkey(ref int value);
        partial void OnPositionkeyChanging(ref int value);
        partial void OnPositionkeyChanged();
    
        /// <summary>
        /// There are no comments for Competenciakey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Competenciakey
        {
            get
            {
                int value = _Competenciakey;
                OnGetCompetenciakey(ref value);
                return value;
            }
            set
            {
                if (_Competenciakey != value)
                {
                  OnCompetenciakeyChanging(ref value);
                  ReportPropertyChanging("Competenciakey");
                  _Competenciakey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Competenciakey");
                  OnCompetenciakeyChanged();
              }
            }
        }
        private int _Competenciakey;
        partial void OnGetCompetenciakey(ref int value);
        partial void OnCompetenciakeyChanging(ref int value);
        partial void OnCompetenciakeyChanged();
    
        /// <summary>
        /// There are no comments for Required in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Required
        {
            get
            {
                short value = _Required;
                OnGetRequired(ref value);
                return value;
            }
            set
            {
                if (_Required != value)
                {
                  OnRequiredChanging(ref value);
                  ReportPropertyChanging("Required");
                  _Required = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Required");
                  OnRequiredChanged();
              }
            }
        }
        private short _Required;
        partial void OnGetRequired(ref short value);
        partial void OnRequiredChanging(ref short value);
        partial void OnRequiredChanged();
    
        /// <summary>
        /// There are no comments for Idnivel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Idnivel
        {
            get
            {
                int value = _Idnivel;
                OnGetIdnivel(ref value);
                return value;
            }
            set
            {
                if (_Idnivel != value)
                {
                  OnIdnivelChanging(ref value);
                  ReportPropertyChanging("Idnivel");
                  _Idnivel = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Idnivel");
                  OnIdnivelChanged();
              }
            }
        }
        private int _Idnivel;
        partial void OnGetIdnivel(ref int value);
        partial void OnIdnivelChanging(ref int value);
        partial void OnIdnivelChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrPosition in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrCompetenciaCargo_thrPositions", "ThrPosition")]
        public virtual ThrPosition ThrPosition
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrCompetenciaCargo_thrPositions", "ThrPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrCompetenciaCargo_thrPositions", "ThrPosition").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPosition in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrPosition> ThrPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrCompetenciaCargo_thrPositions", "ThrPosition");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrPosition>("Sage500AppModel.FK_thrCompetenciaCargo_thrPositions", "ThrPosition", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrCompetenciaCargo_thrPositions", "ThrPosition").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrCompetencia in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrCompetenciaCargo_thrCompetencia", "ThrCompetencia")]
        public virtual ThrCompetencia ThrCompetencia
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrCompetencia>("Sage500AppModel.FK_thrCompetenciaCargo_thrCompetencia", "ThrCompetencia").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrCompetencia>("Sage500AppModel.FK_thrCompetenciaCargo_thrCompetencia", "ThrCompetencia").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrCompetencia in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrCompetencia> ThrCompetenciaReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrCompetencia>("Sage500AppModel.FK_thrCompetenciaCargo_thrCompetencia", "ThrCompetencia");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrCompetencia>("Sage500AppModel.FK_thrCompetenciaCargo_thrCompetencia", "ThrCompetencia", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrCompetencia>("Sage500AppModel.FK_thrCompetenciaCargo_thrCompetencia", "ThrCompetencia").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrCulturalLevel in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CulturalLevelKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrCulturalLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrCulturalLevel : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrCulturalLevel object.
        /// </summary>
        /// <param name="culturalLevelKey">Initial value of CulturalLevelKey.</param>
        /// <param name="culturalID">Initial value of CulturalID.</param>
        public static ThrCulturalLevel CreateThrCulturalLevel(short culturalLevelKey, string culturalID)
        {
            ThrCulturalLevel thrCulturalLevel = new ThrCulturalLevel();
            thrCulturalLevel.CulturalLevelKey = culturalLevelKey;
            thrCulturalLevel.CulturalID = culturalID;
            return thrCulturalLevel;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CulturalLevelKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CulturalLevelKey
        {
            get
            {
                short value = _CulturalLevelKey;
                OnGetCulturalLevelKey(ref value);
                return value;
            }
            set
            {
                if (_CulturalLevelKey != value)
                {
                  OnCulturalLevelKeyChanging(ref value);
                  ReportPropertyChanging("CulturalLevelKey");
                  _CulturalLevelKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CulturalLevelKey");
                  OnCulturalLevelKeyChanged();
              }
            }
        }
        private short _CulturalLevelKey;
        partial void OnGetCulturalLevelKey(ref short value);
        partial void OnCulturalLevelKeyChanging(ref short value);
        partial void OnCulturalLevelKeyChanged();
    
        /// <summary>
        /// There are no comments for CulturalID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CulturalID
        {
            get
            {
                string value = _CulturalID;
                OnGetCulturalID(ref value);
                return value;
            }
            set
            {
                if (_CulturalID != value)
                {
                  OnCulturalIDChanging(ref value);
                  ReportPropertyChanging("CulturalID");
                  _CulturalID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CulturalID");
                  OnCulturalIDChanged();
              }
            }
        }
        private string _CulturalID;
        partial void OnGetCulturalID(ref string value);
        partial void OnCulturalIDChanging(ref string value);
        partial void OnCulturalIDChanged();
    
        /// <summary>
        /// There are no comments for CulturalDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CulturalDesc
        {
            get
            {
                string value = _CulturalDesc;
                OnGetCulturalDesc(ref value);
                return value;
            }
            set
            {
                if (_CulturalDesc != value)
                {
                  OnCulturalDescChanging(ref value);
                  ReportPropertyChanging("CulturalDesc");
                  _CulturalDesc = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CulturalDesc");
                  OnCulturalDescChanged();
              }
            }
        }
        private string _CulturalDesc;
        partial void OnGetCulturalDesc(ref string value);
        partial void OnCulturalDescChanging(ref string value);
        partial void OnCulturalDescChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrEscalaGroup in the schema.
    /// </summary>
    /// <KeyProperties>
    /// EscalaGroupkey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrEscalaGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrEscalaGroup : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrEscalaGroup object.
        /// </summary>
        /// <param name="escalaGroupkey">Initial value of EscalaGroupkey.</param>
        /// <param name="escalaGroupID">Initial value of EscalaGroupID.</param>
        /// <param name="escalaSalario">Initial value of EscalaSalario.</param>
        public static ThrEscalaGroup CreateThrEscalaGroup(short escalaGroupkey, string escalaGroupID, decimal escalaSalario)
        {
            ThrEscalaGroup thrEscalaGroup = new ThrEscalaGroup();
            thrEscalaGroup.EscalaGroupkey = escalaGroupkey;
            thrEscalaGroup.EscalaGroupID = escalaGroupID;
            thrEscalaGroup.EscalaSalario = escalaSalario;
            return thrEscalaGroup;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for EscalaGroupkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short EscalaGroupkey
        {
            get
            {
                short value = _EscalaGroupkey;
                OnGetEscalaGroupkey(ref value);
                return value;
            }
            set
            {
                if (_EscalaGroupkey != value)
                {
                  OnEscalaGroupkeyChanging(ref value);
                  ReportPropertyChanging("EscalaGroupkey");
                  _EscalaGroupkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EscalaGroupkey");
                  OnEscalaGroupkeyChanged();
              }
            }
        }
        private short _EscalaGroupkey;
        partial void OnGetEscalaGroupkey(ref short value);
        partial void OnEscalaGroupkeyChanging(ref short value);
        partial void OnEscalaGroupkeyChanged();
    
        /// <summary>
        /// There are no comments for EscalaGroupID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string EscalaGroupID
        {
            get
            {
                string value = _EscalaGroupID;
                OnGetEscalaGroupID(ref value);
                return value;
            }
            set
            {
                if (_EscalaGroupID != value)
                {
                  OnEscalaGroupIDChanging(ref value);
                  ReportPropertyChanging("EscalaGroupID");
                  _EscalaGroupID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EscalaGroupID");
                  OnEscalaGroupIDChanged();
              }
            }
        }
        private string _EscalaGroupID;
        partial void OnGetEscalaGroupID(ref string value);
        partial void OnEscalaGroupIDChanging(ref string value);
        partial void OnEscalaGroupIDChanged();
    
        /// <summary>
        /// There are no comments for EscalaSalario in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal EscalaSalario
        {
            get
            {
                decimal value = _EscalaSalario;
                OnGetEscalaSalario(ref value);
                return value;
            }
            set
            {
                if (_EscalaSalario != value)
                {
                  OnEscalaSalarioChanging(ref value);
                  ReportPropertyChanging("EscalaSalario");
                  _EscalaSalario = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EscalaSalario");
                  OnEscalaSalarioChanged();
              }
            }
        }
        private decimal _EscalaSalario;
        partial void OnGetEscalaSalario(ref decimal value);
        partial void OnEscalaSalarioChanging(ref decimal value);
        partial void OnEscalaSalarioChanged();
    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Descripcion
        {
            get
            {
                string value = _Descripcion;
                OnGetDescripcion(ref value);
                return value;
            }
            set
            {
                if (_Descripcion != value)
                {
                  OnDescripcionChanging(ref value);
                  ReportPropertyChanging("Descripcion");
                  _Descripcion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Descripcion");
                  OnDescripcionChanged();
              }
            }
        }
        private string _Descripcion;
        partial void OnGetDescripcion(ref string value);
        partial void OnDescripcionChanging(ref string value);
        partial void OnDescripcionChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrInvestigationCategory in the schema.
    /// </summary>
    /// <KeyProperties>
    /// InvestigationCategoryKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrInvestigationCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrInvestigationCategory : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrInvestigationCategory object.
        /// </summary>
        /// <param name="investigationCategoryKey">Initial value of InvestigationCategoryKey.</param>
        /// <param name="categoryId">Initial value of CategoryId.</param>
        public static ThrInvestigationCategory CreateThrInvestigationCategory(short investigationCategoryKey, string categoryId)
        {
            ThrInvestigationCategory thrInvestigationCategory = new ThrInvestigationCategory();
            thrInvestigationCategory.InvestigationCategoryKey = investigationCategoryKey;
            thrInvestigationCategory.CategoryId = categoryId;
            return thrInvestigationCategory;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for InvestigationCategoryKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InvestigationCategoryKey
        {
            get
            {
                short value = _InvestigationCategoryKey;
                OnGetInvestigationCategoryKey(ref value);
                return value;
            }
            set
            {
                if (_InvestigationCategoryKey != value)
                {
                  OnInvestigationCategoryKeyChanging(ref value);
                  ReportPropertyChanging("InvestigationCategoryKey");
                  _InvestigationCategoryKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvestigationCategoryKey");
                  OnInvestigationCategoryKeyChanged();
              }
            }
        }
        private short _InvestigationCategoryKey;
        partial void OnGetInvestigationCategoryKey(ref short value);
        partial void OnInvestigationCategoryKeyChanging(ref short value);
        partial void OnInvestigationCategoryKeyChanged();
    
        /// <summary>
        /// There are no comments for CategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CategoryId
        {
            get
            {
                string value = _CategoryId;
                OnGetCategoryId(ref value);
                return value;
            }
            set
            {
                if (_CategoryId != value)
                {
                  OnCategoryIdChanging(ref value);
                  ReportPropertyChanging("CategoryId");
                  _CategoryId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CategoryId");
                  OnCategoryIdChanged();
              }
            }
        }
        private string _CategoryId;
        partial void OnGetCategoryId(ref string value);
        partial void OnCategoryIdChanging(ref string value);
        partial void OnCategoryIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrMunicipality in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Municipalitykey
    /// Statekey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrMunicipality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrMunicipality : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrMunicipality object.
        /// </summary>
        /// <param name="municipalitykey">Initial value of Municipalitykey.</param>
        /// <param name="statekey">Initial value of Statekey.</param>
        /// <param name="municipalityID">Initial value of MunicipalityID.</param>
        public static ThrMunicipality CreateThrMunicipality(short municipalitykey, short statekey, string municipalityID)
        {
            ThrMunicipality thrMunicipality = new ThrMunicipality();
            thrMunicipality.Municipalitykey = municipalitykey;
            thrMunicipality.Statekey = statekey;
            thrMunicipality.MunicipalityID = municipalityID;
            return thrMunicipality;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Municipalitykey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Municipalitykey
        {
            get
            {
                short value = _Municipalitykey;
                OnGetMunicipalitykey(ref value);
                return value;
            }
            set
            {
                if (_Municipalitykey != value)
                {
                  OnMunicipalitykeyChanging(ref value);
                  ReportPropertyChanging("Municipalitykey");
                  _Municipalitykey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Municipalitykey");
                  OnMunicipalitykeyChanged();
              }
            }
        }
        private short _Municipalitykey;
        partial void OnGetMunicipalitykey(ref short value);
        partial void OnMunicipalitykeyChanging(ref short value);
        partial void OnMunicipalitykeyChanged();
    
        /// <summary>
        /// There are no comments for Statekey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Statekey
        {
            get
            {
                short value = _Statekey;
                OnGetStatekey(ref value);
                return value;
            }
            set
            {
                if (_Statekey != value)
                {
                  OnStatekeyChanging(ref value);
                  ReportPropertyChanging("Statekey");
                  _Statekey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Statekey");
                  OnStatekeyChanged();
              }
            }
        }
        private short _Statekey;
        partial void OnGetStatekey(ref short value);
        partial void OnStatekeyChanging(ref short value);
        partial void OnStatekeyChanged();
    
        /// <summary>
        /// There are no comments for MunicipalityID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string MunicipalityID
        {
            get
            {
                string value = _MunicipalityID;
                OnGetMunicipalityID(ref value);
                return value;
            }
            set
            {
                if (_MunicipalityID != value)
                {
                  OnMunicipalityIDChanging(ref value);
                  ReportPropertyChanging("MunicipalityID");
                  _MunicipalityID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("MunicipalityID");
                  OnMunicipalityIDChanged();
              }
            }
        }
        private string _MunicipalityID;
        partial void OnGetMunicipalityID(ref string value);
        partial void OnMunicipalityIDChanging(ref string value);
        partial void OnMunicipalityIDChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrNacionality in the schema.
    /// </summary>
    /// <KeyProperties>
    /// NacionalityKey
    /// NacionalityName
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrNacionality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrNacionality : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrNacionality object.
        /// </summary>
        /// <param name="nacionalityKey">Initial value of NacionalityKey.</param>
        /// <param name="nacionalityName">Initial value of NacionalityName.</param>
        public static ThrNacionality CreateThrNacionality(short nacionalityKey, string nacionalityName)
        {
            ThrNacionality thrNacionality = new ThrNacionality();
            thrNacionality.NacionalityKey = nacionalityKey;
            thrNacionality.NacionalityName = nacionalityName;
            return thrNacionality;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NacionalityKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short NacionalityKey
        {
            get
            {
                short value = _NacionalityKey;
                OnGetNacionalityKey(ref value);
                return value;
            }
            set
            {
                if (_NacionalityKey != value)
                {
                  OnNacionalityKeyChanging(ref value);
                  ReportPropertyChanging("NacionalityKey");
                  _NacionalityKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NacionalityKey");
                  OnNacionalityKeyChanged();
              }
            }
        }
        private short _NacionalityKey;
        partial void OnGetNacionalityKey(ref short value);
        partial void OnNacionalityKeyChanging(ref short value);
        partial void OnNacionalityKeyChanged();
    
        /// <summary>
        /// There are no comments for NacionalityName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string NacionalityName
        {
            get
            {
                string value = _NacionalityName;
                OnGetNacionalityName(ref value);
                return value;
            }
            set
            {
                if (_NacionalityName != value)
                {
                  OnNacionalityNameChanging(ref value);
                  ReportPropertyChanging("NacionalityName");
                  _NacionalityName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NacionalityName");
                  OnNacionalityNameChanged();
              }
            }
        }
        private string _NacionalityName;
        partial void OnGetNacionalityName(ref string value);
        partial void OnNacionalityNameChanging(ref string value);
        partial void OnNacionalityNameChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrOcupationalCategory in the schema.
    /// </summary>
    /// <KeyProperties>
    /// OcupationCategoryKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrOcupationalCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrOcupationalCategory : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrOcupationalCategory object.
        /// </summary>
        /// <param name="ocupationCategoryKey">Initial value of OcupationCategoryKey.</param>
        /// <param name="categoryID">Initial value of CategoryID.</param>
        /// <param name="categoryPay">Initial value of CategoryPay.</param>
        /// <param name="categoryPerfeccion">Initial value of CategoryPerfeccion.</param>
        public static ThrOcupationalCategory CreateThrOcupationalCategory(short ocupationCategoryKey, string categoryID, decimal categoryPay, decimal categoryPerfeccion)
        {
            ThrOcupationalCategory thrOcupationalCategory = new ThrOcupationalCategory();
            thrOcupationalCategory.OcupationCategoryKey = ocupationCategoryKey;
            thrOcupationalCategory.CategoryID = categoryID;
            thrOcupationalCategory.CategoryPay = categoryPay;
            thrOcupationalCategory.CategoryPerfeccion = categoryPerfeccion;
            return thrOcupationalCategory;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for OcupationCategoryKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short OcupationCategoryKey
        {
            get
            {
                short value = _OcupationCategoryKey;
                OnGetOcupationCategoryKey(ref value);
                return value;
            }
            set
            {
                if (_OcupationCategoryKey != value)
                {
                  OnOcupationCategoryKeyChanging(ref value);
                  ReportPropertyChanging("OcupationCategoryKey");
                  _OcupationCategoryKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OcupationCategoryKey");
                  OnOcupationCategoryKeyChanged();
              }
            }
        }
        private short _OcupationCategoryKey;
        partial void OnGetOcupationCategoryKey(ref short value);
        partial void OnOcupationCategoryKeyChanging(ref short value);
        partial void OnOcupationCategoryKeyChanged();
    
        /// <summary>
        /// There are no comments for CategoryID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CategoryID
        {
            get
            {
                string value = _CategoryID;
                OnGetCategoryID(ref value);
                return value;
            }
            set
            {
                if (_CategoryID != value)
                {
                  OnCategoryIDChanging(ref value);
                  ReportPropertyChanging("CategoryID");
                  _CategoryID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CategoryID");
                  OnCategoryIDChanged();
              }
            }
        }
        private string _CategoryID;
        partial void OnGetCategoryID(ref string value);
        partial void OnCategoryIDChanging(ref string value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// There are no comments for CategoryPay in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CategoryPay
        {
            get
            {
                decimal value = _CategoryPay;
                OnGetCategoryPay(ref value);
                return value;
            }
            set
            {
                if (_CategoryPay != value)
                {
                  OnCategoryPayChanging(ref value);
                  ReportPropertyChanging("CategoryPay");
                  _CategoryPay = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CategoryPay");
                  OnCategoryPayChanged();
              }
            }
        }
        private decimal _CategoryPay;
        partial void OnGetCategoryPay(ref decimal value);
        partial void OnCategoryPayChanging(ref decimal value);
        partial void OnCategoryPayChanged();
    
        /// <summary>
        /// There are no comments for CategoryPerfeccion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CategoryPerfeccion
        {
            get
            {
                decimal value = _CategoryPerfeccion;
                OnGetCategoryPerfeccion(ref value);
                return value;
            }
            set
            {
                if (_CategoryPerfeccion != value)
                {
                  OnCategoryPerfeccionChanging(ref value);
                  ReportPropertyChanging("CategoryPerfeccion");
                  _CategoryPerfeccion = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CategoryPerfeccion");
                  OnCategoryPerfeccionChanged();
              }
            }
        }
        private decimal _CategoryPerfeccion;
        partial void OnGetCategoryPerfeccion(ref decimal value);
        partial void OnCategoryPerfeccionChanging(ref decimal value);
        partial void OnCategoryPerfeccionChanged();
    
        /// <summary>
        /// There are no comments for CategoryDescripcion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CategoryDescripcion
        {
            get
            {
                string value = _CategoryDescripcion;
                OnGetCategoryDescripcion(ref value);
                return value;
            }
            set
            {
                if (_CategoryDescripcion != value)
                {
                  OnCategoryDescripcionChanging(ref value);
                  ReportPropertyChanging("CategoryDescripcion");
                  _CategoryDescripcion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CategoryDescripcion");
                  OnCategoryDescripcionChanged();
              }
            }
        }
        private string _CategoryDescripcion;
        partial void OnGetCategoryDescripcion(ref string value);
        partial void OnCategoryDescripcionChanging(ref string value);
        partial void OnCategoryDescripcionChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrOcupationClasification in the schema.
    /// </summary>
    /// <KeyProperties>
    /// OcupationClasificationkey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrOcupationClasification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrOcupationClasification : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrOcupationClasification object.
        /// </summary>
        /// <param name="ocupationClasificationkey">Initial value of OcupationClasificationkey.</param>
        /// <param name="specialtyID">Initial value of SpecialtyID.</param>
        public static ThrOcupationClasification CreateThrOcupationClasification(short ocupationClasificationkey, string specialtyID)
        {
            ThrOcupationClasification thrOcupationClasification = new ThrOcupationClasification();
            thrOcupationClasification.OcupationClasificationkey = ocupationClasificationkey;
            thrOcupationClasification.SpecialtyID = specialtyID;
            return thrOcupationClasification;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for OcupationClasificationkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short OcupationClasificationkey
        {
            get
            {
                short value = _OcupationClasificationkey;
                OnGetOcupationClasificationkey(ref value);
                return value;
            }
            set
            {
                if (_OcupationClasificationkey != value)
                {
                  OnOcupationClasificationkeyChanging(ref value);
                  ReportPropertyChanging("OcupationClasificationkey");
                  _OcupationClasificationkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OcupationClasificationkey");
                  OnOcupationClasificationkeyChanged();
              }
            }
        }
        private short _OcupationClasificationkey;
        partial void OnGetOcupationClasificationkey(ref short value);
        partial void OnOcupationClasificationkeyChanging(ref short value);
        partial void OnOcupationClasificationkeyChanged();
    
        /// <summary>
        /// There are no comments for SpecialtyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SpecialtyID
        {
            get
            {
                string value = _SpecialtyID;
                OnGetSpecialtyID(ref value);
                return value;
            }
            set
            {
                if (_SpecialtyID != value)
                {
                  OnSpecialtyIDChanging(ref value);
                  ReportPropertyChanging("SpecialtyID");
                  _SpecialtyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SpecialtyID");
                  OnSpecialtyIDChanged();
              }
            }
        }
        private string _SpecialtyID;
        partial void OnGetSpecialtyID(ref string value);
        partial void OnSpecialtyIDChanging(ref string value);
        partial void OnSpecialtyIDChanged();
    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Descripcion
        {
            get
            {
                string value = _Descripcion;
                OnGetDescripcion(ref value);
                return value;
            }
            set
            {
                if (_Descripcion != value)
                {
                  OnDescripcionChanging(ref value);
                  ReportPropertyChanging("Descripcion");
                  _Descripcion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Descripcion");
                  OnDescripcionChanged();
              }
            }
        }
        private string _Descripcion;
        partial void OnGetDescripcion(ref string value);
        partial void OnDescripcionChanging(ref string value);
        partial void OnDescripcionChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrOrganizativeUnit in the schema.
    /// </summary>
    /// <KeyProperties>
    /// OrgUnitKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrOrganizativeUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Unidades Organizativas")]
    public partial class ThrOrganizativeUnit : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrOrganizativeUnit object.
        /// </summary>
        /// <param name="orgUnitKey">Initial value of OrgUnitKey.</param>
        /// <param name="orgUnitID">Initial value of OrgUnitID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="costCenter">Initial value of CostCenter.</param>
        /// <param name="valorSegmento">Initial value of ValorSegmento.</param>
        public static ThrOrganizativeUnit CreateThrOrganizativeUnit(int orgUnitKey, string orgUnitID, string companyID, string name, string costCenter, int valorSegmento)
        {
            ThrOrganizativeUnit thrOrganizativeUnit = new ThrOrganizativeUnit();
            thrOrganizativeUnit.OrgUnitKey = orgUnitKey;
            thrOrganizativeUnit.OrgUnitID = orgUnitID;
            thrOrganizativeUnit.CompanyID = companyID;
            thrOrganizativeUnit.Name = name;
            thrOrganizativeUnit.CostCenter = costCenter;
            thrOrganizativeUnit.ValorSegmento = valorSegmento;
            return thrOrganizativeUnit;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for OrgUnitKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual int OrgUnitKey
        {
            get
            {
                int value = _OrgUnitKey;
                OnGetOrgUnitKey(ref value);
                return value;
            }
            set
            {
                if (_OrgUnitKey != value)
                {
                  OnOrgUnitKeyChanging(ref value);
                  ReportPropertyChanging("OrgUnitKey");
                  _OrgUnitKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrgUnitKey");
                  OnOrgUnitKeyChanged();
              }
            }
        }
        private int _OrgUnitKey;
        partial void OnGetOrgUnitKey(ref int value);
        partial void OnOrgUnitKeyChanging(ref int value);
        partial void OnOrgUnitKeyChanged();
    
        /// <summary>
        /// There are no comments for OrgUnitID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Código Unidad")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Código Unidad")]
        public virtual string OrgUnitID
        {
            get
            {
                string value = _OrgUnitID;
                OnGetOrgUnitID(ref value);
                return value;
            }
            set
            {
                if (_OrgUnitID != value)
                {
                  OnOrgUnitIDChanging(ref value);
                  ReportPropertyChanging("OrgUnitID");
                  _OrgUnitID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("OrgUnitID");
                  OnOrgUnitIDChanged();
              }
            }
        }
        private string _OrgUnitID;
        partial void OnGetOrgUnitID(ref string value);
        partial void OnOrgUnitIDChanging(ref string value);
        partial void OnOrgUnitIDChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Compañía")]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Nombre Unidad Organizativa")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Nombre Unidad Organizativa")]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for CostCenter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string CostCenter
        {
            get
            {
                string value = _CostCenter;
                OnGetCostCenter(ref value);
                return value;
            }
            set
            {
                if (_CostCenter != value)
                {
                  OnCostCenterChanging(ref value);
                  ReportPropertyChanging("CostCenter");
                  _CostCenter = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CostCenter");
                  OnCostCenterChanged();
              }
            }
        }
        private string _CostCenter;
        partial void OnGetCostCenter(ref string value);
        partial void OnCostCenterChanging(ref string value);
        partial void OnCostCenterChanged();
    
        /// <summary>
        /// There are no comments for ValorSegmento in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual int ValorSegmento
        {
            get
            {
                int value = _ValorSegmento;
                OnGetValorSegmento(ref value);
                return value;
            }
            set
            {
                if (_ValorSegmento != value)
                {
                  OnValorSegmentoChanging(ref value);
                  ReportPropertyChanging("ValorSegmento");
                  _ValorSegmento = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValorSegmento");
                  OnValorSegmentoChanged();
              }
            }
        }
        private int _ValorSegmento;
        partial void OnGetValorSegmento(ref int value);
        partial void OnValorSegmentoChanging(ref int value);
        partial void OnValorSegmentoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrOrgUnitPositions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_OrgUnitPositions_OrganizativeUnits", "ThrOrgUnitPositions")]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual EntityCollection<ThrOrgUnitPosition> ThrOrgUnitPositions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrOrgUnitPosition>("Sage500AppModel.FK_OrgUnitPositions_OrganizativeUnits", "ThrOrgUnitPositions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrOrgUnitPosition>("Sage500AppModel.FK_OrgUnitPositions_OrganizativeUnits", "ThrOrgUnitPositions", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPeople in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrOrganizativeUnit_ThrPeople", "ThrPeople")]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual EntityCollection<ThrPeople> ThrPeople
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeople>("Sage500AppModel.ThrOrganizativeUnit_ThrPeople", "ThrPeople");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeople>("Sage500AppModel.ThrOrganizativeUnit_ThrPeople", "ThrPeople", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrOrgUnitPosition in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PositionKey
    /// OrgUnitKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrOrgUnitPosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrOrgUnitPosition : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrOrgUnitPosition object.
        /// </summary>
        /// <param name="positionKey">Initial value of PositionKey.</param>
        /// <param name="orgUnitKey">Initial value of OrgUnitKey.</param>
        public static ThrOrgUnitPosition CreateThrOrgUnitPosition(int positionKey, int orgUnitKey)
        {
            ThrOrgUnitPosition thrOrgUnitPosition = new ThrOrgUnitPosition();
            thrOrgUnitPosition.PositionKey = positionKey;
            thrOrgUnitPosition.OrgUnitKey = orgUnitKey;
            return thrOrgUnitPosition;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PositionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PositionKey
        {
            get
            {
                int value = _PositionKey;
                OnGetPositionKey(ref value);
                return value;
            }
            set
            {
                if (_PositionKey != value)
                {
                  OnPositionKeyChanging(ref value);
                  ReportPropertyChanging("PositionKey");
                  _PositionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PositionKey");
                  OnPositionKeyChanged();
              }
            }
        }
        private int _PositionKey;
        partial void OnGetPositionKey(ref int value);
        partial void OnPositionKeyChanging(ref int value);
        partial void OnPositionKeyChanged();
    
        /// <summary>
        /// There are no comments for OrgUnitKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OrgUnitKey
        {
            get
            {
                int value = _OrgUnitKey;
                OnGetOrgUnitKey(ref value);
                return value;
            }
            set
            {
                if (_OrgUnitKey != value)
                {
                  OnOrgUnitKeyChanging(ref value);
                  ReportPropertyChanging("OrgUnitKey");
                  _OrgUnitKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrgUnitKey");
                  OnOrgUnitKeyChanged();
              }
            }
        }
        private int _OrgUnitKey;
        partial void OnGetOrgUnitKey(ref int value);
        partial void OnOrgUnitKeyChanging(ref int value);
        partial void OnOrgUnitKeyChanged();
    
        /// <summary>
        /// There are no comments for Qty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Qty
        {
            get
            {
                int? value = _Qty;
                OnGetQty(ref value);
                return value;
            }
            set
            {
                if (_Qty != value)
                {
                  OnQtyChanging(ref value);
                  ReportPropertyChanging("Qty");
                  _Qty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Qty");
                  OnQtyChanged();
              }
            }
        }
        private int? _Qty = 1;
        partial void OnGetQty(ref int? value);
        partial void OnQtyChanging(ref int? value);
        partial void OnQtyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrPosition in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_OrgUnitPositions_Positions", "ThrPosition")]
        public virtual ThrPosition ThrPosition
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_OrgUnitPositions_Positions", "ThrPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_OrgUnitPositions_Positions", "ThrPosition").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPosition in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrPosition> ThrPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_OrgUnitPositions_Positions", "ThrPosition");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrPosition>("Sage500AppModel.FK_OrgUnitPositions_Positions", "ThrPosition", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_OrgUnitPositions_Positions", "ThrPosition").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrOrganizativeUnit in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_OrgUnitPositions_OrganizativeUnits", "ThrOrganizativeUnit")]
        public virtual ThrOrganizativeUnit ThrOrganizativeUnit
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrOrganizativeUnit>("Sage500AppModel.FK_OrgUnitPositions_OrganizativeUnits", "ThrOrganizativeUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrOrganizativeUnit>("Sage500AppModel.FK_OrgUnitPositions_OrganizativeUnits", "ThrOrganizativeUnit").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrOrganizativeUnit in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrOrganizativeUnit> ThrOrganizativeUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrOrganizativeUnit>("Sage500AppModel.FK_OrgUnitPositions_OrganizativeUnits", "ThrOrganizativeUnit");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrOrganizativeUnit>("Sage500AppModel.FK_OrgUnitPositions_OrganizativeUnits", "ThrOrganizativeUnit", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrOrganizativeUnit>("Sage500AppModel.FK_OrgUnitPositions_OrganizativeUnits", "ThrOrganizativeUnit").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPeopleMovements in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrOrgUnitPosition_ThrPeopleMovement", "ThrPeopleMovements")]
        public virtual EntityCollection<ThrPeopleMovement> ThrPeopleMovements
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeopleMovement>("Sage500AppModel.ThrOrgUnitPosition_ThrPeopleMovement", "ThrPeopleMovements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeopleMovement>("Sage500AppModel.ThrOrgUnitPosition_ThrPeopleMovement", "ThrPeopleMovements", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrPositionRisk in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PositionKey
    /// RiskKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrPositionRisk")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrPositionRisk : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrPositionRisk object.
        /// </summary>
        /// <param name="positionKey">Initial value of PositionKey.</param>
        /// <param name="riskKey">Initial value of RiskKey.</param>
        /// <param name="idnivel">Initial value of Idnivel.</param>
        public static ThrPositionRisk CreateThrPositionRisk(int positionKey, int riskKey, int idnivel)
        {
            ThrPositionRisk thrPositionRisk = new ThrPositionRisk();
            thrPositionRisk.PositionKey = positionKey;
            thrPositionRisk.RiskKey = riskKey;
            thrPositionRisk.Idnivel = idnivel;
            return thrPositionRisk;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PositionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PositionKey
        {
            get
            {
                int value = _PositionKey;
                OnGetPositionKey(ref value);
                return value;
            }
            set
            {
                if (_PositionKey != value)
                {
                  OnPositionKeyChanging(ref value);
                  ReportPropertyChanging("PositionKey");
                  _PositionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PositionKey");
                  OnPositionKeyChanged();
              }
            }
        }
        private int _PositionKey;
        partial void OnGetPositionKey(ref int value);
        partial void OnPositionKeyChanging(ref int value);
        partial void OnPositionKeyChanged();
    
        /// <summary>
        /// There are no comments for RiskKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RiskKey
        {
            get
            {
                int value = _RiskKey;
                OnGetRiskKey(ref value);
                return value;
            }
            set
            {
                if (_RiskKey != value)
                {
                  OnRiskKeyChanging(ref value);
                  ReportPropertyChanging("RiskKey");
                  _RiskKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RiskKey");
                  OnRiskKeyChanged();
              }
            }
        }
        private int _RiskKey;
        partial void OnGetRiskKey(ref int value);
        partial void OnRiskKeyChanging(ref int value);
        partial void OnRiskKeyChanged();
    
        /// <summary>
        /// There are no comments for Idnivel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Idnivel
        {
            get
            {
                int value = _Idnivel;
                OnGetIdnivel(ref value);
                return value;
            }
            set
            {
                if (_Idnivel != value)
                {
                  OnIdnivelChanging(ref value);
                  ReportPropertyChanging("Idnivel");
                  _Idnivel = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Idnivel");
                  OnIdnivelChanged();
              }
            }
        }
        private int _Idnivel;
        partial void OnGetIdnivel(ref int value);
        partial void OnIdnivelChanging(ref int value);
        partial void OnIdnivelChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrRisk in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrPositionRisk_thrRisk", "ThrRisk")]
        public virtual ThrRisk ThrRisk
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrRisk>("Sage500AppModel.FK_thrPositionRisk_thrRisk", "ThrRisk").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrRisk>("Sage500AppModel.FK_thrPositionRisk_thrRisk", "ThrRisk").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrRisk in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrRisk> ThrRiskReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrRisk>("Sage500AppModel.FK_thrPositionRisk_thrRisk", "ThrRisk");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrRisk>("Sage500AppModel.FK_thrPositionRisk_thrRisk", "ThrRisk", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrRisk>("Sage500AppModel.FK_thrPositionRisk_thrRisk", "ThrRisk").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPosition in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrPositionRisk_thrPositions", "ThrPosition")]
        public virtual ThrPosition ThrPosition
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrPositionRisk_thrPositions", "ThrPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrPositionRisk_thrPositions", "ThrPosition").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPosition in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrPosition> ThrPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrPositionRisk_thrPositions", "ThrPosition");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrPosition>("Sage500AppModel.FK_thrPositionRisk_thrPositions", "ThrPosition", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrPositionRisk_thrPositions", "ThrPosition").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrPosition in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PositionKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrPosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupTextReturn]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Búsqueda de Cargos")]
    public partial class ThrPosition : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrPosition object.
        /// </summary>
        /// <param name="positionKey">Initial value of PositionKey.</param>
        /// <param name="codigo">Initial value of Codigo.</param>
        /// <param name="positionID">Initial value of PositionID.</param>
        /// <param name="escalaGroupkey">Initial value of EscalaGroupkey.</param>
        /// <param name="clasificationWorker">Initial value of ClasificationWorker.</param>
        /// <param name="estado">Initial value of Estado.</param>
        /// <param name="ocupationCategoryKey">Initial value of OcupationCategoryKey.</param>
        /// <param name="hoursExtrasPay">Initial value of HoursExtrasPay.</param>
        /// <param name="estimulacionCuc">Initial value of EstimulacionCuc.</param>
        /// <param name="pagoxCargo">Initial value of PagoxCargo.</param>
        /// <param name="registerDate">Initial value of RegisterDate.</param>
        public static ThrPosition CreateThrPosition(int positionKey, string codigo, string positionID, short escalaGroupkey, int clasificationWorker, short estado, int ocupationCategoryKey, decimal hoursExtrasPay, decimal estimulacionCuc, decimal pagoxCargo, global::System.DateTime registerDate)
        {
            ThrPosition thrPosition = new ThrPosition();
            thrPosition.PositionKey = positionKey;
            thrPosition.Codigo = codigo;
            thrPosition.PositionID = positionID;
            thrPosition.EscalaGroupkey = escalaGroupkey;
            thrPosition.ClasificationWorker = clasificationWorker;
            thrPosition.Estado = estado;
            thrPosition.OcupationCategoryKey = ocupationCategoryKey;
            thrPosition.HoursExtrasPay = hoursExtrasPay;
            thrPosition.EstimulacionCuc = estimulacionCuc;
            thrPosition.PagoxCargo = pagoxCargo;
            thrPosition.RegisterDate = registerDate;
            return thrPosition;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PositionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual int PositionKey
        {
            get
            {
                int value = _PositionKey;
                OnGetPositionKey(ref value);
                return value;
            }
            set
            {
                if (_PositionKey != value)
                {
                  OnPositionKeyChanging(ref value);
                  ReportPropertyChanging("PositionKey");
                  _PositionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PositionKey");
                  OnPositionKeyChanged();
              }
            }
        }
        private int _PositionKey = 1;
        partial void OnGetPositionKey(ref int value);
        partial void OnPositionKeyChanging(ref int value);
        partial void OnPositionKeyChanged();
    
        /// <summary>
        /// There are no comments for Codigo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Código del Cargo")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Código del Cargo")]
        public virtual string Codigo
        {
            get
            {
                string value = _Codigo;
                OnGetCodigo(ref value);
                return value;
            }
            set
            {
                if (_Codigo != value)
                {
                  OnCodigoChanging(ref value);
                  ReportPropertyChanging("Codigo");
                  _Codigo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Codigo");
                  OnCodigoChanged();
              }
            }
        }
        private string _Codigo;
        partial void OnGetCodigo(ref string value);
        partial void OnCodigoChanging(ref string value);
        partial void OnCodigoChanged();
    
        /// <summary>
        /// There are no comments for PositionID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Nombre del Cargo")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Nombre del Cargo")]
        public virtual string PositionID
        {
            get
            {
                string value = _PositionID;
                OnGetPositionID(ref value);
                return value;
            }
            set
            {
                if (_PositionID != value)
                {
                  OnPositionIDChanging(ref value);
                  ReportPropertyChanging("PositionID");
                  _PositionID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PositionID");
                  OnPositionIDChanged();
              }
            }
        }
        private string _PositionID;
        partial void OnGetPositionID(ref string value);
        partial void OnPositionIDChanging(ref string value);
        partial void OnPositionIDChanged();
    
        /// <summary>
        /// There are no comments for PositionDescription in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Descripción ")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string PositionDescription
        {
            get
            {
                string value = _PositionDescription;
                OnGetPositionDescription(ref value);
                return value;
            }
            set
            {
                if (_PositionDescription != value)
                {
                  OnPositionDescriptionChanging(ref value);
                  ReportPropertyChanging("PositionDescription");
                  _PositionDescription = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PositionDescription");
                  OnPositionDescriptionChanged();
              }
            }
        }
        private string _PositionDescription;
        partial void OnGetPositionDescription(ref string value);
        partial void OnPositionDescriptionChanging(ref string value);
        partial void OnPositionDescriptionChanged();
    
        /// <summary>
        /// There are no comments for EscalaGroupkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual short EscalaGroupkey
        {
            get
            {
                short value = _EscalaGroupkey;
                OnGetEscalaGroupkey(ref value);
                return value;
            }
            set
            {
                if (_EscalaGroupkey != value)
                {
                  OnEscalaGroupkeyChanging(ref value);
                  ReportPropertyChanging("EscalaGroupkey");
                  _EscalaGroupkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EscalaGroupkey");
                  OnEscalaGroupkeyChanged();
              }
            }
        }
        private short _EscalaGroupkey;
        partial void OnGetEscalaGroupkey(ref short value);
        partial void OnEscalaGroupkeyChanging(ref short value);
        partial void OnEscalaGroupkeyChanged();
    
        /// <summary>
        /// There are no comments for ClasificationWorker in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual int ClasificationWorker
        {
            get
            {
                int value = _ClasificationWorker;
                OnGetClasificationWorker(ref value);
                return value;
            }
            set
            {
                if (_ClasificationWorker != value)
                {
                  OnClasificationWorkerChanging(ref value);
                  ReportPropertyChanging("ClasificationWorker");
                  _ClasificationWorker = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClasificationWorker");
                  OnClasificationWorkerChanged();
              }
            }
        }
        private int _ClasificationWorker;
        partial void OnGetClasificationWorker(ref int value);
        partial void OnClasificationWorkerChanging(ref int value);
        partial void OnClasificationWorkerChanged();
    
        /// <summary>
        /// There are no comments for Estado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual short Estado
        {
            get
            {
                short value = _Estado;
                OnGetEstado(ref value);
                return value;
            }
            set
            {
                if (_Estado != value)
                {
                  OnEstadoChanging(ref value);
                  ReportPropertyChanging("Estado");
                  _Estado = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Estado");
                  OnEstadoChanged();
              }
            }
        }
        private short _Estado;
        partial void OnGetEstado(ref short value);
        partial void OnEstadoChanging(ref short value);
        partial void OnEstadoChanged();
    
        /// <summary>
        /// There are no comments for OcupationCategoryKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual int OcupationCategoryKey
        {
            get
            {
                int value = _OcupationCategoryKey;
                OnGetOcupationCategoryKey(ref value);
                return value;
            }
            set
            {
                if (_OcupationCategoryKey != value)
                {
                  OnOcupationCategoryKeyChanging(ref value);
                  ReportPropertyChanging("OcupationCategoryKey");
                  _OcupationCategoryKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OcupationCategoryKey");
                  OnOcupationCategoryKeyChanged();
              }
            }
        }
        private int _OcupationCategoryKey;
        partial void OnGetOcupationCategoryKey(ref int value);
        partial void OnOcupationCategoryKeyChanging(ref int value);
        partial void OnOcupationCategoryKeyChanged();
    
        /// <summary>
        /// There are no comments for HoursExtrasPay in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual decimal HoursExtrasPay
        {
            get
            {
                decimal value = _HoursExtrasPay;
                OnGetHoursExtrasPay(ref value);
                return value;
            }
            set
            {
                if (_HoursExtrasPay != value)
                {
                  OnHoursExtrasPayChanging(ref value);
                  ReportPropertyChanging("HoursExtrasPay");
                  _HoursExtrasPay = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HoursExtrasPay");
                  OnHoursExtrasPayChanged();
              }
            }
        }
        private decimal _HoursExtrasPay;
        partial void OnGetHoursExtrasPay(ref decimal value);
        partial void OnHoursExtrasPayChanging(ref decimal value);
        partial void OnHoursExtrasPayChanged();
    
        /// <summary>
        /// There are no comments for EstimulacionCuc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual decimal EstimulacionCuc
        {
            get
            {
                decimal value = _EstimulacionCuc;
                OnGetEstimulacionCuc(ref value);
                return value;
            }
            set
            {
                if (_EstimulacionCuc != value)
                {
                  OnEstimulacionCucChanging(ref value);
                  ReportPropertyChanging("EstimulacionCuc");
                  _EstimulacionCuc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EstimulacionCuc");
                  OnEstimulacionCucChanged();
              }
            }
        }
        private decimal _EstimulacionCuc;
        partial void OnGetEstimulacionCuc(ref decimal value);
        partial void OnEstimulacionCucChanging(ref decimal value);
        partial void OnEstimulacionCucChanged();
    
        /// <summary>
        /// There are no comments for PagoxCargo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual decimal PagoxCargo
        {
            get
            {
                decimal value = _PagoxCargo;
                OnGetPagoxCargo(ref value);
                return value;
            }
            set
            {
                if (_PagoxCargo != value)
                {
                  OnPagoxCargoChanging(ref value);
                  ReportPropertyChanging("PagoxCargo");
                  _PagoxCargo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PagoxCargo");
                  OnPagoxCargoChanged();
              }
            }
        }
        private decimal _PagoxCargo;
        partial void OnGetPagoxCargo(ref decimal value);
        partial void OnPagoxCargoChanging(ref decimal value);
        partial void OnPagoxCargoChanged();
    
        /// <summary>
        /// There are no comments for Mision in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string Mision
        {
            get
            {
                string value = _Mision;
                OnGetMision(ref value);
                return value;
            }
            set
            {
                if (_Mision != value)
                {
                  OnMisionChanging(ref value);
                  ReportPropertyChanging("Mision");
                  _Mision = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Mision");
                  OnMisionChanged();
              }
            }
        }
        private string _Mision;
        partial void OnGetMision(ref string value);
        partial void OnMisionChanging(ref string value);
        partial void OnMisionChanged();
    
        /// <summary>
        /// There are no comments for RegisterDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Fecha de Registro")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Fecha de Registro")]
        public virtual global::System.DateTime RegisterDate
        {
            get
            {
                global::System.DateTime value = _RegisterDate;
                OnGetRegisterDate(ref value);
                return value;
            }
            set
            {
                if (_RegisterDate != value)
                {
                  OnRegisterDateChanging(ref value);
                  ReportPropertyChanging("RegisterDate");
                  _RegisterDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RegisterDate");
                  OnRegisterDateChanged();
              }
            }
        }
        private global::System.DateTime _RegisterDate;
        partial void OnGetRegisterDate(ref global::System.DateTime value);
        partial void OnRegisterDateChanging(ref global::System.DateTime value);
        partial void OnRegisterDateChanged();
    
        /// <summary>
        /// There are no comments for FunciResposabilidades in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Funciones y Responsabilidades")]
        public virtual string FunciResposabilidades
        {
            get
            {
                string value = _FunciResposabilidades;
                OnGetFunciResposabilidades(ref value);
                return value;
            }
            set
            {
                if (_FunciResposabilidades != value)
                {
                  OnFunciResposabilidadesChanging(ref value);
                  ReportPropertyChanging("FunciResposabilidades");
                  _FunciResposabilidades = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FunciResposabilidades");
                  OnFunciResposabilidadesChanged();
              }
            }
        }
        private string _FunciResposabilidades;
        partial void OnGetFunciResposabilidades(ref string value);
        partial void OnFunciResposabilidadesChanging(ref string value);
        partial void OnFunciResposabilidadesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrAnormalCondPositions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrAnormalCondPosition_thrPositions", "ThrAnormalCondPositions")]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual EntityCollection<ThrAnormalCondPosition> ThrAnormalCondPositions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrAnormalCondPosition>("Sage500AppModel.FK_thrAnormalCondPosition_thrPositions", "ThrAnormalCondPositions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrAnormalCondPosition>("Sage500AppModel.FK_thrAnormalCondPosition_thrPositions", "ThrAnormalCondPositions", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrCompetenciaCargos in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrCompetenciaCargo_thrPositions", "ThrCompetenciaCargos")]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual EntityCollection<ThrCompetenciaCargo> ThrCompetenciaCargos
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrCompetenciaCargo>("Sage500AppModel.FK_thrCompetenciaCargo_thrPositions", "ThrCompetenciaCargos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrCompetenciaCargo>("Sage500AppModel.FK_thrCompetenciaCargo_thrPositions", "ThrCompetenciaCargos", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrOrgUnitPositions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_OrgUnitPositions_Positions", "ThrOrgUnitPositions")]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual EntityCollection<ThrOrgUnitPosition> ThrOrgUnitPositions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrOrgUnitPosition>("Sage500AppModel.FK_OrgUnitPositions_Positions", "ThrOrgUnitPositions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrOrgUnitPosition>("Sage500AppModel.FK_OrgUnitPositions_Positions", "ThrOrgUnitPositions", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPositionRisks in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrPositionRisk_thrPositions", "ThrPositionRisks")]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual EntityCollection<ThrPositionRisk> ThrPositionRisks
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPositionRisk>("Sage500AppModel.FK_thrPositionRisk_thrPositions", "ThrPositionRisks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPositionRisk>("Sage500AppModel.FK_thrPositionRisk_thrPositions", "ThrPositionRisks", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPositionConditionLabs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrPositionConditionLab_thrPositions", "ThrPositionConditionLabs")]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual EntityCollection<ThrPositionConditionLab> ThrPositionConditionLabs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPositionConditionLab>("Sage500AppModel.FK_thrPositionConditionLab_thrPositions", "ThrPositionConditionLabs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPositionConditionLab>("Sage500AppModel.FK_thrPositionConditionLab_thrPositions", "ThrPositionConditionLabs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrRisk in the schema.
    /// </summary>
    /// <KeyProperties>
    /// RiskKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrRisk")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrRisk : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrRisk object.
        /// </summary>
        /// <param name="riskKey">Initial value of RiskKey.</param>
        /// <param name="riskID">Initial value of RiskID.</param>
        /// <param name="riskType">Initial value of RiskType.</param>
        public static ThrRisk CreateThrRisk(int riskKey, string riskID, int riskType)
        {
            ThrRisk thrRisk = new ThrRisk();
            thrRisk.RiskKey = riskKey;
            thrRisk.RiskID = riskID;
            thrRisk.RiskType = riskType;
            return thrRisk;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for RiskKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RiskKey
        {
            get
            {
                int value = _RiskKey;
                OnGetRiskKey(ref value);
                return value;
            }
            set
            {
                if (_RiskKey != value)
                {
                  OnRiskKeyChanging(ref value);
                  ReportPropertyChanging("RiskKey");
                  _RiskKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RiskKey");
                  OnRiskKeyChanged();
              }
            }
        }
        private int _RiskKey;
        partial void OnGetRiskKey(ref int value);
        partial void OnRiskKeyChanging(ref int value);
        partial void OnRiskKeyChanged();
    
        /// <summary>
        /// There are no comments for RiskID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RiskID
        {
            get
            {
                string value = _RiskID;
                OnGetRiskID(ref value);
                return value;
            }
            set
            {
                if (_RiskID != value)
                {
                  OnRiskIDChanging(ref value);
                  ReportPropertyChanging("RiskID");
                  _RiskID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RiskID");
                  OnRiskIDChanged();
              }
            }
        }
        private string _RiskID;
        partial void OnGetRiskID(ref string value);
        partial void OnRiskIDChanging(ref string value);
        partial void OnRiskIDChanged();
    
        /// <summary>
        /// There are no comments for RiskDescription in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RiskDescription
        {
            get
            {
                string value = _RiskDescription;
                OnGetRiskDescription(ref value);
                return value;
            }
            set
            {
                if (_RiskDescription != value)
                {
                  OnRiskDescriptionChanging(ref value);
                  ReportPropertyChanging("RiskDescription");
                  _RiskDescription = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RiskDescription");
                  OnRiskDescriptionChanged();
              }
            }
        }
        private string _RiskDescription;
        partial void OnGetRiskDescription(ref string value);
        partial void OnRiskDescriptionChanging(ref string value);
        partial void OnRiskDescriptionChanged();
    
        /// <summary>
        /// There are no comments for RiskType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RiskType
        {
            get
            {
                int value = _RiskType;
                OnGetRiskType(ref value);
                return value;
            }
            set
            {
                if (_RiskType != value)
                {
                  OnRiskTypeChanging(ref value);
                  ReportPropertyChanging("RiskType");
                  _RiskType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RiskType");
                  OnRiskTypeChanged();
              }
            }
        }
        private int _RiskType;
        partial void OnGetRiskType(ref int value);
        partial void OnRiskTypeChanging(ref int value);
        partial void OnRiskTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrPositionRisks in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrPositionRisk_thrRisk", "ThrPositionRisks")]
        public virtual EntityCollection<ThrPositionRisk> ThrPositionRisks
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPositionRisk>("Sage500AppModel.FK_thrPositionRisk_thrRisk", "ThrPositionRisks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPositionRisk>("Sage500AppModel.FK_thrPositionRisk_thrRisk", "ThrPositionRisks", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrScientificCategory in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ScientificCategorykey
    /// ScientificCategoryID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrScientificCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrScientificCategory : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrScientificCategory object.
        /// </summary>
        /// <param name="scientificCategorykey">Initial value of ScientificCategorykey.</param>
        /// <param name="scientificCategoryID">Initial value of ScientificCategoryID.</param>
        public static ThrScientificCategory CreateThrScientificCategory(short scientificCategorykey, string scientificCategoryID)
        {
            ThrScientificCategory thrScientificCategory = new ThrScientificCategory();
            thrScientificCategory.ScientificCategorykey = scientificCategorykey;
            thrScientificCategory.ScientificCategoryID = scientificCategoryID;
            return thrScientificCategory;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ScientificCategorykey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ScientificCategorykey
        {
            get
            {
                short value = _ScientificCategorykey;
                OnGetScientificCategorykey(ref value);
                return value;
            }
            set
            {
                if (_ScientificCategorykey != value)
                {
                  OnScientificCategorykeyChanging(ref value);
                  ReportPropertyChanging("ScientificCategorykey");
                  _ScientificCategorykey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ScientificCategorykey");
                  OnScientificCategorykeyChanged();
              }
            }
        }
        private short _ScientificCategorykey;
        partial void OnGetScientificCategorykey(ref short value);
        partial void OnScientificCategorykeyChanging(ref short value);
        partial void OnScientificCategorykeyChanged();
    
        /// <summary>
        /// There are no comments for ScientificCategoryID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ScientificCategoryID
        {
            get
            {
                string value = _ScientificCategoryID;
                OnGetScientificCategoryID(ref value);
                return value;
            }
            set
            {
                if (_ScientificCategoryID != value)
                {
                  OnScientificCategoryIDChanging(ref value);
                  ReportPropertyChanging("ScientificCategoryID");
                  _ScientificCategoryID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ScientificCategoryID");
                  OnScientificCategoryIDChanged();
              }
            }
        }
        private string _ScientificCategoryID;
        partial void OnGetScientificCategoryID(ref string value);
        partial void OnScientificCategoryIDChanging(ref string value);
        partial void OnScientificCategoryIDChanged();
    
        /// <summary>
        /// There are no comments for ScientificCategoryDescripcion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ScientificCategoryDescripcion
        {
            get
            {
                string value = _ScientificCategoryDescripcion;
                OnGetScientificCategoryDescripcion(ref value);
                return value;
            }
            set
            {
                if (_ScientificCategoryDescripcion != value)
                {
                  OnScientificCategoryDescripcionChanging(ref value);
                  ReportPropertyChanging("ScientificCategoryDescripcion");
                  _ScientificCategoryDescripcion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ScientificCategoryDescripcion");
                  OnScientificCategoryDescripcionChanged();
              }
            }
        }
        private string _ScientificCategoryDescripcion;
        partial void OnGetScientificCategoryDescripcion(ref string value);
        partial void OnScientificCategoryDescripcionChanging(ref string value);
        partial void OnScientificCategoryDescripcionChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrShedule in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Horariokey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrShedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrShedule : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrShedule object.
        /// </summary>
        /// <param name="horariokey">Initial value of Horariokey.</param>
        /// <param name="horarioID">Initial value of HorarioID.</param>
        public static ThrShedule CreateThrShedule(int horariokey, string horarioID)
        {
            ThrShedule thrShedule = new ThrShedule();
            thrShedule.Horariokey = horariokey;
            thrShedule.HorarioID = horarioID;
            return thrShedule;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Horariokey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Horariokey
        {
            get
            {
                int value = _Horariokey;
                OnGetHorariokey(ref value);
                return value;
            }
            set
            {
                if (_Horariokey != value)
                {
                  OnHorariokeyChanging(ref value);
                  ReportPropertyChanging("Horariokey");
                  _Horariokey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Horariokey");
                  OnHorariokeyChanged();
              }
            }
        }
        private int _Horariokey;
        partial void OnGetHorariokey(ref int value);
        partial void OnHorariokeyChanging(ref int value);
        partial void OnHorariokeyChanged();
    
        /// <summary>
        /// There are no comments for HorarioID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string HorarioID
        {
            get
            {
                string value = _HorarioID;
                OnGetHorarioID(ref value);
                return value;
            }
            set
            {
                if (_HorarioID != value)
                {
                  OnHorarioIDChanging(ref value);
                  ReportPropertyChanging("HorarioID");
                  _HorarioID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("HorarioID");
                  OnHorarioIDChanged();
              }
            }
        }
        private string _HorarioID;
        partial void OnGetHorarioID(ref string value);
        partial void OnHorarioIDChanging(ref string value);
        partial void OnHorarioIDChanged();
    
        /// <summary>
        /// There are no comments for HorarioDescrip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string HorarioDescrip
        {
            get
            {
                string value = _HorarioDescrip;
                OnGetHorarioDescrip(ref value);
                return value;
            }
            set
            {
                if (_HorarioDescrip != value)
                {
                  OnHorarioDescripChanging(ref value);
                  ReportPropertyChanging("HorarioDescrip");
                  _HorarioDescrip = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("HorarioDescrip");
                  OnHorarioDescripChanged();
              }
            }
        }
        private string _HorarioDescrip;
        partial void OnGetHorarioDescrip(ref string value);
        partial void OnHorarioDescripChanging(ref string value);
        partial void OnHorarioDescripChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrSheduleJornadas in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrSheduleJornada_thrShedule", "ThrSheduleJornadas")]
        public virtual EntityCollection<ThrSheduleJornada> ThrSheduleJornadas
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrSheduleJornada>("Sage500AppModel.FK_thrSheduleJornada_thrShedule", "ThrSheduleJornadas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrSheduleJornada>("Sage500AppModel.FK_thrSheduleJornada_thrShedule", "ThrSheduleJornadas", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrSheduleJornada in the schema.
    /// </summary>
    /// <KeyProperties>
    /// HorarioJornadaKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrSheduleJornada")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrSheduleJornada : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrSheduleJornada object.
        /// </summary>
        /// <param name="horarioJornadaKey">Initial value of HorarioJornadaKey.</param>
        /// <param name="horaInicio">Initial value of HoraInicio.</param>
        /// <param name="horaFin">Initial value of HoraFin.</param>
        /// <param name="tiempoTrabajo">Initial value of TiempoTrabajo.</param>
        /// <param name="duracionJornada">Initial value of DuracionJornada.</param>
        /// <param name="tiempoDescanso">Initial value of TiempoDescanso.</param>
        public static ThrSheduleJornada CreateThrSheduleJornada(int horarioJornadaKey, string horaInicio, string horaFin, string tiempoTrabajo, string duracionJornada, string tiempoDescanso)
        {
            ThrSheduleJornada thrSheduleJornada = new ThrSheduleJornada();
            thrSheduleJornada.HorarioJornadaKey = horarioJornadaKey;
            thrSheduleJornada.HoraInicio = horaInicio;
            thrSheduleJornada.HoraFin = horaFin;
            thrSheduleJornada.TiempoTrabajo = tiempoTrabajo;
            thrSheduleJornada.DuracionJornada = duracionJornada;
            thrSheduleJornada.TiempoDescanso = tiempoDescanso;
            return thrSheduleJornada;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for HorarioJornadaKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HorarioJornadaKey
        {
            get
            {
                int value = _HorarioJornadaKey;
                OnGetHorarioJornadaKey(ref value);
                return value;
            }
            set
            {
                if (_HorarioJornadaKey != value)
                {
                  OnHorarioJornadaKeyChanging(ref value);
                  ReportPropertyChanging("HorarioJornadaKey");
                  _HorarioJornadaKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HorarioJornadaKey");
                  OnHorarioJornadaKeyChanged();
              }
            }
        }
        private int _HorarioJornadaKey;
        partial void OnGetHorarioJornadaKey(ref int value);
        partial void OnHorarioJornadaKeyChanging(ref int value);
        partial void OnHorarioJornadaKeyChanged();
    
        /// <summary>
        /// There are no comments for HorarioKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? HorarioKey
        {
            get
            {
                int? value = _HorarioKey;
                OnGetHorarioKey(ref value);
                return value;
            }
            set
            {
                if (_HorarioKey != value)
                {
                  OnHorarioKeyChanging(ref value);
                  ReportPropertyChanging("HorarioKey");
                  _HorarioKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HorarioKey");
                  OnHorarioKeyChanged();
              }
            }
        }
        private int? _HorarioKey;
        partial void OnGetHorarioKey(ref int? value);
        partial void OnHorarioKeyChanging(ref int? value);
        partial void OnHorarioKeyChanged();
    
        /// <summary>
        /// There are no comments for HoraInicio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string HoraInicio
        {
            get
            {
                string value = _HoraInicio;
                OnGetHoraInicio(ref value);
                return value;
            }
            set
            {
                if (_HoraInicio != value)
                {
                  OnHoraInicioChanging(ref value);
                  ReportPropertyChanging("HoraInicio");
                  _HoraInicio = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("HoraInicio");
                  OnHoraInicioChanged();
              }
            }
        }
        private string _HoraInicio;
        partial void OnGetHoraInicio(ref string value);
        partial void OnHoraInicioChanging(ref string value);
        partial void OnHoraInicioChanged();
    
        /// <summary>
        /// There are no comments for HoraFin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string HoraFin
        {
            get
            {
                string value = _HoraFin;
                OnGetHoraFin(ref value);
                return value;
            }
            set
            {
                if (_HoraFin != value)
                {
                  OnHoraFinChanging(ref value);
                  ReportPropertyChanging("HoraFin");
                  _HoraFin = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("HoraFin");
                  OnHoraFinChanged();
              }
            }
        }
        private string _HoraFin;
        partial void OnGetHoraFin(ref string value);
        partial void OnHoraFinChanging(ref string value);
        partial void OnHoraFinChanged();
    
        /// <summary>
        /// There are no comments for TiempoTrabajo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TiempoTrabajo
        {
            get
            {
                string value = _TiempoTrabajo;
                OnGetTiempoTrabajo(ref value);
                return value;
            }
            set
            {
                if (_TiempoTrabajo != value)
                {
                  OnTiempoTrabajoChanging(ref value);
                  ReportPropertyChanging("TiempoTrabajo");
                  _TiempoTrabajo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TiempoTrabajo");
                  OnTiempoTrabajoChanged();
              }
            }
        }
        private string _TiempoTrabajo;
        partial void OnGetTiempoTrabajo(ref string value);
        partial void OnTiempoTrabajoChanging(ref string value);
        partial void OnTiempoTrabajoChanged();
    
        /// <summary>
        /// There are no comments for DuracionJornada in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DuracionJornada
        {
            get
            {
                string value = _DuracionJornada;
                OnGetDuracionJornada(ref value);
                return value;
            }
            set
            {
                if (_DuracionJornada != value)
                {
                  OnDuracionJornadaChanging(ref value);
                  ReportPropertyChanging("DuracionJornada");
                  _DuracionJornada = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DuracionJornada");
                  OnDuracionJornadaChanged();
              }
            }
        }
        private string _DuracionJornada;
        partial void OnGetDuracionJornada(ref string value);
        partial void OnDuracionJornadaChanging(ref string value);
        partial void OnDuracionJornadaChanged();
    
        /// <summary>
        /// There are no comments for TiempoDescanso in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TiempoDescanso
        {
            get
            {
                string value = _TiempoDescanso;
                OnGetTiempoDescanso(ref value);
                return value;
            }
            set
            {
                if (_TiempoDescanso != value)
                {
                  OnTiempoDescansoChanging(ref value);
                  ReportPropertyChanging("TiempoDescanso");
                  _TiempoDescanso = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TiempoDescanso");
                  OnTiempoDescansoChanged();
              }
            }
        }
        private string _TiempoDescanso;
        partial void OnGetTiempoDescanso(ref string value);
        partial void OnTiempoDescansoChanging(ref string value);
        partial void OnTiempoDescansoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrShedule in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrSheduleJornada_thrShedule", "ThrShedule")]
        public virtual ThrShedule ThrShedule
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrShedule>("Sage500AppModel.FK_thrSheduleJornada_thrShedule", "ThrShedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrShedule>("Sage500AppModel.FK_thrSheduleJornada_thrShedule", "ThrShedule").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrShedule in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrShedule> ThrSheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrShedule>("Sage500AppModel.FK_thrSheduleJornada_thrShedule", "ThrShedule");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrShedule>("Sage500AppModel.FK_thrSheduleJornada_thrShedule", "ThrShedule", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrShedule>("Sage500AppModel.FK_thrSheduleJornada_thrShedule", "ThrShedule").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrState in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Statekey
    /// StateID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrState : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrState object.
        /// </summary>
        /// <param name="statekey">Initial value of Statekey.</param>
        /// <param name="stateID">Initial value of StateID.</param>
        public static ThrState CreateThrState(short statekey, string stateID)
        {
            ThrState thrState = new ThrState();
            thrState.Statekey = statekey;
            thrState.StateID = stateID;
            return thrState;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Statekey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Statekey
        {
            get
            {
                short value = _Statekey;
                OnGetStatekey(ref value);
                return value;
            }
            set
            {
                if (_Statekey != value)
                {
                  OnStatekeyChanging(ref value);
                  ReportPropertyChanging("Statekey");
                  _Statekey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Statekey");
                  OnStatekeyChanged();
              }
            }
        }
        private short _Statekey;
        partial void OnGetStatekey(ref short value);
        partial void OnStatekeyChanging(ref short value);
        partial void OnStatekeyChanged();
    
        /// <summary>
        /// There are no comments for StateID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string StateID
        {
            get
            {
                string value = _StateID;
                OnGetStateID(ref value);
                return value;
            }
            set
            {
                if (_StateID != value)
                {
                  OnStateIDChanging(ref value);
                  ReportPropertyChanging("StateID");
                  _StateID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("StateID");
                  OnStateIDChanged();
              }
            }
        }
        private string _StateID;
        partial void OnGetStateID(ref string value);
        partial void OnStateIDChanging(ref string value);
        partial void OnStateIDChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrWorkerType in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WorkerTypekey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrWorkerType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrWorkerType : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrWorkerType object.
        /// </summary>
        /// <param name="workerTypekey">Initial value of WorkerTypekey.</param>
        /// <param name="workerTypeCod">Initial value of WorkerTypeCod.</param>
        /// <param name="workerTypeID">Initial value of WorkerTypeID.</param>
        public static ThrWorkerType CreateThrWorkerType(short workerTypekey, string workerTypeCod, string workerTypeID)
        {
            ThrWorkerType thrWorkerType = new ThrWorkerType();
            thrWorkerType.WorkerTypekey = workerTypekey;
            thrWorkerType.WorkerTypeCod = workerTypeCod;
            thrWorkerType.WorkerTypeID = workerTypeID;
            return thrWorkerType;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WorkerTypekey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short WorkerTypekey
        {
            get
            {
                short value = _WorkerTypekey;
                OnGetWorkerTypekey(ref value);
                return value;
            }
            set
            {
                if (_WorkerTypekey != value)
                {
                  OnWorkerTypekeyChanging(ref value);
                  ReportPropertyChanging("WorkerTypekey");
                  _WorkerTypekey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkerTypekey");
                  OnWorkerTypekeyChanged();
              }
            }
        }
        private short _WorkerTypekey;
        partial void OnGetWorkerTypekey(ref short value);
        partial void OnWorkerTypekeyChanging(ref short value);
        partial void OnWorkerTypekeyChanged();
    
        /// <summary>
        /// There are no comments for WorkerTypeCod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string WorkerTypeCod
        {
            get
            {
                string value = _WorkerTypeCod;
                OnGetWorkerTypeCod(ref value);
                return value;
            }
            set
            {
                if (_WorkerTypeCod != value)
                {
                  OnWorkerTypeCodChanging(ref value);
                  ReportPropertyChanging("WorkerTypeCod");
                  _WorkerTypeCod = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("WorkerTypeCod");
                  OnWorkerTypeCodChanged();
              }
            }
        }
        private string _WorkerTypeCod;
        partial void OnGetWorkerTypeCod(ref string value);
        partial void OnWorkerTypeCodChanging(ref string value);
        partial void OnWorkerTypeCodChanged();
    
        /// <summary>
        /// There are no comments for WorkerTypeID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string WorkerTypeID
        {
            get
            {
                string value = _WorkerTypeID;
                OnGetWorkerTypeID(ref value);
                return value;
            }
            set
            {
                if (_WorkerTypeID != value)
                {
                  OnWorkerTypeIDChanging(ref value);
                  ReportPropertyChanging("WorkerTypeID");
                  _WorkerTypeID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("WorkerTypeID");
                  OnWorkerTypeIDChanged();
              }
            }
        }
        private string _WorkerTypeID;
        partial void OnGetWorkerTypeID(ref string value);
        partial void OnWorkerTypeIDChanging(ref string value);
        partial void OnWorkerTypeIDChanged();
    
        /// <summary>
        /// There are no comments for WorkerTypeDescription in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string WorkerTypeDescription
        {
            get
            {
                string value = _WorkerTypeDescription;
                OnGetWorkerTypeDescription(ref value);
                return value;
            }
            set
            {
                if (_WorkerTypeDescription != value)
                {
                  OnWorkerTypeDescriptionChanging(ref value);
                  ReportPropertyChanging("WorkerTypeDescription");
                  _WorkerTypeDescription = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WorkerTypeDescription");
                  OnWorkerTypeDescriptionChanged();
              }
            }
        }
        private string _WorkerTypeDescription;
        partial void OnGetWorkerTypeDescription(ref string value);
        partial void OnWorkerTypeDescriptionChanging(ref string value);
        partial void OnWorkerTypeDescriptionChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrWorkTranLineDist in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WTLineDistKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrWorkTranLineDist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrWorkTranLineDist : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrWorkTranLineDist object.
        /// </summary>
        /// <param name="wTLineDistKey">Initial value of WTLineDistKey.</param>
        /// <param name="date">Initial value of Date.</param>
        /// <param name="hrsQty">Initial value of HrsQty.</param>
        /// <param name="wTLineKey">Initial value of WTLineKey.</param>
        public static ThrWorkTranLineDist CreateThrWorkTranLineDist(int wTLineDistKey, global::System.DateTime date, decimal hrsQty, int wTLineKey)
        {
            ThrWorkTranLineDist thrWorkTranLineDist = new ThrWorkTranLineDist();
            thrWorkTranLineDist.WTLineDistKey = wTLineDistKey;
            thrWorkTranLineDist.Date = date;
            thrWorkTranLineDist.HrsQty = hrsQty;
            thrWorkTranLineDist.WTLineKey = wTLineKey;
            return thrWorkTranLineDist;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WTLineDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WTLineDistKey
        {
            get
            {
                int value = _WTLineDistKey;
                OnGetWTLineDistKey(ref value);
                return value;
            }
            set
            {
                if (_WTLineDistKey != value)
                {
                  OnWTLineDistKeyChanging(ref value);
                  ReportPropertyChanging("WTLineDistKey");
                  _WTLineDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WTLineDistKey");
                  OnWTLineDistKeyChanged();
              }
            }
        }
        private int _WTLineDistKey;
        partial void OnGetWTLineDistKey(ref int value);
        partial void OnWTLineDistKeyChanging(ref int value);
        partial void OnWTLineDistKeyChanged();
    
        /// <summary>
        /// There are no comments for Date in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime Date
        {
            get
            {
                global::System.DateTime value = _Date;
                OnGetDate(ref value);
                return value;
            }
            set
            {
                if (_Date != value)
                {
                  OnDateChanging(ref value);
                  ReportPropertyChanging("Date");
                  _Date = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Date");
                  OnDateChanged();
              }
            }
        }
        private global::System.DateTime _Date;
        partial void OnGetDate(ref global::System.DateTime value);
        partial void OnDateChanging(ref global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// There are no comments for HrsQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal HrsQty
        {
            get
            {
                decimal value = _HrsQty;
                OnGetHrsQty(ref value);
                return value;
            }
            set
            {
                if (_HrsQty != value)
                {
                  OnHrsQtyChanging(ref value);
                  ReportPropertyChanging("HrsQty");
                  _HrsQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrsQty");
                  OnHrsQtyChanged();
              }
            }
        }
        private decimal _HrsQty = 0m;
        partial void OnGetHrsQty(ref decimal value);
        partial void OnHrsQtyChanging(ref decimal value);
        partial void OnHrsQtyChanged();
    
        /// <summary>
        /// There are no comments for WTLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WTLineKey
        {
            get
            {
                int value = _WTLineKey;
                OnGetWTLineKey(ref value);
                return value;
            }
            set
            {
                if (_WTLineKey != value)
                {
                  OnWTLineKeyChanging(ref value);
                  ReportPropertyChanging("WTLineKey");
                  _WTLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WTLineKey");
                  OnWTLineKeyChanged();
              }
            }
        }
        private int _WTLineKey;
        partial void OnGetWTLineKey(ref int value);
        partial void OnWTLineKeyChanging(ref int value);
        partial void OnWTLineKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrWorkTranLine in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_WorkTranLineDists_WorkTranLines", "ThrWorkTranLine")]
        public virtual ThrWorkTranLine ThrWorkTranLine
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrWorkTranLine>("Sage500AppModel.FK_WorkTranLineDists_WorkTranLines", "ThrWorkTranLine").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrWorkTranLine>("Sage500AppModel.FK_WorkTranLineDists_WorkTranLines", "ThrWorkTranLine").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrWorkTranLine in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrWorkTranLine> ThrWorkTranLineReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrWorkTranLine>("Sage500AppModel.FK_WorkTranLineDists_WorkTranLines", "ThrWorkTranLine");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrWorkTranLine>("Sage500AppModel.FK_WorkTranLineDists_WorkTranLines", "ThrWorkTranLine", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrWorkTranLine>("Sage500AppModel.FK_WorkTranLineDists_WorkTranLines", "ThrWorkTranLine").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrWorkTranLine in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WTLineKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrWorkTranLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrWorkTranLine : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrWorkTranLine object.
        /// </summary>
        /// <param name="wTLineKey">Initial value of WTLineKey.</param>
        /// <param name="personKey">Initial value of PersonKey.</param>
        /// <param name="positionKey">Initial value of PositionKey.</param>
        /// <param name="orgUnitKey">Initial value of OrgUnitKey.</param>
        /// <param name="workTranKey">Initial value of WorkTranKey.</param>
        /// <param name="hrsQty">Initial value of HrsQty.</param>
        public static ThrWorkTranLine CreateThrWorkTranLine(int wTLineKey, int personKey, int positionKey, int orgUnitKey, int workTranKey, decimal hrsQty)
        {
            ThrWorkTranLine thrWorkTranLine = new ThrWorkTranLine();
            thrWorkTranLine.WTLineKey = wTLineKey;
            thrWorkTranLine.PersonKey = personKey;
            thrWorkTranLine.PositionKey = positionKey;
            thrWorkTranLine.OrgUnitKey = orgUnitKey;
            thrWorkTranLine.WorkTranKey = workTranKey;
            thrWorkTranLine.HrsQty = hrsQty;
            return thrWorkTranLine;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WTLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WTLineKey
        {
            get
            {
                int value = _WTLineKey;
                OnGetWTLineKey(ref value);
                return value;
            }
            set
            {
                if (_WTLineKey != value)
                {
                  OnWTLineKeyChanging(ref value);
                  ReportPropertyChanging("WTLineKey");
                  _WTLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WTLineKey");
                  OnWTLineKeyChanged();
              }
            }
        }
        private int _WTLineKey;
        partial void OnGetWTLineKey(ref int value);
        partial void OnWTLineKeyChanging(ref int value);
        partial void OnWTLineKeyChanged();
    
        /// <summary>
        /// There are no comments for PersonKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PersonKey
        {
            get
            {
                int value = _PersonKey;
                OnGetPersonKey(ref value);
                return value;
            }
            set
            {
                if (_PersonKey != value)
                {
                  OnPersonKeyChanging(ref value);
                  ReportPropertyChanging("PersonKey");
                  _PersonKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PersonKey");
                  OnPersonKeyChanged();
              }
            }
        }
        private int _PersonKey;
        partial void OnGetPersonKey(ref int value);
        partial void OnPersonKeyChanging(ref int value);
        partial void OnPersonKeyChanged();
    
        /// <summary>
        /// There are no comments for PositionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PositionKey
        {
            get
            {
                int value = _PositionKey;
                OnGetPositionKey(ref value);
                return value;
            }
            set
            {
                if (_PositionKey != value)
                {
                  OnPositionKeyChanging(ref value);
                  ReportPropertyChanging("PositionKey");
                  _PositionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PositionKey");
                  OnPositionKeyChanged();
              }
            }
        }
        private int _PositionKey;
        partial void OnGetPositionKey(ref int value);
        partial void OnPositionKeyChanging(ref int value);
        partial void OnPositionKeyChanged();
    
        /// <summary>
        /// There are no comments for OrgUnitKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OrgUnitKey
        {
            get
            {
                int value = _OrgUnitKey;
                OnGetOrgUnitKey(ref value);
                return value;
            }
            set
            {
                if (_OrgUnitKey != value)
                {
                  OnOrgUnitKeyChanging(ref value);
                  ReportPropertyChanging("OrgUnitKey");
                  _OrgUnitKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrgUnitKey");
                  OnOrgUnitKeyChanged();
              }
            }
        }
        private int _OrgUnitKey;
        partial void OnGetOrgUnitKey(ref int value);
        partial void OnOrgUnitKeyChanging(ref int value);
        partial void OnOrgUnitKeyChanged();
    
        /// <summary>
        /// There are no comments for WorkTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WorkTranKey
        {
            get
            {
                int value = _WorkTranKey;
                OnGetWorkTranKey(ref value);
                return value;
            }
            set
            {
                if (_WorkTranKey != value)
                {
                  OnWorkTranKeyChanging(ref value);
                  ReportPropertyChanging("WorkTranKey");
                  _WorkTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkTranKey");
                  OnWorkTranKeyChanged();
              }
            }
        }
        private int _WorkTranKey;
        partial void OnGetWorkTranKey(ref int value);
        partial void OnWorkTranKeyChanging(ref int value);
        partial void OnWorkTranKeyChanged();
    
        /// <summary>
        /// There are no comments for HrsQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal HrsQty
        {
            get
            {
                decimal value = _HrsQty;
                OnGetHrsQty(ref value);
                return value;
            }
            set
            {
                if (_HrsQty != value)
                {
                  OnHrsQtyChanging(ref value);
                  ReportPropertyChanging("HrsQty");
                  _HrsQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrsQty");
                  OnHrsQtyChanged();
              }
            }
        }
        private decimal _HrsQty = 0m;
        partial void OnGetHrsQty(ref decimal value);
        partial void OnHrsQtyChanging(ref decimal value);
        partial void OnHrsQtyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrWorkTranLineDists in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_WorkTranLineDists_WorkTranLines", "ThrWorkTranLineDists")]
        public virtual EntityCollection<ThrWorkTranLineDist> ThrWorkTranLineDists
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrWorkTranLineDist>("Sage500AppModel.FK_WorkTranLineDists_WorkTranLines", "ThrWorkTranLineDists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrWorkTranLineDist>("Sage500AppModel.FK_WorkTranLineDists_WorkTranLines", "ThrWorkTranLineDists", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrWorkTran in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_WorkTranLines_WorkTrans", "ThrWorkTran")]
        public virtual ThrWorkTran ThrWorkTran
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrWorkTran>("Sage500AppModel.FK_WorkTranLines_WorkTrans", "ThrWorkTran").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrWorkTran>("Sage500AppModel.FK_WorkTranLines_WorkTrans", "ThrWorkTran").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrWorkTran in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrWorkTran> ThrWorkTranReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrWorkTran>("Sage500AppModel.FK_WorkTranLines_WorkTrans", "ThrWorkTran");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrWorkTran>("Sage500AppModel.FK_WorkTranLines_WorkTrans", "ThrWorkTran", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrWorkTran>("Sage500AppModel.FK_WorkTranLines_WorkTrans", "ThrWorkTran").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrWorkTran in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WorkTranKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrWorkTran")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrWorkTran : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrWorkTran object.
        /// </summary>
        /// <param name="workTranKey">Initial value of WorkTranKey.</param>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        public static ThrWorkTran CreateThrWorkTran(int workTranKey, global::System.DateTime fromDate, global::System.DateTime toDate)
        {
            ThrWorkTran thrWorkTran = new ThrWorkTran();
            thrWorkTran.WorkTranKey = workTranKey;
            thrWorkTran.FromDate = fromDate;
            thrWorkTran.ToDate = toDate;
            return thrWorkTran;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WorkTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WorkTranKey
        {
            get
            {
                int value = _WorkTranKey;
                OnGetWorkTranKey(ref value);
                return value;
            }
            set
            {
                if (_WorkTranKey != value)
                {
                  OnWorkTranKeyChanging(ref value);
                  ReportPropertyChanging("WorkTranKey");
                  _WorkTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkTranKey");
                  OnWorkTranKeyChanged();
              }
            }
        }
        private int _WorkTranKey;
        partial void OnGetWorkTranKey(ref int value);
        partial void OnWorkTranKeyChanging(ref int value);
        partial void OnWorkTranKeyChanged();
    
        /// <summary>
        /// There are no comments for FromDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime FromDate
        {
            get
            {
                global::System.DateTime value = _FromDate;
                OnGetFromDate(ref value);
                return value;
            }
            set
            {
                if (_FromDate != value)
                {
                  OnFromDateChanging(ref value);
                  ReportPropertyChanging("FromDate");
                  _FromDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FromDate");
                  OnFromDateChanged();
              }
            }
        }
        private global::System.DateTime _FromDate;
        partial void OnGetFromDate(ref global::System.DateTime value);
        partial void OnFromDateChanging(ref global::System.DateTime value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// There are no comments for ToDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ToDate
        {
            get
            {
                global::System.DateTime value = _ToDate;
                OnGetToDate(ref value);
                return value;
            }
            set
            {
                if (_ToDate != value)
                {
                  OnToDateChanging(ref value);
                  ReportPropertyChanging("ToDate");
                  _ToDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ToDate");
                  OnToDateChanged();
              }
            }
        }
        private global::System.DateTime _ToDate;
        partial void OnGetToDate(ref global::System.DateTime value);
        partial void OnToDateChanging(ref global::System.DateTime value);
        partial void OnToDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrWorkTranLines in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_WorkTranLines_WorkTrans", "ThrWorkTranLines")]
        public virtual EntityCollection<ThrWorkTranLine> ThrWorkTranLines
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrWorkTranLine>("Sage500AppModel.FK_WorkTranLines_WorkTrans", "ThrWorkTranLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrWorkTranLine>("Sage500AppModel.FK_WorkTranLines_WorkTrans", "ThrWorkTranLines", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.TsmCompany in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CompanyID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="TsmCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TsmCompany : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new TsmCompany object.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="addrLine1">Initial value of AddrLine1.</param>
        /// <param name="city">Initial value of City.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <param name="countryCurrLocale">Initial value of CountryCurrLocale.</param>
        /// <param name="countryID">Initial value of CountryID.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="currLocale">Initial value of CurrLocale.</param>
        /// <param name="fullGL">Initial value of FullGL.</param>
        /// <param name="includeInOLAP">Initial value of IncludeInOLAP.</param>
        /// <param name="stateID">Initial value of StateID.</param>
        /// <param name="useMultLang">Initial value of UseMultLang.</param>
        /// <param name="v1099CombStateFed">Initial value of V1099CombStateFed.</param>
        public static TsmCompany CreateTsmCompany(string companyID, string addrLine1, string city, string companyName, int countryCurrLocale, string countryID, string currID, int currLocale, short fullGL, short includeInOLAP, string stateID, short useMultLang, short v1099CombStateFed)
        {
            TsmCompany tsmCompany = new TsmCompany();
            tsmCompany.CompanyID = companyID;
            tsmCompany.AddrLine1 = addrLine1;
            tsmCompany.City = city;
            tsmCompany.CompanyName = companyName;
            tsmCompany.CountryCurrLocale = countryCurrLocale;
            tsmCompany.CountryID = countryID;
            tsmCompany.CurrID = currID;
            tsmCompany.CurrLocale = currLocale;
            tsmCompany.FullGL = fullGL;
            tsmCompany.IncludeInOLAP = includeInOLAP;
            tsmCompany.StateID = stateID;
            tsmCompany.UseMultLang = useMultLang;
            tsmCompany.V1099CombStateFed = v1099CombStateFed;
            return tsmCompany;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Código Compañía")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Código Compañía ")]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for AddrLine1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string AddrLine1
        {
            get
            {
                string value = _AddrLine1;
                OnGetAddrLine1(ref value);
                return value;
            }
            set
            {
                if (_AddrLine1 != value)
                {
                  OnAddrLine1Changing(ref value);
                  ReportPropertyChanging("AddrLine1");
                  _AddrLine1 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AddrLine1");
                  OnAddrLine1Changed();
              }
            }
        }
        private string _AddrLine1 = @" ";
        partial void OnGetAddrLine1(ref string value);
        partial void OnAddrLine1Changing(ref string value);
        partial void OnAddrLine1Changed();
    
        /// <summary>
        /// There are no comments for AddrLine2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string AddrLine2
        {
            get
            {
                string value = _AddrLine2;
                OnGetAddrLine2(ref value);
                return value;
            }
            set
            {
                if (_AddrLine2 != value)
                {
                  OnAddrLine2Changing(ref value);
                  ReportPropertyChanging("AddrLine2");
                  _AddrLine2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddrLine2");
                  OnAddrLine2Changed();
              }
            }
        }
        private string _AddrLine2 = @" ";
        partial void OnGetAddrLine2(ref string value);
        partial void OnAddrLine2Changing(ref string value);
        partial void OnAddrLine2Changed();
    
        /// <summary>
        /// There are no comments for AddrLine3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string AddrLine3
        {
            get
            {
                string value = _AddrLine3;
                OnGetAddrLine3(ref value);
                return value;
            }
            set
            {
                if (_AddrLine3 != value)
                {
                  OnAddrLine3Changing(ref value);
                  ReportPropertyChanging("AddrLine3");
                  _AddrLine3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddrLine3");
                  OnAddrLine3Changed();
              }
            }
        }
        private string _AddrLine3 = @" ";
        partial void OnGetAddrLine3(ref string value);
        partial void OnAddrLine3Changing(ref string value);
        partial void OnAddrLine3Changed();
    
        /// <summary>
        /// There are no comments for AddrLine4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string AddrLine4
        {
            get
            {
                string value = _AddrLine4;
                OnGetAddrLine4(ref value);
                return value;
            }
            set
            {
                if (_AddrLine4 != value)
                {
                  OnAddrLine4Changing(ref value);
                  ReportPropertyChanging("AddrLine4");
                  _AddrLine4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddrLine4");
                  OnAddrLine4Changed();
              }
            }
        }
        private string _AddrLine4 = @" ";
        partial void OnGetAddrLine4(ref string value);
        partial void OnAddrLine4Changing(ref string value);
        partial void OnAddrLine4Changed();
    
        /// <summary>
        /// There are no comments for Backcolor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual int? Backcolor
        {
            get
            {
                int? value = _Backcolor;
                OnGetBackcolor(ref value);
                return value;
            }
            set
            {
                if (_Backcolor != value)
                {
                  OnBackcolorChanging(ref value);
                  ReportPropertyChanging("Backcolor");
                  _Backcolor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Backcolor");
                  OnBackcolorChanged();
              }
            }
        }
        private int? _Backcolor;
        partial void OnGetBackcolor(ref int? value);
        partial void OnBackcolorChanging(ref int? value);
        partial void OnBackcolorChanged();
    
        /// <summary>
        /// There are no comments for City in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Ciudad")]
        public virtual string City
        {
            get
            {
                string value = _City;
                OnGetCity(ref value);
                return value;
            }
            set
            {
                if (_City != value)
                {
                  OnCityChanging(ref value);
                  ReportPropertyChanging("City");
                  _City = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("City");
                  OnCityChanged();
              }
            }
        }
        private string _City;
        partial void OnGetCity(ref string value);
        partial void OnCityChanging(ref string value);
        partial void OnCityChanged();
    
        /// <summary>
        /// There are no comments for CompanyName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Nombre de Compañía")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Nombre de Compañía")]
        public virtual string CompanyName
        {
            get
            {
                string value = _CompanyName;
                OnGetCompanyName(ref value);
                return value;
            }
            set
            {
                if (_CompanyName != value)
                {
                  OnCompanyNameChanging(ref value);
                  ReportPropertyChanging("CompanyName");
                  _CompanyName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyName");
                  OnCompanyNameChanged();
              }
            }
        }
        private string _CompanyName = @" ";
        partial void OnGetCompanyName(ref string value);
        partial void OnCompanyNameChanging(ref string value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// There are no comments for Contact in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Contacto")]
        public virtual string Contact
        {
            get
            {
                string value = _Contact;
                OnGetContact(ref value);
                return value;
            }
            set
            {
                if (_Contact != value)
                {
                  OnContactChanging(ref value);
                  ReportPropertyChanging("Contact");
                  _Contact = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact");
                  OnContactChanged();
              }
            }
        }
        private string _Contact = @" ";
        partial void OnGetContact(ref string value);
        partial void OnContactChanging(ref string value);
        partial void OnContactChanged();
    
        /// <summary>
        /// There are no comments for CountryCurrLocale in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual int CountryCurrLocale
        {
            get
            {
                int value = _CountryCurrLocale;
                OnGetCountryCurrLocale(ref value);
                return value;
            }
            set
            {
                if (_CountryCurrLocale != value)
                {
                  OnCountryCurrLocaleChanging(ref value);
                  ReportPropertyChanging("CountryCurrLocale");
                  _CountryCurrLocale = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CountryCurrLocale");
                  OnCountryCurrLocaleChanged();
              }
            }
        }
        private int _CountryCurrLocale;
        partial void OnGetCountryCurrLocale(ref int value);
        partial void OnCountryCurrLocaleChanging(ref int value);
        partial void OnCountryCurrLocaleChanged();
    
        /// <summary>
        /// There are no comments for CountryID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string CountryID
        {
            get
            {
                string value = _CountryID;
                OnGetCountryID(ref value);
                return value;
            }
            set
            {
                if (_CountryID != value)
                {
                  OnCountryIDChanging(ref value);
                  ReportPropertyChanging("CountryID");
                  _CountryID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CountryID");
                  OnCountryIDChanged();
              }
            }
        }
        private string _CountryID;
        partial void OnGetCountryID(ref string value);
        partial void OnCountryIDChanging(ref string value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for CurrLocale in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual int CurrLocale
        {
            get
            {
                int value = _CurrLocale;
                OnGetCurrLocale(ref value);
                return value;
            }
            set
            {
                if (_CurrLocale != value)
                {
                  OnCurrLocaleChanging(ref value);
                  ReportPropertyChanging("CurrLocale");
                  _CurrLocale = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrLocale");
                  OnCurrLocaleChanged();
              }
            }
        }
        private int _CurrLocale;
        partial void OnGetCurrLocale(ref int value);
        partial void OnCurrLocaleChanging(ref int value);
        partial void OnCurrLocaleChanged();
    
        /// <summary>
        /// There are no comments for DBServerName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string DBServerName
        {
            get
            {
                string value = _DBServerName;
                OnGetDBServerName(ref value);
                return value;
            }
            set
            {
                if (_DBServerName != value)
                {
                  OnDBServerNameChanging(ref value);
                  ReportPropertyChanging("DBServerName");
                  _DBServerName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DBServerName");
                  OnDBServerNameChanged();
              }
            }
        }
        private string _DBServerName;
        partial void OnGetDBServerName(ref string value);
        partial void OnDBServerNameChanging(ref string value);
        partial void OnDBServerNameChanged();
    
        /// <summary>
        /// There are no comments for DemoData in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string DemoData
        {
            get
            {
                string value = _DemoData;
                OnGetDemoData(ref value);
                return value;
            }
            set
            {
                if (_DemoData != value)
                {
                  OnDemoDataChanging(ref value);
                  ReportPropertyChanging("DemoData");
                  _DemoData = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DemoData");
                  OnDemoDataChanged();
              }
            }
        }
        private string _DemoData;
        partial void OnGetDemoData(ref string value);
        partial void OnDemoDataChanging(ref string value);
        partial void OnDemoDataChanged();
    
        /// <summary>
        /// There are no comments for EMailAddr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Correo")]
        public virtual string EMailAddr
        {
            get
            {
                string value = _EMailAddr;
                OnGetEMailAddr(ref value);
                return value;
            }
            set
            {
                if (_EMailAddr != value)
                {
                  OnEMailAddrChanging(ref value);
                  ReportPropertyChanging("EMailAddr");
                  _EMailAddr = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EMailAddr");
                  OnEMailAddrChanged();
              }
            }
        }
        private string _EMailAddr;
        partial void OnGetEMailAddr(ref string value);
        partial void OnEMailAddrChanging(ref string value);
        partial void OnEMailAddrChanged();
    
        /// <summary>
        /// There are no comments for FAX in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Fax")]
        public virtual string FAX
        {
            get
            {
                string value = _FAX;
                OnGetFAX(ref value);
                return value;
            }
            set
            {
                if (_FAX != value)
                {
                  OnFAXChanging(ref value);
                  ReportPropertyChanging("FAX");
                  _FAX = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FAX");
                  OnFAXChanged();
              }
            }
        }
        private string _FAX = @" ";
        partial void OnGetFAX(ref string value);
        partial void OnFAXChanging(ref string value);
        partial void OnFAXChanged();
    
        /// <summary>
        /// There are no comments for FAXExt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string FAXExt
        {
            get
            {
                string value = _FAXExt;
                OnGetFAXExt(ref value);
                return value;
            }
            set
            {
                if (_FAXExt != value)
                {
                  OnFAXExtChanging(ref value);
                  ReportPropertyChanging("FAXExt");
                  _FAXExt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FAXExt");
                  OnFAXExtChanged();
              }
            }
        }
        private string _FAXExt = @" ";
        partial void OnGetFAXExt(ref string value);
        partial void OnFAXExtChanging(ref string value);
        partial void OnFAXExtChanged();
    
        /// <summary>
        /// There are no comments for FedID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string FedID
        {
            get
            {
                string value = _FedID;
                OnGetFedID(ref value);
                return value;
            }
            set
            {
                if (_FedID != value)
                {
                  OnFedIDChanging(ref value);
                  ReportPropertyChanging("FedID");
                  _FedID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FedID");
                  OnFedIDChanged();
              }
            }
        }
        private string _FedID;
        partial void OnGetFedID(ref string value);
        partial void OnFedIDChanging(ref string value);
        partial void OnFedIDChanged();
    
        /// <summary>
        /// There are no comments for FullGL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual short FullGL
        {
            get
            {
                short value = _FullGL;
                OnGetFullGL(ref value);
                return value;
            }
            set
            {
                if (_FullGL != value)
                {
                  OnFullGLChanging(ref value);
                  ReportPropertyChanging("FullGL");
                  _FullGL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FullGL");
                  OnFullGLChanged();
              }
            }
        }
        private short _FullGL = 0;
        partial void OnGetFullGL(ref short value);
        partial void OnFullGLChanging(ref short value);
        partial void OnFullGLChanged();
    
        /// <summary>
        /// There are no comments for IncludeInOLAP in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual short IncludeInOLAP
        {
            get
            {
                short value = _IncludeInOLAP;
                OnGetIncludeInOLAP(ref value);
                return value;
            }
            set
            {
                if (_IncludeInOLAP != value)
                {
                  OnIncludeInOLAPChanging(ref value);
                  ReportPropertyChanging("IncludeInOLAP");
                  _IncludeInOLAP = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IncludeInOLAP");
                  OnIncludeInOLAPChanged();
              }
            }
        }
        private short _IncludeInOLAP = 0;
        partial void OnGetIncludeInOLAP(ref short value);
        partial void OnIncludeInOLAPChanging(ref short value);
        partial void OnIncludeInOLAPChanged();
    
        /// <summary>
        /// There are no comments for LastArchive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual global::System.DateTime? LastArchive
        {
            get
            {
                global::System.DateTime? value = _LastArchive;
                OnGetLastArchive(ref value);
                return value;
            }
            set
            {
                if (_LastArchive != value)
                {
                  OnLastArchiveChanging(ref value);
                  ReportPropertyChanging("LastArchive");
                  _LastArchive = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastArchive");
                  OnLastArchiveChanged();
              }
            }
        }
        private global::System.DateTime? _LastArchive;
        partial void OnGetLastArchive(ref global::System.DateTime? value);
        partial void OnLastArchiveChanging(ref global::System.DateTime? value);
        partial void OnLastArchiveChanged();
    
        /// <summary>
        /// There are no comments for LastRecover in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual global::System.DateTime? LastRecover
        {
            get
            {
                global::System.DateTime? value = _LastRecover;
                OnGetLastRecover(ref value);
                return value;
            }
            set
            {
                if (_LastRecover != value)
                {
                  OnLastRecoverChanging(ref value);
                  ReportPropertyChanging("LastRecover");
                  _LastRecover = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastRecover");
                  OnLastRecoverChanged();
              }
            }
        }
        private global::System.DateTime? _LastRecover;
        partial void OnGetLastRecover(ref global::System.DateTime? value);
        partial void OnLastRecoverChanging(ref global::System.DateTime? value);
        partial void OnLastRecoverChanged();
    
        /// <summary>
        /// There are no comments for LogoBlobKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual int? LogoBlobKey
        {
            get
            {
                int? value = _LogoBlobKey;
                OnGetLogoBlobKey(ref value);
                return value;
            }
            set
            {
                if (_LogoBlobKey != value)
                {
                  OnLogoBlobKeyChanging(ref value);
                  ReportPropertyChanging("LogoBlobKey");
                  _LogoBlobKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LogoBlobKey");
                  OnLogoBlobKeyChanged();
              }
            }
        }
        private int? _LogoBlobKey;
        partial void OnGetLogoBlobKey(ref int? value);
        partial void OnLogoBlobKeyChanging(ref int? value);
        partial void OnLogoBlobKeyChanged();
    
        /// <summary>
        /// There are no comments for PathToArchive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string PathToArchive
        {
            get
            {
                string value = _PathToArchive;
                OnGetPathToArchive(ref value);
                return value;
            }
            set
            {
                if (_PathToArchive != value)
                {
                  OnPathToArchiveChanging(ref value);
                  ReportPropertyChanging("PathToArchive");
                  _PathToArchive = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PathToArchive");
                  OnPathToArchiveChanged();
              }
            }
        }
        private string _PathToArchive;
        partial void OnGetPathToArchive(ref string value);
        partial void OnPathToArchiveChanging(ref string value);
        partial void OnPathToArchiveChanged();
    
        /// <summary>
        /// There are no comments for PathToDBase in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string PathToDBase
        {
            get
            {
                string value = _PathToDBase;
                OnGetPathToDBase(ref value);
                return value;
            }
            set
            {
                if (_PathToDBase != value)
                {
                  OnPathToDBaseChanging(ref value);
                  ReportPropertyChanging("PathToDBase");
                  _PathToDBase = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PathToDBase");
                  OnPathToDBaseChanged();
              }
            }
        }
        private string _PathToDBase;
        partial void OnGetPathToDBase(ref string value);
        partial void OnPathToDBaseChanging(ref string value);
        partial void OnPathToDBaseChanged();
    
        /// <summary>
        /// There are no comments for PathToLog in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string PathToLog
        {
            get
            {
                string value = _PathToLog;
                OnGetPathToLog(ref value);
                return value;
            }
            set
            {
                if (_PathToLog != value)
                {
                  OnPathToLogChanging(ref value);
                  ReportPropertyChanging("PathToLog");
                  _PathToLog = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PathToLog");
                  OnPathToLogChanged();
              }
            }
        }
        private string _PathToLog;
        partial void OnGetPathToLog(ref string value);
        partial void OnPathToLogChanging(ref string value);
        partial void OnPathToLogChanged();
    
        /// <summary>
        /// There are no comments for Phone in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string Phone
        {
            get
            {
                string value = _Phone;
                OnGetPhone(ref value);
                return value;
            }
            set
            {
                if (_Phone != value)
                {
                  OnPhoneChanging(ref value);
                  ReportPropertyChanging("Phone");
                  _Phone = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Phone");
                  OnPhoneChanged();
              }
            }
        }
        private string _Phone = @" ";
        partial void OnGetPhone(ref string value);
        partial void OnPhoneChanging(ref string value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// There are no comments for PhoneExt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string PhoneExt
        {
            get
            {
                string value = _PhoneExt;
                OnGetPhoneExt(ref value);
                return value;
            }
            set
            {
                if (_PhoneExt != value)
                {
                  OnPhoneExtChanging(ref value);
                  ReportPropertyChanging("PhoneExt");
                  _PhoneExt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PhoneExt");
                  OnPhoneExtChanged();
              }
            }
        }
        private string _PhoneExt = @" ";
        partial void OnGetPhoneExt(ref string value);
        partial void OnPhoneExtChanging(ref string value);
        partial void OnPhoneExtChanged();
    
        /// <summary>
        /// There are no comments for PostalCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string PostalCode
        {
            get
            {
                string value = _PostalCode;
                OnGetPostalCode(ref value);
                return value;
            }
            set
            {
                if (_PostalCode != value)
                {
                  OnPostalCodeChanging(ref value);
                  ReportPropertyChanging("PostalCode");
                  _PostalCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PostalCode");
                  OnPostalCodeChanged();
              }
            }
        }
        private string _PostalCode = @" ";
        partial void OnGetPostalCode(ref string value);
        partial void OnPostalCodeChanging(ref string value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// There are no comments for StateID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string StateID
        {
            get
            {
                string value = _StateID;
                OnGetStateID(ref value);
                return value;
            }
            set
            {
                if (_StateID != value)
                {
                  OnStateIDChanging(ref value);
                  ReportPropertyChanging("StateID");
                  _StateID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("StateID");
                  OnStateIDChanged();
              }
            }
        }
        private string _StateID = @" ";
        partial void OnGetStateID(ref string value);
        partial void OnStateIDChanging(ref string value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// There are no comments for StateTaxID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Código")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Código")]
        public virtual string StateTaxID
        {
            get
            {
                string value = _StateTaxID;
                OnGetStateTaxID(ref value);
                return value;
            }
            set
            {
                if (_StateTaxID != value)
                {
                  OnStateTaxIDChanging(ref value);
                  ReportPropertyChanging("StateTaxID");
                  _StateTaxID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("StateTaxID");
                  OnStateTaxIDChanged();
              }
            }
        }
        private string _StateTaxID;
        partial void OnGetStateTaxID(ref string value);
        partial void OnStateTaxIDChanging(ref string value);
        partial void OnStateTaxIDChanged();
    
        /// <summary>
        /// There are no comments for UseMultLang in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual short UseMultLang
        {
            get
            {
                short value = _UseMultLang;
                OnGetUseMultLang(ref value);
                return value;
            }
            set
            {
                if (_UseMultLang != value)
                {
                  OnUseMultLangChanging(ref value);
                  ReportPropertyChanging("UseMultLang");
                  _UseMultLang = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseMultLang");
                  OnUseMultLangChanged();
              }
            }
        }
        private short _UseMultLang = 0;
        partial void OnGetUseMultLang(ref short value);
        partial void OnUseMultLangChanging(ref short value);
        partial void OnUseMultLangChanged();
    
        /// <summary>
        /// There are no comments for V1099CombStateFed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual short V1099CombStateFed
        {
            get
            {
                short value = _V1099CombStateFed;
                OnGetV1099CombStateFed(ref value);
                return value;
            }
            set
            {
                if (_V1099CombStateFed != value)
                {
                  OnV1099CombStateFedChanging(ref value);
                  ReportPropertyChanging("V1099CombStateFed");
                  _V1099CombStateFed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("V1099CombStateFed");
                  OnV1099CombStateFedChanged();
              }
            }
        }
        private short _V1099CombStateFed = 0;
        partial void OnGetV1099CombStateFed(ref short value);
        partial void OnV1099CombStateFedChanging(ref short value);
        partial void OnV1099CombStateFedChanged();
    
        /// <summary>
        /// There are no comments for V1099PayerNameCtrl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string V1099PayerNameCtrl
        {
            get
            {
                string value = _V1099PayerNameCtrl;
                OnGetV1099PayerNameCtrl(ref value);
                return value;
            }
            set
            {
                if (_V1099PayerNameCtrl != value)
                {
                  OnV1099PayerNameCtrlChanging(ref value);
                  ReportPropertyChanging("V1099PayerNameCtrl");
                  _V1099PayerNameCtrl = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("V1099PayerNameCtrl");
                  OnV1099PayerNameCtrlChanged();
              }
            }
        }
        private string _V1099PayerNameCtrl;
        partial void OnGetV1099PayerNameCtrl(ref string value);
        partial void OnV1099PayerNameCtrlChanging(ref string value);
        partial void OnV1099PayerNameCtrlChanged();
    
        /// <summary>
        /// There are no comments for V1099XmitCtrlCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual string V1099XmitCtrlCode
        {
            get
            {
                string value = _V1099XmitCtrlCode;
                OnGetV1099XmitCtrlCode(ref value);
                return value;
            }
            set
            {
                if (_V1099XmitCtrlCode != value)
                {
                  OnV1099XmitCtrlCodeChanging(ref value);
                  ReportPropertyChanging("V1099XmitCtrlCode");
                  _V1099XmitCtrlCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("V1099XmitCtrlCode");
                  OnV1099XmitCtrlCodeChanged();
              }
            }
        }
        private string _V1099XmitCtrlCode;
        partial void OnGetV1099XmitCtrlCode(ref string value);
        partial void OnV1099XmitCtrlCodeChanging(ref string value);
        partial void OnV1099XmitCtrlCodeChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrPeople in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PersonKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrPeople")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Carnet Identidad")]
    public partial class ThrPeople : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrPeople object.
        /// </summary>
        /// <param name="personKey">Initial value of PersonKey.</param>
        /// <param name="cI">Initial value of CI.</param>
        /// <param name="primerNombre">Initial value of PrimerNombre.</param>
        /// <param name="primerApellido">Initial value of PrimerApellido.</param>
        /// <param name="segundoApellido">Initial value of SegundoApellido.</param>
        /// <param name="estato">Initial value of Estato.</param>
        /// <param name="sex">Initial value of Sex.</param>
        /// <param name="birthDate">Initial value of BirthDate.</param>
        /// <param name="skinColor">Initial value of SkinColor.</param>
        /// <param name="eyesColor">Initial value of EyesColor.</param>
        /// <param name="nacionalitykey">Initial value of Nacionalitykey.</param>
        /// <param name="addressAve">Initial value of AddressAve.</param>
        /// <param name="addressStateKey">Initial value of AddressStateKey.</param>
        /// <param name="positionKey">Initial value of PositionKey.</param>
        /// <param name="ocupationalCategoriakey">Initial value of OcupationalCategoriakey.</param>
        /// <param name="employmentRecord">Initial value of EmploymentRecord.</param>
        /// <param name="registrerDate">Initial value of RegistrerDate.</param>
        /// <param name="acumuladoVacations">Initial value of AcumuladoVacations.</param>
        /// <param name="orgUnitKey">Initial value of OrgUnitKey.</param>
        public static ThrPeople CreateThrPeople(int personKey, string cI, string primerNombre, string primerApellido, string segundoApellido, short estato, short sex, global::System.DateTime birthDate, short skinColor, short eyesColor, short nacionalitykey, string addressAve, short addressStateKey, int positionKey, short ocupationalCategoriakey, string employmentRecord, global::System.DateTime registrerDate, int acumuladoVacations, int orgUnitKey)
        {
            ThrPeople thrPeople = new ThrPeople();
            thrPeople.PersonKey = personKey;
            thrPeople.CI = cI;
            thrPeople.PrimerNombre = primerNombre;
            thrPeople.PrimerApellido = primerApellido;
            thrPeople.SegundoApellido = segundoApellido;
            thrPeople.Estato = estato;
            thrPeople.Sex = sex;
            thrPeople.BirthDate = birthDate;
            thrPeople.SkinColor = skinColor;
            thrPeople.EyesColor = eyesColor;
            thrPeople.Nacionalitykey = nacionalitykey;
            thrPeople.AddressAve = addressAve;
            thrPeople.AddressStateKey = addressStateKey;
            thrPeople.PositionKey = positionKey;
            thrPeople.OcupationalCategoriakey = ocupationalCategoriakey;
            thrPeople.EmploymentRecord = employmentRecord;
            thrPeople.RegistrerDate = registrerDate;
            thrPeople.AcumuladoVacations = acumuladoVacations;
            thrPeople.OrgUnitKey = orgUnitKey;
            return thrPeople;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PersonKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        public virtual int PersonKey
        {
            get
            {
                int value = _PersonKey;
                OnGetPersonKey(ref value);
                return value;
            }
            set
            {
                if (_PersonKey != value)
                {
                  OnPersonKeyChanging(ref value);
                  ReportPropertyChanging("PersonKey");
                  _PersonKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PersonKey");
                  OnPersonKeyChanged();
              }
            }
        }
        private int _PersonKey;
        partial void OnGetPersonKey(ref int value);
        partial void OnPersonKeyChanging(ref int value);
        partial void OnPersonKeyChanged();
    
        /// <summary>
        /// There are no comments for CI in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Carnet Identidad")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Carnet Identidad")]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        public virtual string CI
        {
            get
            {
                string value = _CI;
                OnGetCI(ref value);
                return value;
            }
            set
            {
                if (_CI != value)
                {
                  OnCIChanging(ref value);
                  ReportPropertyChanging("CI");
                  _CI = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CI");
                  OnCIChanged();
              }
            }
        }
        private string _CI;
        partial void OnGetCI(ref string value);
        partial void OnCIChanging(ref string value);
        partial void OnCIChanged();
    
        /// <summary>
        /// There are no comments for PrimerNombre in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Primer Nombre")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Primer Nombre")]
        public virtual string PrimerNombre
        {
            get
            {
                string value = _PrimerNombre;
                OnGetPrimerNombre(ref value);
                return value;
            }
            set
            {
                if (_PrimerNombre != value)
                {
                  OnPrimerNombreChanging(ref value);
                  ReportPropertyChanging("PrimerNombre");
                  _PrimerNombre = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PrimerNombre");
                  OnPrimerNombreChanged();
              }
            }
        }
        private string _PrimerNombre;
        partial void OnGetPrimerNombre(ref string value);
        partial void OnPrimerNombreChanging(ref string value);
        partial void OnPrimerNombreChanged();
    
        /// <summary>
        /// There are no comments for SegundoNombre in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Segundo Nombre")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Segundo Nombre")]
        public virtual string SegundoNombre
        {
            get
            {
                string value = _SegundoNombre;
                OnGetSegundoNombre(ref value);
                return value;
            }
            set
            {
                if (_SegundoNombre != value)
                {
                  OnSegundoNombreChanging(ref value);
                  ReportPropertyChanging("SegundoNombre");
                  _SegundoNombre = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SegundoNombre");
                  OnSegundoNombreChanged();
              }
            }
        }
        private string _SegundoNombre;
        partial void OnGetSegundoNombre(ref string value);
        partial void OnSegundoNombreChanging(ref string value);
        partial void OnSegundoNombreChanged();
    
        /// <summary>
        /// There are no comments for PrimerApellido in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Primer Apellido")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Primer Apellido")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string PrimerApellido
        {
            get
            {
                string value = _PrimerApellido;
                OnGetPrimerApellido(ref value);
                return value;
            }
            set
            {
                if (_PrimerApellido != value)
                {
                  OnPrimerApellidoChanging(ref value);
                  ReportPropertyChanging("PrimerApellido");
                  _PrimerApellido = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PrimerApellido");
                  OnPrimerApellidoChanged();
              }
            }
        }
        private string _PrimerApellido;
        partial void OnGetPrimerApellido(ref string value);
        partial void OnPrimerApellidoChanging(ref string value);
        partial void OnPrimerApellidoChanged();
    
        /// <summary>
        /// There are no comments for SegundoApellido in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Segundo Apellido")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Segundo Apellido")]
        public virtual string SegundoApellido
        {
            get
            {
                string value = _SegundoApellido;
                OnGetSegundoApellido(ref value);
                return value;
            }
            set
            {
                if (_SegundoApellido != value)
                {
                  OnSegundoApellidoChanging(ref value);
                  ReportPropertyChanging("SegundoApellido");
                  _SegundoApellido = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SegundoApellido");
                  OnSegundoApellidoChanged();
              }
            }
        }
        private string _SegundoApellido;
        partial void OnGetSegundoApellido(ref string value);
        partial void OnSegundoApellidoChanging(ref string value);
        partial void OnSegundoApellidoChanged();
    
        /// <summary>
        /// There are no comments for Estato in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Estato
        {
            get
            {
                short value = _Estato;
                OnGetEstato(ref value);
                return value;
            }
            set
            {
                if (_Estato != value)
                {
                  OnEstatoChanging(ref value);
                  ReportPropertyChanging("Estato");
                  _Estato = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Estato");
                  OnEstatoChanged();
              }
            }
        }
        private short _Estato;
        partial void OnGetEstato(ref short value);
        partial void OnEstatoChanging(ref short value);
        partial void OnEstatoChanged();
    
        /// <summary>
        /// There are no comments for Sex in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Sex
        {
            get
            {
                short value = _Sex;
                OnGetSex(ref value);
                return value;
            }
            set
            {
                if (_Sex != value)
                {
                  OnSexChanging(ref value);
                  ReportPropertyChanging("Sex");
                  _Sex = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Sex");
                  OnSexChanged();
              }
            }
        }
        private short _Sex;
        partial void OnGetSex(ref short value);
        partial void OnSexChanging(ref short value);
        partial void OnSexChanged();
    
        /// <summary>
        /// There are no comments for BirthDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime BirthDate
        {
            get
            {
                global::System.DateTime value = _BirthDate;
                OnGetBirthDate(ref value);
                return value;
            }
            set
            {
                if (_BirthDate != value)
                {
                  OnBirthDateChanging(ref value);
                  ReportPropertyChanging("BirthDate");
                  _BirthDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BirthDate");
                  OnBirthDateChanged();
              }
            }
        }
        private global::System.DateTime _BirthDate;
        partial void OnGetBirthDate(ref global::System.DateTime value);
        partial void OnBirthDateChanging(ref global::System.DateTime value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Edad
        {
            get
            {
                int? value = _Edad;
                OnGetEdad(ref value);
                return value;
            }
            set
            {
                if (_Edad != value)
                {
                  OnEdadChanging(ref value);
                  ReportPropertyChanging("Edad");
                  _Edad = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Edad");
                  OnEdadChanged();
              }
            }
        }
        private int? _Edad;
        partial void OnGetEdad(ref int? value);
        partial void OnEdadChanging(ref int? value);
        partial void OnEdadChanged();
    
        /// <summary>
        /// There are no comments for Peso in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Peso
        {
            get
            {
                decimal? value = _Peso;
                OnGetPeso(ref value);
                return value;
            }
            set
            {
                if (_Peso != value)
                {
                  OnPesoChanging(ref value);
                  ReportPropertyChanging("Peso");
                  _Peso = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Peso");
                  OnPesoChanged();
              }
            }
        }
        private decimal? _Peso;
        partial void OnGetPeso(ref decimal? value);
        partial void OnPesoChanging(ref decimal? value);
        partial void OnPesoChanged();
    
        /// <summary>
        /// There are no comments for Estatura in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Estatura
        {
            get
            {
                decimal? value = _Estatura;
                OnGetEstatura(ref value);
                return value;
            }
            set
            {
                if (_Estatura != value)
                {
                  OnEstaturaChanging(ref value);
                  ReportPropertyChanging("Estatura");
                  _Estatura = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Estatura");
                  OnEstaturaChanged();
              }
            }
        }
        private decimal? _Estatura;
        partial void OnGetEstatura(ref decimal? value);
        partial void OnEstaturaChanging(ref decimal? value);
        partial void OnEstaturaChanged();
    
        /// <summary>
        /// There are no comments for CivilStatuskey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? CivilStatuskey
        {
            get
            {
                short? value = _CivilStatuskey;
                OnGetCivilStatuskey(ref value);
                return value;
            }
            set
            {
                if (_CivilStatuskey != value)
                {
                  OnCivilStatuskeyChanging(ref value);
                  ReportPropertyChanging("CivilStatuskey");
                  _CivilStatuskey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CivilStatuskey");
                  OnCivilStatuskeyChanged();
              }
            }
        }
        private short? _CivilStatuskey;
        partial void OnGetCivilStatuskey(ref short? value);
        partial void OnCivilStatuskeyChanging(ref short? value);
        partial void OnCivilStatuskeyChanged();
    
        /// <summary>
        /// There are no comments for SkinColor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SkinColor
        {
            get
            {
                short value = _SkinColor;
                OnGetSkinColor(ref value);
                return value;
            }
            set
            {
                if (_SkinColor != value)
                {
                  OnSkinColorChanging(ref value);
                  ReportPropertyChanging("SkinColor");
                  _SkinColor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SkinColor");
                  OnSkinColorChanged();
              }
            }
        }
        private short _SkinColor;
        partial void OnGetSkinColor(ref short value);
        partial void OnSkinColorChanging(ref short value);
        partial void OnSkinColorChanged();
    
        /// <summary>
        /// There are no comments for EyesColor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short EyesColor
        {
            get
            {
                short value = _EyesColor;
                OnGetEyesColor(ref value);
                return value;
            }
            set
            {
                if (_EyesColor != value)
                {
                  OnEyesColorChanging(ref value);
                  ReportPropertyChanging("EyesColor");
                  _EyesColor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EyesColor");
                  OnEyesColorChanged();
              }
            }
        }
        private short _EyesColor;
        partial void OnGetEyesColor(ref short value);
        partial void OnEyesColorChanging(ref short value);
        partial void OnEyesColorChanged();
    
        /// <summary>
        /// There are no comments for UrlPhoto in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UrlPhoto
        {
            get
            {
                string value = _UrlPhoto;
                OnGetUrlPhoto(ref value);
                return value;
            }
            set
            {
                if (_UrlPhoto != value)
                {
                  OnUrlPhotoChanging(ref value);
                  ReportPropertyChanging("UrlPhoto");
                  _UrlPhoto = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UrlPhoto");
                  OnUrlPhotoChanged();
              }
            }
        }
        private string _UrlPhoto;
        partial void OnGetUrlPhoto(ref string value);
        partial void OnUrlPhotoChanging(ref string value);
        partial void OnUrlPhotoChanged();
    
        /// <summary>
        /// There are no comments for Alias in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Alias
        {
            get
            {
                string value = _Alias;
                OnGetAlias(ref value);
                return value;
            }
            set
            {
                if (_Alias != value)
                {
                  OnAliasChanging(ref value);
                  ReportPropertyChanging("Alias");
                  _Alias = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Alias");
                  OnAliasChanged();
              }
            }
        }
        private string _Alias;
        partial void OnGetAlias(ref string value);
        partial void OnAliasChanging(ref string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// There are no comments for Profesion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Profesión")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string Profesion
        {
            get
            {
                string value = _Profesion;
                OnGetProfesion(ref value);
                return value;
            }
            set
            {
                if (_Profesion != value)
                {
                  OnProfesionChanging(ref value);
                  ReportPropertyChanging("Profesion");
                  _Profesion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Profesion");
                  OnProfesionChanged();
              }
            }
        }
        private string _Profesion;
        partial void OnGetProfesion(ref string value);
        partial void OnProfesionChanging(ref string value);
        partial void OnProfesionChanged();
    
        /// <summary>
        /// There are no comments for SituacionLaboral in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? SituacionLaboral
        {
            get
            {
                short? value = _SituacionLaboral;
                OnGetSituacionLaboral(ref value);
                return value;
            }
            set
            {
                if (_SituacionLaboral != value)
                {
                  OnSituacionLaboralChanging(ref value);
                  ReportPropertyChanging("SituacionLaboral");
                  _SituacionLaboral = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SituacionLaboral");
                  OnSituacionLaboralChanged();
              }
            }
        }
        private short? _SituacionLaboral;
        partial void OnGetSituacionLaboral(ref short? value);
        partial void OnSituacionLaboralChanging(ref short? value);
        partial void OnSituacionLaboralChanged();
    
        /// <summary>
        /// There are no comments for RasgosDistintivos in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RasgosDistintivos
        {
            get
            {
                string value = _RasgosDistintivos;
                OnGetRasgosDistintivos(ref value);
                return value;
            }
            set
            {
                if (_RasgosDistintivos != value)
                {
                  OnRasgosDistintivosChanging(ref value);
                  ReportPropertyChanging("RasgosDistintivos");
                  _RasgosDistintivos = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RasgosDistintivos");
                  OnRasgosDistintivosChanged();
              }
            }
        }
        private string _RasgosDistintivos;
        partial void OnGetRasgosDistintivos(ref string value);
        partial void OnRasgosDistintivosChanging(ref string value);
        partial void OnRasgosDistintivosChanged();
    
        /// <summary>
        /// There are no comments for Nacionalitykey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Nacionalitykey
        {
            get
            {
                short value = _Nacionalitykey;
                OnGetNacionalitykey(ref value);
                return value;
            }
            set
            {
                if (_Nacionalitykey != value)
                {
                  OnNacionalitykeyChanging(ref value);
                  ReportPropertyChanging("Nacionalitykey");
                  _Nacionalitykey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Nacionalitykey");
                  OnNacionalitykeyChanged();
              }
            }
        }
        private short _Nacionalitykey;
        partial void OnGetNacionalitykey(ref short value);
        partial void OnNacionalitykeyChanging(ref short value);
        partial void OnNacionalitykeyChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Correo")]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for Phone in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Phone
        {
            get
            {
                string value = _Phone;
                OnGetPhone(ref value);
                return value;
            }
            set
            {
                if (_Phone != value)
                {
                  OnPhoneChanging(ref value);
                  ReportPropertyChanging("Phone");
                  _Phone = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Phone");
                  OnPhoneChanged();
              }
            }
        }
        private string _Phone;
        partial void OnGetPhone(ref string value);
        partial void OnPhoneChanging(ref string value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// There are no comments for Movil in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Movil
        {
            get
            {
                string value = _Movil;
                OnGetMovil(ref value);
                return value;
            }
            set
            {
                if (_Movil != value)
                {
                  OnMovilChanging(ref value);
                  ReportPropertyChanging("Movil");
                  _Movil = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Movil");
                  OnMovilChanged();
              }
            }
        }
        private string _Movil;
        partial void OnGetMovil(ref string value);
        partial void OnMovilChanging(ref string value);
        partial void OnMovilChanged();
    
        /// <summary>
        /// There are no comments for AddressAve in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string AddressAve
        {
            get
            {
                string value = _AddressAve;
                OnGetAddressAve(ref value);
                return value;
            }
            set
            {
                if (_AddressAve != value)
                {
                  OnAddressAveChanging(ref value);
                  ReportPropertyChanging("AddressAve");
                  _AddressAve = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AddressAve");
                  OnAddressAveChanged();
              }
            }
        }
        private string _AddressAve;
        partial void OnGetAddressAve(ref string value);
        partial void OnAddressAveChanging(ref string value);
        partial void OnAddressAveChanged();
    
        /// <summary>
        /// There are no comments for AddressNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddressNo
        {
            get
            {
                string value = _AddressNo;
                OnGetAddressNo(ref value);
                return value;
            }
            set
            {
                if (_AddressNo != value)
                {
                  OnAddressNoChanging(ref value);
                  ReportPropertyChanging("AddressNo");
                  _AddressNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddressNo");
                  OnAddressNoChanged();
              }
            }
        }
        private string _AddressNo;
        partial void OnGetAddressNo(ref string value);
        partial void OnAddressNoChanging(ref string value);
        partial void OnAddressNoChanged();
    
        /// <summary>
        /// There are no comments for AddressBulding in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddressBulding
        {
            get
            {
                string value = _AddressBulding;
                OnGetAddressBulding(ref value);
                return value;
            }
            set
            {
                if (_AddressBulding != value)
                {
                  OnAddressBuldingChanging(ref value);
                  ReportPropertyChanging("AddressBulding");
                  _AddressBulding = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddressBulding");
                  OnAddressBuldingChanged();
              }
            }
        }
        private string _AddressBulding;
        partial void OnGetAddressBulding(ref string value);
        partial void OnAddressBuldingChanging(ref string value);
        partial void OnAddressBuldingChanged();
    
        /// <summary>
        /// There are no comments for AddressBetween in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddressBetween
        {
            get
            {
                string value = _AddressBetween;
                OnGetAddressBetween(ref value);
                return value;
            }
            set
            {
                if (_AddressBetween != value)
                {
                  OnAddressBetweenChanging(ref value);
                  ReportPropertyChanging("AddressBetween");
                  _AddressBetween = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddressBetween");
                  OnAddressBetweenChanged();
              }
            }
        }
        private string _AddressBetween;
        partial void OnGetAddressBetween(ref string value);
        partial void OnAddressBetweenChanging(ref string value);
        partial void OnAddressBetweenChanged();
    
        /// <summary>
        /// There are no comments for AddressBetweenLast in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddressBetweenLast
        {
            get
            {
                string value = _AddressBetweenLast;
                OnGetAddressBetweenLast(ref value);
                return value;
            }
            set
            {
                if (_AddressBetweenLast != value)
                {
                  OnAddressBetweenLastChanging(ref value);
                  ReportPropertyChanging("AddressBetweenLast");
                  _AddressBetweenLast = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddressBetweenLast");
                  OnAddressBetweenLastChanged();
              }
            }
        }
        private string _AddressBetweenLast;
        partial void OnGetAddressBetweenLast(ref string value);
        partial void OnAddressBetweenLastChanging(ref string value);
        partial void OnAddressBetweenLastChanged();
    
        /// <summary>
        /// There are no comments for AddressRpto in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddressRpto
        {
            get
            {
                string value = _AddressRpto;
                OnGetAddressRpto(ref value);
                return value;
            }
            set
            {
                if (_AddressRpto != value)
                {
                  OnAddressRptoChanging(ref value);
                  ReportPropertyChanging("AddressRpto");
                  _AddressRpto = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddressRpto");
                  OnAddressRptoChanged();
              }
            }
        }
        private string _AddressRpto;
        partial void OnGetAddressRpto(ref string value);
        partial void OnAddressRptoChanging(ref string value);
        partial void OnAddressRptoChanged();
    
        /// <summary>
        /// There are no comments for AddressStateKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AddressStateKey
        {
            get
            {
                short value = _AddressStateKey;
                OnGetAddressStateKey(ref value);
                return value;
            }
            set
            {
                if (_AddressStateKey != value)
                {
                  OnAddressStateKeyChanging(ref value);
                  ReportPropertyChanging("AddressStateKey");
                  _AddressStateKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AddressStateKey");
                  OnAddressStateKeyChanged();
              }
            }
        }
        private short _AddressStateKey;
        partial void OnGetAddressStateKey(ref short value);
        partial void OnAddressStateKeyChanging(ref short value);
        partial void OnAddressStateKeyChanged();
    
        /// <summary>
        /// There are no comments for AddressMunicipalitykey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? AddressMunicipalitykey
        {
            get
            {
                short? value = _AddressMunicipalitykey;
                OnGetAddressMunicipalitykey(ref value);
                return value;
            }
            set
            {
                if (_AddressMunicipalitykey != value)
                {
                  OnAddressMunicipalitykeyChanging(ref value);
                  ReportPropertyChanging("AddressMunicipalitykey");
                  _AddressMunicipalitykey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AddressMunicipalitykey");
                  OnAddressMunicipalitykeyChanged();
              }
            }
        }
        private short? _AddressMunicipalitykey;
        partial void OnGetAddressMunicipalitykey(ref short? value);
        partial void OnAddressMunicipalitykeyChanging(ref short? value);
        partial void OnAddressMunicipalitykeyChanged();
    
        /// <summary>
        /// There are no comments for PositionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PositionKey
        {
            get
            {
                int value = _PositionKey;
                OnGetPositionKey(ref value);
                return value;
            }
            set
            {
                if (_PositionKey != value)
                {
                  OnPositionKeyChanging(ref value);
                  ReportPropertyChanging("PositionKey");
                  _PositionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PositionKey");
                  OnPositionKeyChanged();
              }
            }
        }
        private int _PositionKey;
        partial void OnGetPositionKey(ref int value);
        partial void OnPositionKeyChanging(ref int value);
        partial void OnPositionKeyChanged();
    
        /// <summary>
        /// There are no comments for CultureKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? CultureKey
        {
            get
            {
                short? value = _CultureKey;
                OnGetCultureKey(ref value);
                return value;
            }
            set
            {
                if (_CultureKey != value)
                {
                  OnCultureKeyChanging(ref value);
                  ReportPropertyChanging("CultureKey");
                  _CultureKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CultureKey");
                  OnCultureKeyChanged();
              }
            }
        }
        private short? _CultureKey;
        partial void OnGetCultureKey(ref short? value);
        partial void OnCultureKeyChanging(ref short? value);
        partial void OnCultureKeyChanged();
    
        /// <summary>
        /// There are no comments for OcupationalCategoriakey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short OcupationalCategoriakey
        {
            get
            {
                short value = _OcupationalCategoriakey;
                OnGetOcupationalCategoriakey(ref value);
                return value;
            }
            set
            {
                if (_OcupationalCategoriakey != value)
                {
                  OnOcupationalCategoriakeyChanging(ref value);
                  ReportPropertyChanging("OcupationalCategoriakey");
                  _OcupationalCategoriakey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OcupationalCategoriakey");
                  OnOcupationalCategoriakeyChanged();
              }
            }
        }
        private short _OcupationalCategoriakey;
        partial void OnGetOcupationalCategoriakey(ref short value);
        partial void OnOcupationalCategoriakeyChanging(ref short value);
        partial void OnOcupationalCategoriakeyChanged();
    
        /// <summary>
        /// There are no comments for OcupationalClasificacionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? OcupationalClasificacionKey
        {
            get
            {
                short? value = _OcupationalClasificacionKey;
                OnGetOcupationalClasificacionKey(ref value);
                return value;
            }
            set
            {
                if (_OcupationalClasificacionKey != value)
                {
                  OnOcupationalClasificacionKeyChanging(ref value);
                  ReportPropertyChanging("OcupationalClasificacionKey");
                  _OcupationalClasificacionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OcupationalClasificacionKey");
                  OnOcupationalClasificacionKeyChanged();
              }
            }
        }
        private short? _OcupationalClasificacionKey;
        partial void OnGetOcupationalClasificacionKey(ref short? value);
        partial void OnOcupationalClasificacionKeyChanging(ref short? value);
        partial void OnOcupationalClasificacionKeyChanged();
    
        /// <summary>
        /// There are no comments for CientificCategorykey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? CientificCategorykey
        {
            get
            {
                short? value = _CientificCategorykey;
                OnGetCientificCategorykey(ref value);
                return value;
            }
            set
            {
                if (_CientificCategorykey != value)
                {
                  OnCientificCategorykeyChanging(ref value);
                  ReportPropertyChanging("CientificCategorykey");
                  _CientificCategorykey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CientificCategorykey");
                  OnCientificCategorykeyChanged();
              }
            }
        }
        private short? _CientificCategorykey;
        partial void OnGetCientificCategorykey(ref short? value);
        partial void OnCientificCategorykeyChanging(ref short? value);
        partial void OnCientificCategorykeyChanged();
    
        /// <summary>
        /// There are no comments for EmploymentRecord in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string EmploymentRecord
        {
            get
            {
                string value = _EmploymentRecord;
                OnGetEmploymentRecord(ref value);
                return value;
            }
            set
            {
                if (_EmploymentRecord != value)
                {
                  OnEmploymentRecordChanging(ref value);
                  ReportPropertyChanging("EmploymentRecord");
                  _EmploymentRecord = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EmploymentRecord");
                  OnEmploymentRecordChanged();
              }
            }
        }
        private string _EmploymentRecord;
        partial void OnGetEmploymentRecord(ref string value);
        partial void OnEmploymentRecordChanging(ref string value);
        partial void OnEmploymentRecordChanged();
    
        /// <summary>
        /// There are no comments for NoCuentaMN in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string NoCuentaMN
        {
            get
            {
                string value = _NoCuentaMN;
                OnGetNoCuentaMN(ref value);
                return value;
            }
            set
            {
                if (_NoCuentaMN != value)
                {
                  OnNoCuentaMNChanging(ref value);
                  ReportPropertyChanging("NoCuentaMN");
                  _NoCuentaMN = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NoCuentaMN");
                  OnNoCuentaMNChanged();
              }
            }
        }
        private string _NoCuentaMN;
        partial void OnGetNoCuentaMN(ref string value);
        partial void OnNoCuentaMNChanging(ref string value);
        partial void OnNoCuentaMNChanged();
    
        /// <summary>
        /// There are no comments for NoCuentaCUC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string NoCuentaCUC
        {
            get
            {
                string value = _NoCuentaCUC;
                OnGetNoCuentaCUC(ref value);
                return value;
            }
            set
            {
                if (_NoCuentaCUC != value)
                {
                  OnNoCuentaCUCChanging(ref value);
                  ReportPropertyChanging("NoCuentaCUC");
                  _NoCuentaCUC = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NoCuentaCUC");
                  OnNoCuentaCUCChanged();
              }
            }
        }
        private string _NoCuentaCUC;
        partial void OnGetNoCuentaCUC(ref string value);
        partial void OnNoCuentaCUCChanging(ref string value);
        partial void OnNoCuentaCUCChanged();
    
        /// <summary>
        /// There are no comments for WorkerTypekey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? WorkerTypekey
        {
            get
            {
                short? value = _WorkerTypekey;
                OnGetWorkerTypekey(ref value);
                return value;
            }
            set
            {
                if (_WorkerTypekey != value)
                {
                  OnWorkerTypekeyChanging(ref value);
                  ReportPropertyChanging("WorkerTypekey");
                  _WorkerTypekey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkerTypekey");
                  OnWorkerTypekeyChanged();
              }
            }
        }
        private short? _WorkerTypekey;
        partial void OnGetWorkerTypekey(ref short? value);
        partial void OnWorkerTypekeyChanging(ref short? value);
        partial void OnWorkerTypekeyChanged();
    
        /// <summary>
        /// There are no comments for Observaciones in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Observaciones
        {
            get
            {
                string value = _Observaciones;
                OnGetObservaciones(ref value);
                return value;
            }
            set
            {
                if (_Observaciones != value)
                {
                  OnObservacionesChanging(ref value);
                  ReportPropertyChanging("Observaciones");
                  _Observaciones = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Observaciones");
                  OnObservacionesChanged();
              }
            }
        }
        private string _Observaciones;
        partial void OnGetObservaciones(ref string value);
        partial void OnObservacionesChanging(ref string value);
        partial void OnObservacionesChanged();
    
        /// <summary>
        /// There are no comments for RegistrerDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Fecha Registro")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual global::System.DateTime RegistrerDate
        {
            get
            {
                global::System.DateTime value = _RegistrerDate;
                OnGetRegistrerDate(ref value);
                return value;
            }
            set
            {
                if (_RegistrerDate != value)
                {
                  OnRegistrerDateChanging(ref value);
                  ReportPropertyChanging("RegistrerDate");
                  _RegistrerDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RegistrerDate");
                  OnRegistrerDateChanged();
              }
            }
        }
        private global::System.DateTime _RegistrerDate;
        partial void OnGetRegistrerDate(ref global::System.DateTime value);
        partial void OnRegistrerDateChanging(ref global::System.DateTime value);
        partial void OnRegistrerDateChanged();
    
        /// <summary>
        /// There are no comments for AcumuladoVacations in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AcumuladoVacations
        {
            get
            {
                int value = _AcumuladoVacations;
                OnGetAcumuladoVacations(ref value);
                return value;
            }
            set
            {
                if (_AcumuladoVacations != value)
                {
                  OnAcumuladoVacationsChanging(ref value);
                  ReportPropertyChanging("AcumuladoVacations");
                  _AcumuladoVacations = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcumuladoVacations");
                  OnAcumuladoVacationsChanged();
              }
            }
        }
        private int _AcumuladoVacations;
        partial void OnGetAcumuladoVacations(ref int value);
        partial void OnAcumuladoVacationsChanging(ref int value);
        partial void OnAcumuladoVacationsChanged();
    
        /// <summary>
        /// There are no comments for OrgUnitKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OrgUnitKey
        {
            get
            {
                int value = _OrgUnitKey;
                OnGetOrgUnitKey(ref value);
                return value;
            }
            set
            {
                if (_OrgUnitKey != value)
                {
                  OnOrgUnitKeyChanging(ref value);
                  ReportPropertyChanging("OrgUnitKey");
                  _OrgUnitKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrgUnitKey");
                  OnOrgUnitKeyChanged();
              }
            }
        }
        private int _OrgUnitKey;
        partial void OnGetOrgUnitKey(ref int value);
        partial void OnOrgUnitKeyChanging(ref int value);
        partial void OnOrgUnitKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrPeopleAbsences in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrPeople_ThrPeopleAbsence", "ThrPeopleAbsences")]
        public virtual EntityCollection<ThrPeopleAbsence> ThrPeopleAbsences
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeopleAbsence>("Sage500AppModel.ThrPeople_ThrPeopleAbsence", "ThrPeopleAbsences");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeopleAbsence>("Sage500AppModel.ThrPeople_ThrPeopleAbsence", "ThrPeopleAbsences", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPeopleIncidences in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrPeople_ThrPeopleIncidence", "ThrPeopleIncidences")]
        public virtual EntityCollection<ThrPeopleIncidence> ThrPeopleIncidences
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeopleIncidence>("Sage500AppModel.ThrPeople_ThrPeopleIncidence", "ThrPeopleIncidences");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeopleIncidence>("Sage500AppModel.ThrPeople_ThrPeopleIncidence", "ThrPeopleIncidences", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPeopleLicences in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrPeople_ThrPeopleLicence", "ThrPeopleLicences")]
        public virtual EntityCollection<ThrPeopleLicence> ThrPeopleLicences
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeopleLicence>("Sage500AppModel.ThrPeople_ThrPeopleLicence", "ThrPeopleLicences");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeopleLicence>("Sage500AppModel.ThrPeople_ThrPeopleLicence", "ThrPeopleLicences", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPeopleSubsidies in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrPeople_ThrPeopleSubsidy", "ThrPeopleSubsidies")]
        public virtual EntityCollection<ThrPeopleSubsidy> ThrPeopleSubsidies
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeopleSubsidy>("Sage500AppModel.ThrPeople_ThrPeopleSubsidy", "ThrPeopleSubsidies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeopleSubsidy>("Sage500AppModel.ThrPeople_ThrPeopleSubsidy", "ThrPeopleSubsidies", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPeopleMovements in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrPeople_ThrPeopleMovement", "ThrPeopleMovements")]
        public virtual EntityCollection<ThrPeopleMovement> ThrPeopleMovements
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeopleMovement>("Sage500AppModel.ThrPeople_ThrPeopleMovement", "ThrPeopleMovements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeopleMovement>("Sage500AppModel.ThrPeople_ThrPeopleMovement", "ThrPeopleMovements", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrOrganizativeUnit in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrOrganizativeUnit_ThrPeople", "ThrOrganizativeUnit")]
        public virtual ThrOrganizativeUnit ThrOrganizativeUnit
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrOrganizativeUnit>("Sage500AppModel.ThrOrganizativeUnit_ThrPeople", "ThrOrganizativeUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrOrganizativeUnit>("Sage500AppModel.ThrOrganizativeUnit_ThrPeople", "ThrOrganizativeUnit").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrOrganizativeUnit in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrOrganizativeUnit> ThrOrganizativeUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrOrganizativeUnit>("Sage500AppModel.ThrOrganizativeUnit_ThrPeople", "ThrOrganizativeUnit");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrOrganizativeUnit>("Sage500AppModel.ThrOrganizativeUnit_ThrPeople", "ThrOrganizativeUnit", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrOrganizativeUnit>("Sage500AppModel.ThrOrganizativeUnit_ThrPeople", "ThrOrganizativeUnit").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPeopleVacations in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrPeople_ThrPeopleVacation", "ThrPeopleVacations")]
        public virtual EntityCollection<ThrPeopleVacation> ThrPeopleVacations
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeopleVacation>("Sage500AppModel.ThrPeople_ThrPeopleVacation", "ThrPeopleVacations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeopleVacation>("Sage500AppModel.ThrPeople_ThrPeopleVacation", "ThrPeopleVacations", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.TglSegment in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SegmentKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="TglSegment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TglSegment : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new TglSegment object.
        /// </summary>
        /// <param name="segmentKey">Initial value of SegmentKey.</param>
        /// <param name="acctSegID">Initial value of AcctSegID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="number">Initial value of Number.</param>
        /// <param name="segmentType">Initial value of SegmentType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static TglSegment CreateTglSegment(int segmentKey, short acctSegID, string companyID, string description, short number, short segmentType, int updateCounter)
        {
            TglSegment tglSegment = new TglSegment();
            tglSegment.SegmentKey = segmentKey;
            tglSegment.AcctSegID = acctSegID;
            tglSegment.CompanyID = companyID;
            tglSegment.Description = description;
            tglSegment.Number = number;
            tglSegment.SegmentType = segmentType;
            tglSegment.UpdateCounter = updateCounter;
            return tglSegment;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SegmentKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SegmentKey
        {
            get
            {
                int value = _SegmentKey;
                OnGetSegmentKey(ref value);
                return value;
            }
            set
            {
                if (_SegmentKey != value)
                {
                  OnSegmentKeyChanging(ref value);
                  ReportPropertyChanging("SegmentKey");
                  _SegmentKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SegmentKey");
                  OnSegmentKeyChanged();
              }
            }
        }
        private int _SegmentKey;
        partial void OnGetSegmentKey(ref int value);
        partial void OnSegmentKeyChanging(ref int value);
        partial void OnSegmentKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctSegID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AcctSegID
        {
            get
            {
                short value = _AcctSegID;
                OnGetAcctSegID(ref value);
                return value;
            }
            set
            {
                if (_AcctSegID != value)
                {
                  OnAcctSegIDChanging(ref value);
                  ReportPropertyChanging("AcctSegID");
                  _AcctSegID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcctSegID");
                  OnAcctSegIDChanged();
              }
            }
        }
        private short _AcctSegID;
        partial void OnGetAcctSegID(ref short value);
        partial void OnAcctSegIDChanging(ref short value);
        partial void OnAcctSegIDChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Mask in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Mask
        {
            get
            {
                string value = _Mask;
                OnGetMask(ref value);
                return value;
            }
            set
            {
                if (_Mask != value)
                {
                  OnMaskChanging(ref value);
                  ReportPropertyChanging("Mask");
                  _Mask = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Mask");
                  OnMaskChanged();
              }
            }
        }
        private string _Mask;
        partial void OnGetMask(ref string value);
        partial void OnMaskChanging(ref string value);
        partial void OnMaskChanged();
    
        /// <summary>
        /// There are no comments for Number in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Number
        {
            get
            {
                short value = _Number;
                OnGetNumber(ref value);
                return value;
            }
            set
            {
                if (_Number != value)
                {
                  OnNumberChanging(ref value);
                  ReportPropertyChanging("Number");
                  _Number = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Number");
                  OnNumberChanged();
              }
            }
        }
        private short _Number = 0;
        partial void OnGetNumber(ref short value);
        partial void OnNumberChanging(ref short value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// There are no comments for SegmentType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SegmentType
        {
            get
            {
                short value = _SegmentType;
                OnGetSegmentType(ref value);
                return value;
            }
            set
            {
                if (_SegmentType != value)
                {
                  OnSegmentTypeChanging(ref value);
                  ReportPropertyChanging("SegmentType");
                  _SegmentType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SegmentType");
                  OnSegmentTypeChanged();
              }
            }
        }
        private short _SegmentType = 1;
        partial void OnGetSegmentType(ref short value);
        partial void OnSegmentTypeChanging(ref short value);
        partial void OnSegmentTypeChanged();
    
        /// <summary>
        /// There are no comments for Size in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? Size
        {
            get
            {
                short? value = _Size;
                OnGetSize(ref value);
                return value;
            }
            set
            {
                if (_Size != value)
                {
                  OnSizeChanging(ref value);
                  ReportPropertyChanging("Size");
                  _Size = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Size");
                  OnSizeChanged();
              }
            }
        }
        private short? _Size = 0;
        partial void OnGetSize(ref short? value);
        partial void OnSizeChanging(ref short? value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.TglSegmentCode in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SegmentKey
    /// AcctSegValue
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="TglSegmentCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TglSegmentCode : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new TglSegmentCode object.
        /// </summary>
        /// <param name="segmentKey">Initial value of SegmentKey.</param>
        /// <param name="acctSegValue">Initial value of AcctSegValue.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="shortDesc">Initial value of ShortDesc.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static TglSegmentCode CreateTglSegmentCode(int segmentKey, string acctSegValue, short createType, string description, string shortDesc, int updateCounter)
        {
            TglSegmentCode tglSegmentCode = new TglSegmentCode();
            tglSegmentCode.SegmentKey = segmentKey;
            tglSegmentCode.AcctSegValue = acctSegValue;
            tglSegmentCode.CreateType = createType;
            tglSegmentCode.Description = description;
            tglSegmentCode.ShortDesc = shortDesc;
            tglSegmentCode.UpdateCounter = updateCounter;
            return tglSegmentCode;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SegmentKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SegmentKey
        {
            get
            {
                int value = _SegmentKey;
                OnGetSegmentKey(ref value);
                return value;
            }
            set
            {
                if (_SegmentKey != value)
                {
                  OnSegmentKeyChanging(ref value);
                  ReportPropertyChanging("SegmentKey");
                  _SegmentKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SegmentKey");
                  OnSegmentKeyChanged();
              }
            }
        }
        private int _SegmentKey;
        partial void OnGetSegmentKey(ref int value);
        partial void OnSegmentKeyChanging(ref int value);
        partial void OnSegmentKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctSegValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string AcctSegValue
        {
            get
            {
                string value = _AcctSegValue;
                OnGetAcctSegValue(ref value);
                return value;
            }
            set
            {
                if (_AcctSegValue != value)
                {
                  OnAcctSegValueChanging(ref value);
                  ReportPropertyChanging("AcctSegValue");
                  _AcctSegValue = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AcctSegValue");
                  OnAcctSegValueChanged();
              }
            }
        }
        private string _AcctSegValue;
        partial void OnGetAcctSegValue(ref string value);
        partial void OnAcctSegValueChanging(ref string value);
        partial void OnAcctSegValueChanged();
    
        /// <summary>
        /// There are no comments for ConsolAcctSegValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ConsolAcctSegValue
        {
            get
            {
                string value = _ConsolAcctSegValue;
                OnGetConsolAcctSegValue(ref value);
                return value;
            }
            set
            {
                if (_ConsolAcctSegValue != value)
                {
                  OnConsolAcctSegValueChanging(ref value);
                  ReportPropertyChanging("ConsolAcctSegValue");
                  _ConsolAcctSegValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ConsolAcctSegValue");
                  OnConsolAcctSegValueChanged();
              }
            }
        }
        private string _ConsolAcctSegValue;
        partial void OnGetConsolAcctSegValue(ref string value);
        partial void OnConsolAcctSegValueChanging(ref string value);
        partial void OnConsolAcctSegValueChanged();
    
        /// <summary>
        /// There are no comments for ConsolSegKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ConsolSegKey
        {
            get
            {
                int? value = _ConsolSegKey;
                OnGetConsolSegKey(ref value);
                return value;
            }
            set
            {
                if (_ConsolSegKey != value)
                {
                  OnConsolSegKeyChanging(ref value);
                  ReportPropertyChanging("ConsolSegKey");
                  _ConsolSegKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ConsolSegKey");
                  OnConsolSegKeyChanged();
              }
            }
        }
        private int? _ConsolSegKey;
        partial void OnGetConsolSegKey(ref int? value);
        partial void OnConsolSegKeyChanging(ref int? value);
        partial void OnConsolSegKeyChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for EffEndDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? EffEndDate
        {
            get
            {
                global::System.DateTime? value = _EffEndDate;
                OnGetEffEndDate(ref value);
                return value;
            }
            set
            {
                if (_EffEndDate != value)
                {
                  OnEffEndDateChanging(ref value);
                  ReportPropertyChanging("EffEndDate");
                  _EffEndDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EffEndDate");
                  OnEffEndDateChanged();
              }
            }
        }
        private global::System.DateTime? _EffEndDate;
        partial void OnGetEffEndDate(ref global::System.DateTime? value);
        partial void OnEffEndDateChanging(ref global::System.DateTime? value);
        partial void OnEffEndDateChanged();
    
        /// <summary>
        /// There are no comments for EffStartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? EffStartDate
        {
            get
            {
                global::System.DateTime? value = _EffStartDate;
                OnGetEffStartDate(ref value);
                return value;
            }
            set
            {
                if (_EffStartDate != value)
                {
                  OnEffStartDateChanging(ref value);
                  ReportPropertyChanging("EffStartDate");
                  _EffStartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EffStartDate");
                  OnEffStartDateChanged();
              }
            }
        }
        private global::System.DateTime? _EffStartDate;
        partial void OnGetEffStartDate(ref global::System.DateTime? value);
        partial void OnEffStartDateChanging(ref global::System.DateTime? value);
        partial void OnEffStartDateChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for ShortDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ShortDesc
        {
            get
            {
                string value = _ShortDesc;
                OnGetShortDesc(ref value);
                return value;
            }
            set
            {
                if (_ShortDesc != value)
                {
                  OnShortDescChanging(ref value);
                  ReportPropertyChanging("ShortDesc");
                  _ShortDesc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ShortDesc");
                  OnShortDescChanged();
              }
            }
        }
        private string _ShortDesc;
        partial void OnGetShortDesc(ref string value);
        partial void OnShortDescChanging(ref string value);
        partial void OnShortDescChanged();
    
        /// <summary>
        /// There are no comments for SubsidCurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SubsidCurrID
        {
            get
            {
                string value = _SubsidCurrID;
                OnGetSubsidCurrID(ref value);
                return value;
            }
            set
            {
                if (_SubsidCurrID != value)
                {
                  OnSubsidCurrIDChanging(ref value);
                  ReportPropertyChanging("SubsidCurrID");
                  _SubsidCurrID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SubsidCurrID");
                  OnSubsidCurrIDChanged();
              }
            }
        }
        private string _SubsidCurrID;
        partial void OnGetSubsidCurrID(ref string value);
        partial void OnSubsidCurrIDChanging(ref string value);
        partial void OnSubsidCurrIDChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrLaboralCondition in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ConditionLabkey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrLaboralCondition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrLaboralCondition : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrLaboralCondition object.
        /// </summary>
        /// <param name="conditionLabkey">Initial value of ConditionLabkey.</param>
        /// <param name="conditionlabID">Initial value of ConditionlabID.</param>
        /// <param name="conditionLabDescription">Initial value of ConditionLabDescription.</param>
        /// <param name="tipoConditionLab">Initial value of TipoConditionLab.</param>
        public static ThrLaboralCondition CreateThrLaboralCondition(int conditionLabkey, string conditionlabID, string conditionLabDescription, int tipoConditionLab)
        {
            ThrLaboralCondition thrLaboralCondition = new ThrLaboralCondition();
            thrLaboralCondition.ConditionLabkey = conditionLabkey;
            thrLaboralCondition.ConditionlabID = conditionlabID;
            thrLaboralCondition.ConditionLabDescription = conditionLabDescription;
            thrLaboralCondition.TipoConditionLab = tipoConditionLab;
            return thrLaboralCondition;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ConditionLabkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ConditionLabkey
        {
            get
            {
                int value = _ConditionLabkey;
                OnGetConditionLabkey(ref value);
                return value;
            }
            set
            {
                if (_ConditionLabkey != value)
                {
                  OnConditionLabkeyChanging(ref value);
                  ReportPropertyChanging("ConditionLabkey");
                  _ConditionLabkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ConditionLabkey");
                  OnConditionLabkeyChanged();
              }
            }
        }
        private int _ConditionLabkey;
        partial void OnGetConditionLabkey(ref int value);
        partial void OnConditionLabkeyChanging(ref int value);
        partial void OnConditionLabkeyChanged();
    
        /// <summary>
        /// There are no comments for ConditionlabID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ConditionlabID
        {
            get
            {
                string value = _ConditionlabID;
                OnGetConditionlabID(ref value);
                return value;
            }
            set
            {
                if (_ConditionlabID != value)
                {
                  OnConditionlabIDChanging(ref value);
                  ReportPropertyChanging("ConditionlabID");
                  _ConditionlabID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ConditionlabID");
                  OnConditionlabIDChanged();
              }
            }
        }
        private string _ConditionlabID;
        partial void OnGetConditionlabID(ref string value);
        partial void OnConditionlabIDChanging(ref string value);
        partial void OnConditionlabIDChanged();
    
        /// <summary>
        /// There are no comments for ConditionLabDescription in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ConditionLabDescription
        {
            get
            {
                string value = _ConditionLabDescription;
                OnGetConditionLabDescription(ref value);
                return value;
            }
            set
            {
                if (_ConditionLabDescription != value)
                {
                  OnConditionLabDescriptionChanging(ref value);
                  ReportPropertyChanging("ConditionLabDescription");
                  _ConditionLabDescription = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ConditionLabDescription");
                  OnConditionLabDescriptionChanged();
              }
            }
        }
        private string _ConditionLabDescription;
        partial void OnGetConditionLabDescription(ref string value);
        partial void OnConditionLabDescriptionChanging(ref string value);
        partial void OnConditionLabDescriptionChanged();
    
        /// <summary>
        /// There are no comments for TipoConditionLab in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TipoConditionLab
        {
            get
            {
                int value = _TipoConditionLab;
                OnGetTipoConditionLab(ref value);
                return value;
            }
            set
            {
                if (_TipoConditionLab != value)
                {
                  OnTipoConditionLabChanging(ref value);
                  ReportPropertyChanging("TipoConditionLab");
                  _TipoConditionLab = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TipoConditionLab");
                  OnTipoConditionLabChanged();
              }
            }
        }
        private int _TipoConditionLab;
        partial void OnGetTipoConditionLab(ref int value);
        partial void OnTipoConditionLabChanging(ref int value);
        partial void OnTipoConditionLabChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrPositionConditionLab in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PositionKey
    /// ConditionLabKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrPositionConditionLab")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrPositionConditionLab : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrPositionConditionLab object.
        /// </summary>
        /// <param name="positionKey">Initial value of PositionKey.</param>
        /// <param name="conditionLabKey">Initial value of ConditionLabKey.</param>
        public static ThrPositionConditionLab CreateThrPositionConditionLab(int positionKey, int conditionLabKey)
        {
            ThrPositionConditionLab thrPositionConditionLab = new ThrPositionConditionLab();
            thrPositionConditionLab.PositionKey = positionKey;
            thrPositionConditionLab.ConditionLabKey = conditionLabKey;
            return thrPositionConditionLab;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PositionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PositionKey
        {
            get
            {
                int value = _PositionKey;
                OnGetPositionKey(ref value);
                return value;
            }
            set
            {
                if (_PositionKey != value)
                {
                  OnPositionKeyChanging(ref value);
                  ReportPropertyChanging("PositionKey");
                  _PositionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PositionKey");
                  OnPositionKeyChanged();
              }
            }
        }
        private int _PositionKey;
        partial void OnGetPositionKey(ref int value);
        partial void OnPositionKeyChanging(ref int value);
        partial void OnPositionKeyChanged();
    
        /// <summary>
        /// There are no comments for ConditionLabKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ConditionLabKey
        {
            get
            {
                int value = _ConditionLabKey;
                OnGetConditionLabKey(ref value);
                return value;
            }
            set
            {
                if (_ConditionLabKey != value)
                {
                  OnConditionLabKeyChanging(ref value);
                  ReportPropertyChanging("ConditionLabKey");
                  _ConditionLabKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ConditionLabKey");
                  OnConditionLabKeyChanged();
              }
            }
        }
        private int _ConditionLabKey;
        partial void OnGetConditionLabKey(ref int value);
        partial void OnConditionLabKeyChanging(ref int value);
        partial void OnConditionLabKeyChanged();
    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? Fecha
        {
            get
            {
                global::System.DateTime? value = _Fecha;
                OnGetFecha(ref value);
                return value;
            }
            set
            {
                if (_Fecha != value)
                {
                  OnFechaChanging(ref value);
                  ReportPropertyChanging("Fecha");
                  _Fecha = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Fecha");
                  OnFechaChanged();
              }
            }
        }
        private global::System.DateTime? _Fecha;
        partial void OnGetFecha(ref global::System.DateTime? value);
        partial void OnFechaChanging(ref global::System.DateTime? value);
        partial void OnFechaChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrPosition in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "FK_thrPositionConditionLab_thrPositions", "ThrPosition")]
        public virtual ThrPosition ThrPosition
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrPositionConditionLab_thrPositions", "ThrPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrPositionConditionLab_thrPositions", "ThrPosition").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPosition in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrPosition> ThrPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrPositionConditionLab_thrPositions", "ThrPosition");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrPosition>("Sage500AppModel.FK_thrPositionConditionLab_thrPositions", "ThrPosition", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPosition>("Sage500AppModel.FK_thrPositionConditionLab_thrPositions", "ThrPosition").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrSubsidy in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SubsidyKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrSubsidy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Subsidios")]
    public partial class ThrSubsidy : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrSubsidy object.
        /// </summary>
        /// <param name="subsidyKey">Initial value of SubsidyKey.</param>
        /// <param name="subsideID">Initial value of SubsideID.</param>
        /// <param name="subsidyName">Initial value of SubsidyName.</param>
        /// <param name="porCientoPagar">Initial value of PorCientoPagar.</param>
        /// <param name="resolucion">Initial value of Resolucion.</param>
        public static ThrSubsidy CreateThrSubsidy(int subsidyKey, string subsideID, string subsidyName, decimal porCientoPagar, string resolucion)
        {
            ThrSubsidy thrSubsidy = new ThrSubsidy();
            thrSubsidy.SubsidyKey = subsidyKey;
            thrSubsidy.SubsideID = subsideID;
            thrSubsidy.SubsidyName = subsidyName;
            thrSubsidy.PorCientoPagar = porCientoPagar;
            thrSubsidy.Resolucion = resolucion;
            return thrSubsidy;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SubsidyKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual int SubsidyKey
        {
            get
            {
                int value = _SubsidyKey;
                OnGetSubsidyKey(ref value);
                return value;
            }
            set
            {
                if (_SubsidyKey != value)
                {
                  OnSubsidyKeyChanging(ref value);
                  ReportPropertyChanging("SubsidyKey");
                  _SubsidyKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SubsidyKey");
                  OnSubsidyKeyChanged();
              }
            }
        }
        private int _SubsidyKey;
        partial void OnGetSubsidyKey(ref int value);
        partial void OnSubsidyKeyChanging(ref int value);
        partial void OnSubsidyKeyChanged();
    
        /// <summary>
        /// There are no comments for SubsideID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Código")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Código")]
        public virtual string SubsideID
        {
            get
            {
                string value = _SubsideID;
                OnGetSubsideID(ref value);
                return value;
            }
            set
            {
                if (_SubsideID != value)
                {
                  OnSubsideIDChanging(ref value);
                  ReportPropertyChanging("SubsideID");
                  _SubsideID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SubsideID");
                  OnSubsideIDChanged();
              }
            }
        }
        private string _SubsideID;
        partial void OnGetSubsideID(ref string value);
        partial void OnSubsideIDChanging(ref string value);
        partial void OnSubsideIDChanged();
    
        /// <summary>
        /// There are no comments for SubsidyName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Nombre")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Nombre")]
        public virtual string SubsidyName
        {
            get
            {
                string value = _SubsidyName;
                OnGetSubsidyName(ref value);
                return value;
            }
            set
            {
                if (_SubsidyName != value)
                {
                  OnSubsidyNameChanging(ref value);
                  ReportPropertyChanging("SubsidyName");
                  _SubsidyName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SubsidyName");
                  OnSubsidyNameChanged();
              }
            }
        }
        private string _SubsidyName;
        partial void OnGetSubsidyName(ref string value);
        partial void OnSubsidyNameChanging(ref string value);
        partial void OnSubsidyNameChanged();
    
        /// <summary>
        /// There are no comments for PorCientoPagar in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual decimal PorCientoPagar
        {
            get
            {
                decimal value = _PorCientoPagar;
                OnGetPorCientoPagar(ref value);
                return value;
            }
            set
            {
                if (_PorCientoPagar != value)
                {
                  OnPorCientoPagarChanging(ref value);
                  ReportPropertyChanging("PorCientoPagar");
                  _PorCientoPagar = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PorCientoPagar");
                  OnPorCientoPagarChanged();
              }
            }
        }
        private decimal _PorCientoPagar;
        partial void OnGetPorCientoPagar(ref decimal value);
        partial void OnPorCientoPagarChanging(ref decimal value);
        partial void OnPorCientoPagarChanged();
    
        /// <summary>
        /// There are no comments for Resolucion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Resolución")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string Resolucion
        {
            get
            {
                string value = _Resolucion;
                OnGetResolucion(ref value);
                return value;
            }
            set
            {
                if (_Resolucion != value)
                {
                  OnResolucionChanging(ref value);
                  ReportPropertyChanging("Resolucion");
                  _Resolucion = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Resolucion");
                  OnResolucionChanged();
              }
            }
        }
        private string _Resolucion;
        partial void OnGetResolucion(ref string value);
        partial void OnResolucionChanging(ref string value);
        partial void OnResolucionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrPeopleSubsidies in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrSubsidy_ThrPeopleSubsidy", "ThrPeopleSubsidies")]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual EntityCollection<ThrPeopleSubsidy> ThrPeopleSubsidies
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeopleSubsidy>("Sage500AppModel.ThrSubsidy_ThrPeopleSubsidy", "ThrPeopleSubsidies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeopleSubsidy>("Sage500AppModel.ThrSubsidy_ThrPeopleSubsidy", "ThrPeopleSubsidies", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrAbsence in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Absencekey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrAbsence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrAbsence : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrAbsence object.
        /// </summary>
        /// <param name="absencekey">Initial value of Absencekey.</param>
        /// <param name="absenceID">Initial value of AbsenceID.</param>
        /// <param name="absenceName">Initial value of AbsenceName.</param>
        /// <param name="resolucion">Initial value of Resolucion.</param>
        public static ThrAbsence CreateThrAbsence(int absencekey, string absenceID, string absenceName, string resolucion)
        {
            ThrAbsence thrAbsence = new ThrAbsence();
            thrAbsence.Absencekey = absencekey;
            thrAbsence.AbsenceID = absenceID;
            thrAbsence.AbsenceName = absenceName;
            thrAbsence.Resolucion = resolucion;
            return thrAbsence;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Absencekey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Absencekey
        {
            get
            {
                int value = _Absencekey;
                OnGetAbsencekey(ref value);
                return value;
            }
            set
            {
                if (_Absencekey != value)
                {
                  OnAbsencekeyChanging(ref value);
                  ReportPropertyChanging("Absencekey");
                  _Absencekey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Absencekey");
                  OnAbsencekeyChanged();
              }
            }
        }
        private int _Absencekey;
        partial void OnGetAbsencekey(ref int value);
        partial void OnAbsencekeyChanging(ref int value);
        partial void OnAbsencekeyChanged();
    
        /// <summary>
        /// There are no comments for AbsenceID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string AbsenceID
        {
            get
            {
                string value = _AbsenceID;
                OnGetAbsenceID(ref value);
                return value;
            }
            set
            {
                if (_AbsenceID != value)
                {
                  OnAbsenceIDChanging(ref value);
                  ReportPropertyChanging("AbsenceID");
                  _AbsenceID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AbsenceID");
                  OnAbsenceIDChanged();
              }
            }
        }
        private string _AbsenceID;
        partial void OnGetAbsenceID(ref string value);
        partial void OnAbsenceIDChanging(ref string value);
        partial void OnAbsenceIDChanged();
    
        /// <summary>
        /// There are no comments for AbsenceName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string AbsenceName
        {
            get
            {
                string value = _AbsenceName;
                OnGetAbsenceName(ref value);
                return value;
            }
            set
            {
                if (_AbsenceName != value)
                {
                  OnAbsenceNameChanging(ref value);
                  ReportPropertyChanging("AbsenceName");
                  _AbsenceName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AbsenceName");
                  OnAbsenceNameChanged();
              }
            }
        }
        private string _AbsenceName;
        partial void OnGetAbsenceName(ref string value);
        partial void OnAbsenceNameChanging(ref string value);
        partial void OnAbsenceNameChanged();
    
        /// <summary>
        /// There are no comments for Resolucion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Resolucion
        {
            get
            {
                string value = _Resolucion;
                OnGetResolucion(ref value);
                return value;
            }
            set
            {
                if (_Resolucion != value)
                {
                  OnResolucionChanging(ref value);
                  ReportPropertyChanging("Resolucion");
                  _Resolucion = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Resolucion");
                  OnResolucionChanged();
              }
            }
        }
        private string _Resolucion;
        partial void OnGetResolucion(ref string value);
        partial void OnResolucionChanging(ref string value);
        partial void OnResolucionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrPeopleAbsences in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrAbsence_ThrPeopleAbsence", "ThrPeopleAbsences")]
        public virtual EntityCollection<ThrPeopleAbsence> ThrPeopleAbsences
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeopleAbsence>("Sage500AppModel.ThrAbsence_ThrPeopleAbsence", "ThrPeopleAbsences");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeopleAbsence>("Sage500AppModel.ThrAbsence_ThrPeopleAbsence", "ThrPeopleAbsences", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrLicence in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Licencekey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrLicence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrLicence : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrLicence object.
        /// </summary>
        /// <param name="licencekey">Initial value of Licencekey.</param>
        /// <param name="licenceID">Initial value of LicenceID.</param>
        /// <param name="licenceName">Initial value of LicenceName.</param>
        /// <param name="resolution">Initial value of Resolution.</param>
        /// <param name="acumulaVacaciones">Initial value of AcumulaVacaciones.</param>
        public static ThrLicence CreateThrLicence(int licencekey, string licenceID, string licenceName, string resolution, int acumulaVacaciones)
        {
            ThrLicence thrLicence = new ThrLicence();
            thrLicence.Licencekey = licencekey;
            thrLicence.LicenceID = licenceID;
            thrLicence.LicenceName = licenceName;
            thrLicence.Resolution = resolution;
            thrLicence.AcumulaVacaciones = acumulaVacaciones;
            return thrLicence;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Licencekey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Licencekey
        {
            get
            {
                int value = _Licencekey;
                OnGetLicencekey(ref value);
                return value;
            }
            set
            {
                if (_Licencekey != value)
                {
                  OnLicencekeyChanging(ref value);
                  ReportPropertyChanging("Licencekey");
                  _Licencekey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Licencekey");
                  OnLicencekeyChanged();
              }
            }
        }
        private int _Licencekey;
        partial void OnGetLicencekey(ref int value);
        partial void OnLicencekeyChanging(ref int value);
        partial void OnLicencekeyChanged();
    
        /// <summary>
        /// There are no comments for LicenceID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string LicenceID
        {
            get
            {
                string value = _LicenceID;
                OnGetLicenceID(ref value);
                return value;
            }
            set
            {
                if (_LicenceID != value)
                {
                  OnLicenceIDChanging(ref value);
                  ReportPropertyChanging("LicenceID");
                  _LicenceID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LicenceID");
                  OnLicenceIDChanged();
              }
            }
        }
        private string _LicenceID;
        partial void OnGetLicenceID(ref string value);
        partial void OnLicenceIDChanging(ref string value);
        partial void OnLicenceIDChanged();
    
        /// <summary>
        /// There are no comments for LicenceName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string LicenceName
        {
            get
            {
                string value = _LicenceName;
                OnGetLicenceName(ref value);
                return value;
            }
            set
            {
                if (_LicenceName != value)
                {
                  OnLicenceNameChanging(ref value);
                  ReportPropertyChanging("LicenceName");
                  _LicenceName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LicenceName");
                  OnLicenceNameChanged();
              }
            }
        }
        private string _LicenceName;
        partial void OnGetLicenceName(ref string value);
        partial void OnLicenceNameChanging(ref string value);
        partial void OnLicenceNameChanged();
    
        /// <summary>
        /// There are no comments for Resolution in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Resolution
        {
            get
            {
                string value = _Resolution;
                OnGetResolution(ref value);
                return value;
            }
            set
            {
                if (_Resolution != value)
                {
                  OnResolutionChanging(ref value);
                  ReportPropertyChanging("Resolution");
                  _Resolution = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Resolution");
                  OnResolutionChanged();
              }
            }
        }
        private string _Resolution;
        partial void OnGetResolution(ref string value);
        partial void OnResolutionChanging(ref string value);
        partial void OnResolutionChanged();
    
        /// <summary>
        /// There are no comments for AcumulaVacaciones in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AcumulaVacaciones
        {
            get
            {
                int value = _AcumulaVacaciones;
                OnGetAcumulaVacaciones(ref value);
                return value;
            }
            set
            {
                if (_AcumulaVacaciones != value)
                {
                  OnAcumulaVacacionesChanging(ref value);
                  ReportPropertyChanging("AcumulaVacaciones");
                  _AcumulaVacaciones = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcumulaVacaciones");
                  OnAcumulaVacacionesChanged();
              }
            }
        }
        private int _AcumulaVacaciones;
        partial void OnGetAcumulaVacaciones(ref int value);
        partial void OnAcumulaVacacionesChanging(ref int value);
        partial void OnAcumulaVacacionesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrPeopleLicences in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrLicence_ThrPeopleLicence", "ThrPeopleLicences")]
        public virtual EntityCollection<ThrPeopleLicence> ThrPeopleLicences
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeopleLicence>("Sage500AppModel.ThrLicence_ThrPeopleLicence", "ThrPeopleLicences");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeopleLicence>("Sage500AppModel.ThrLicence_ThrPeopleLicence", "ThrPeopleLicences", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrIncidence in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Incidencekey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrIncidence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrIncidence : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrIncidence object.
        /// </summary>
        /// <param name="incidencekey">Initial value of Incidencekey.</param>
        /// <param name="incidenceCod">Initial value of IncidenceCod.</param>
        /// <param name="incidenceID">Initial value of IncidenceID.</param>
        /// <param name="incidencePCientoPagar">Initial value of IncidencePCientoPagar.</param>
        /// <param name="resolution">Initial value of Resolution.</param>
        public static ThrIncidence CreateThrIncidence(int incidencekey, string incidenceCod, string incidenceID, decimal incidencePCientoPagar, string resolution)
        {
            ThrIncidence thrIncidence = new ThrIncidence();
            thrIncidence.Incidencekey = incidencekey;
            thrIncidence.IncidenceCod = incidenceCod;
            thrIncidence.IncidenceID = incidenceID;
            thrIncidence.IncidencePCientoPagar = incidencePCientoPagar;
            thrIncidence.Resolution = resolution;
            return thrIncidence;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Incidencekey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Incidencekey
        {
            get
            {
                int value = _Incidencekey;
                OnGetIncidencekey(ref value);
                return value;
            }
            set
            {
                if (_Incidencekey != value)
                {
                  OnIncidencekeyChanging(ref value);
                  ReportPropertyChanging("Incidencekey");
                  _Incidencekey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Incidencekey");
                  OnIncidencekeyChanged();
              }
            }
        }
        private int _Incidencekey;
        partial void OnGetIncidencekey(ref int value);
        partial void OnIncidencekeyChanging(ref int value);
        partial void OnIncidencekeyChanged();
    
        /// <summary>
        /// There are no comments for IncidenceCod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string IncidenceCod
        {
            get
            {
                string value = _IncidenceCod;
                OnGetIncidenceCod(ref value);
                return value;
            }
            set
            {
                if (_IncidenceCod != value)
                {
                  OnIncidenceCodChanging(ref value);
                  ReportPropertyChanging("IncidenceCod");
                  _IncidenceCod = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("IncidenceCod");
                  OnIncidenceCodChanged();
              }
            }
        }
        private string _IncidenceCod;
        partial void OnGetIncidenceCod(ref string value);
        partial void OnIncidenceCodChanging(ref string value);
        partial void OnIncidenceCodChanged();
    
        /// <summary>
        /// There are no comments for IncidenceID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string IncidenceID
        {
            get
            {
                string value = _IncidenceID;
                OnGetIncidenceID(ref value);
                return value;
            }
            set
            {
                if (_IncidenceID != value)
                {
                  OnIncidenceIDChanging(ref value);
                  ReportPropertyChanging("IncidenceID");
                  _IncidenceID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("IncidenceID");
                  OnIncidenceIDChanged();
              }
            }
        }
        private string _IncidenceID;
        partial void OnGetIncidenceID(ref string value);
        partial void OnIncidenceIDChanging(ref string value);
        partial void OnIncidenceIDChanged();
    
        /// <summary>
        /// There are no comments for IncidencePCientoPagar in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal IncidencePCientoPagar
        {
            get
            {
                decimal value = _IncidencePCientoPagar;
                OnGetIncidencePCientoPagar(ref value);
                return value;
            }
            set
            {
                if (_IncidencePCientoPagar != value)
                {
                  OnIncidencePCientoPagarChanging(ref value);
                  ReportPropertyChanging("IncidencePCientoPagar");
                  _IncidencePCientoPagar = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IncidencePCientoPagar");
                  OnIncidencePCientoPagarChanged();
              }
            }
        }
        private decimal _IncidencePCientoPagar;
        partial void OnGetIncidencePCientoPagar(ref decimal value);
        partial void OnIncidencePCientoPagarChanging(ref decimal value);
        partial void OnIncidencePCientoPagarChanged();
    
        /// <summary>
        /// There are no comments for Resolution in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Resolution
        {
            get
            {
                string value = _Resolution;
                OnGetResolution(ref value);
                return value;
            }
            set
            {
                if (_Resolution != value)
                {
                  OnResolutionChanging(ref value);
                  ReportPropertyChanging("Resolution");
                  _Resolution = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Resolution");
                  OnResolutionChanged();
              }
            }
        }
        private string _Resolution;
        partial void OnGetResolution(ref string value);
        partial void OnResolutionChanging(ref string value);
        partial void OnResolutionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrPeopleIncidences in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrIncidence_ThrPeopleIncidence", "ThrPeopleIncidences")]
        public virtual EntityCollection<ThrPeopleIncidence> ThrPeopleIncidences
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeopleIncidence>("Sage500AppModel.ThrIncidence_ThrPeopleIncidence", "ThrPeopleIncidences");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeopleIncidence>("Sage500AppModel.ThrIncidence_ThrPeopleIncidence", "ThrPeopleIncidences", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrDeduction in the schema.
    /// </summary>
    /// <KeyProperties>
    /// DeductionKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrDeduction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrDeduction : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrDeduction object.
        /// </summary>
        /// <param name="deductionKey">Initial value of DeductionKey.</param>
        /// <param name="deductionCod">Initial value of DeductionCod.</param>
        /// <param name="deductionID">Initial value of DeductionID.</param>
        public static ThrDeduction CreateThrDeduction(int deductionKey, string deductionCod, string deductionID)
        {
            ThrDeduction thrDeduction = new ThrDeduction();
            thrDeduction.DeductionKey = deductionKey;
            thrDeduction.DeductionCod = deductionCod;
            thrDeduction.DeductionID = deductionID;
            return thrDeduction;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for DeductionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DeductionKey
        {
            get
            {
                int value = _DeductionKey;
                OnGetDeductionKey(ref value);
                return value;
            }
            set
            {
                if (_DeductionKey != value)
                {
                  OnDeductionKeyChanging(ref value);
                  ReportPropertyChanging("DeductionKey");
                  _DeductionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DeductionKey");
                  OnDeductionKeyChanged();
              }
            }
        }
        private int _DeductionKey;
        partial void OnGetDeductionKey(ref int value);
        partial void OnDeductionKeyChanging(ref int value);
        partial void OnDeductionKeyChanged();
    
        /// <summary>
        /// There are no comments for DeductionCod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DeductionCod
        {
            get
            {
                string value = _DeductionCod;
                OnGetDeductionCod(ref value);
                return value;
            }
            set
            {
                if (_DeductionCod != value)
                {
                  OnDeductionCodChanging(ref value);
                  ReportPropertyChanging("DeductionCod");
                  _DeductionCod = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DeductionCod");
                  OnDeductionCodChanged();
              }
            }
        }
        private string _DeductionCod;
        partial void OnGetDeductionCod(ref string value);
        partial void OnDeductionCodChanging(ref string value);
        partial void OnDeductionCodChanged();
    
        /// <summary>
        /// There are no comments for DeductionID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DeductionID
        {
            get
            {
                string value = _DeductionID;
                OnGetDeductionID(ref value);
                return value;
            }
            set
            {
                if (_DeductionID != value)
                {
                  OnDeductionIDChanging(ref value);
                  ReportPropertyChanging("DeductionID");
                  _DeductionID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DeductionID");
                  OnDeductionIDChanged();
              }
            }
        }
        private string _DeductionID;
        partial void OnGetDeductionID(ref string value);
        partial void OnDeductionIDChanging(ref string value);
        partial void OnDeductionIDChanged();
    
        /// <summary>
        /// There are no comments for DeductionDescrip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DeductionDescrip
        {
            get
            {
                string value = _DeductionDescrip;
                OnGetDeductionDescrip(ref value);
                return value;
            }
            set
            {
                if (_DeductionDescrip != value)
                {
                  OnDeductionDescripChanging(ref value);
                  ReportPropertyChanging("DeductionDescrip");
                  _DeductionDescrip = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DeductionDescrip");
                  OnDeductionDescripChanged();
              }
            }
        }
        private string _DeductionDescrip;
        partial void OnGetDeductionDescrip(ref string value);
        partial void OnDeductionDescripChanging(ref string value);
        partial void OnDeductionDescripChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrMovement in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Movementkey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrMovement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrMovement : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrMovement object.
        /// </summary>
        /// <param name="movementkey">Initial value of Movementkey.</param>
        /// <param name="movementDescrip">Initial value of MovementDescrip.</param>
        public static ThrMovement CreateThrMovement(int movementkey, string movementDescrip)
        {
            ThrMovement thrMovement = new ThrMovement();
            thrMovement.Movementkey = movementkey;
            thrMovement.MovementDescrip = movementDescrip;
            return thrMovement;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Movementkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Movementkey
        {
            get
            {
                int value = _Movementkey;
                OnGetMovementkey(ref value);
                return value;
            }
            set
            {
                if (_Movementkey != value)
                {
                  OnMovementkeyChanging(ref value);
                  ReportPropertyChanging("Movementkey");
                  _Movementkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Movementkey");
                  OnMovementkeyChanged();
              }
            }
        }
        private int _Movementkey;
        partial void OnGetMovementkey(ref int value);
        partial void OnMovementkeyChanging(ref int value);
        partial void OnMovementkeyChanged();
    
        /// <summary>
        /// There are no comments for MovementID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string MovementID
        {
            get
            {
                string value = _MovementID;
                OnGetMovementID(ref value);
                return value;
            }
            set
            {
                if (_MovementID != value)
                {
                  OnMovementIDChanging(ref value);
                  ReportPropertyChanging("MovementID");
                  _MovementID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MovementID");
                  OnMovementIDChanged();
              }
            }
        }
        private string _MovementID;
        partial void OnGetMovementID(ref string value);
        partial void OnMovementIDChanging(ref string value);
        partial void OnMovementIDChanged();
    
        /// <summary>
        /// There are no comments for MovementName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string MovementName
        {
            get
            {
                string value = _MovementName;
                OnGetMovementName(ref value);
                return value;
            }
            set
            {
                if (_MovementName != value)
                {
                  OnMovementNameChanging(ref value);
                  ReportPropertyChanging("MovementName");
                  _MovementName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MovementName");
                  OnMovementNameChanged();
              }
            }
        }
        private string _MovementName;
        partial void OnGetMovementName(ref string value);
        partial void OnMovementNameChanging(ref string value);
        partial void OnMovementNameChanged();
    
        /// <summary>
        /// There are no comments for MovementDescrip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string MovementDescrip
        {
            get
            {
                string value = _MovementDescrip;
                OnGetMovementDescrip(ref value);
                return value;
            }
            set
            {
                if (_MovementDescrip != value)
                {
                  OnMovementDescripChanging(ref value);
                  ReportPropertyChanging("MovementDescrip");
                  _MovementDescrip = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("MovementDescrip");
                  OnMovementDescripChanged();
              }
            }
        }
        private string _MovementDescrip;
        partial void OnGetMovementDescrip(ref string value);
        partial void OnMovementDescripChanging(ref string value);
        partial void OnMovementDescripChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrPeopleMovements in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrMovement_ThrPeopleMovement", "ThrPeopleMovements")]
        public virtual EntityCollection<ThrPeopleMovement> ThrPeopleMovements
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrPeopleMovement>("Sage500AppModel.ThrMovement_ThrPeopleMovement", "ThrPeopleMovements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrPeopleMovement>("Sage500AppModel.ThrMovement_ThrPeopleMovement", "ThrPeopleMovements", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrRetention in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Retentionkey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrRetention")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Retenciones")]
    public partial class ThrRetention : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrRetention object.
        /// </summary>
        /// <param name="retentionkey">Initial value of Retentionkey.</param>
        /// <param name="retentionCod">Initial value of RetentionCod.</param>
        /// <param name="retentionName">Initial value of RetentionName.</param>
        /// <param name="retentionDescription">Initial value of RetentionDescription.</param>
        public static ThrRetention CreateThrRetention(int retentionkey, string retentionCod, string retentionName, string retentionDescription)
        {
            ThrRetention thrRetention = new ThrRetention();
            thrRetention.Retentionkey = retentionkey;
            thrRetention.RetentionCod = retentionCod;
            thrRetention.RetentionName = retentionName;
            thrRetention.RetentionDescription = retentionDescription;
            return thrRetention;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Retentionkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupHideColumn]
        public virtual int Retentionkey
        {
            get
            {
                int value = _Retentionkey;
                OnGetRetentionkey(ref value);
                return value;
            }
            set
            {
                if (_Retentionkey != value)
                {
                  OnRetentionkeyChanging(ref value);
                  ReportPropertyChanging("Retentionkey");
                  _Retentionkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Retentionkey");
                  OnRetentionkeyChanged();
              }
            }
        }
        private int _Retentionkey;
        partial void OnGetRetentionkey(ref int value);
        partial void OnRetentionkeyChanging(ref int value);
        partial void OnRetentionkeyChanged();
    
        /// <summary>
        /// There are no comments for RetentionCod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Código")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Código")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string RetentionCod
        {
            get
            {
                string value = _RetentionCod;
                OnGetRetentionCod(ref value);
                return value;
            }
            set
            {
                if (_RetentionCod != value)
                {
                  OnRetentionCodChanging(ref value);
                  ReportPropertyChanging("RetentionCod");
                  _RetentionCod = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RetentionCod");
                  OnRetentionCodChanged();
              }
            }
        }
        private string _RetentionCod;
        partial void OnGetRetentionCod(ref string value);
        partial void OnRetentionCodChanging(ref string value);
        partial void OnRetentionCodChanged();
    
        /// <summary>
        /// There are no comments for RetentionName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Nombre")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Nombre")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string RetentionName
        {
            get
            {
                string value = _RetentionName;
                OnGetRetentionName(ref value);
                return value;
            }
            set
            {
                if (_RetentionName != value)
                {
                  OnRetentionNameChanging(ref value);
                  ReportPropertyChanging("RetentionName");
                  _RetentionName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RetentionName");
                  OnRetentionNameChanged();
              }
            }
        }
        private string _RetentionName;
        partial void OnGetRetentionName(ref string value);
        partial void OnRetentionNameChanging(ref string value);
        partial void OnRetentionNameChanged();
    
        /// <summary>
        /// There are no comments for RetentionDescription in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Descripción")]
        public virtual string RetentionDescription
        {
            get
            {
                string value = _RetentionDescription;
                OnGetRetentionDescription(ref value);
                return value;
            }
            set
            {
                if (_RetentionDescription != value)
                {
                  OnRetentionDescriptionChanging(ref value);
                  ReportPropertyChanging("RetentionDescription");
                  _RetentionDescription = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RetentionDescription");
                  OnRetentionDescriptionChanged();
              }
            }
        }
        private string _RetentionDescription;
        partial void OnGetRetentionDescription(ref string value);
        partial void OnRetentionDescriptionChanging(ref string value);
        partial void OnRetentionDescriptionChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrPeopleAbsence in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PersonKey
    /// AbsenceFechaInicio
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrPeopleAbsence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrPeopleAbsence : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrPeopleAbsence object.
        /// </summary>
        /// <param name="peopleAbsencekey">Initial value of PeopleAbsencekey.</param>
        /// <param name="absenceKey">Initial value of AbsenceKey.</param>
        /// <param name="personKey">Initial value of PersonKey.</param>
        /// <param name="absenceFechaInicio">Initial value of AbsenceFechaInicio.</param>
        /// <param name="absenceFechaFin">Initial value of AbsenceFechaFin.</param>
        /// <param name="periodkey">Initial value of Periodkey.</param>
        public static ThrPeopleAbsence CreateThrPeopleAbsence(int peopleAbsencekey, int absenceKey, int personKey, global::System.DateTime absenceFechaInicio, global::System.DateTime absenceFechaFin, int periodkey)
        {
            ThrPeopleAbsence thrPeopleAbsence = new ThrPeopleAbsence();
            thrPeopleAbsence.PeopleAbsencekey = peopleAbsencekey;
            thrPeopleAbsence.AbsenceKey = absenceKey;
            thrPeopleAbsence.PersonKey = personKey;
            thrPeopleAbsence.AbsenceFechaInicio = absenceFechaInicio;
            thrPeopleAbsence.AbsenceFechaFin = absenceFechaFin;
            thrPeopleAbsence.Periodkey = periodkey;
            return thrPeopleAbsence;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PeopleAbsencekey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PeopleAbsencekey
        {
            get
            {
                int value = _PeopleAbsencekey;
                OnGetPeopleAbsencekey(ref value);
                return value;
            }
            set
            {
                if (_PeopleAbsencekey != value)
                {
                  OnPeopleAbsencekeyChanging(ref value);
                  ReportPropertyChanging("PeopleAbsencekey");
                  _PeopleAbsencekey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeopleAbsencekey");
                  OnPeopleAbsencekeyChanged();
              }
            }
        }
        private int _PeopleAbsencekey;
        partial void OnGetPeopleAbsencekey(ref int value);
        partial void OnPeopleAbsencekeyChanging(ref int value);
        partial void OnPeopleAbsencekeyChanged();
    
        /// <summary>
        /// There are no comments for AbsenceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AbsenceKey
        {
            get
            {
                int value = _AbsenceKey;
                OnGetAbsenceKey(ref value);
                return value;
            }
            set
            {
                if (_AbsenceKey != value)
                {
                  OnAbsenceKeyChanging(ref value);
                  ReportPropertyChanging("AbsenceKey");
                  _AbsenceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AbsenceKey");
                  OnAbsenceKeyChanged();
              }
            }
        }
        private int _AbsenceKey;
        partial void OnGetAbsenceKey(ref int value);
        partial void OnAbsenceKeyChanging(ref int value);
        partial void OnAbsenceKeyChanged();
    
        /// <summary>
        /// There are no comments for PersonKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PersonKey
        {
            get
            {
                int value = _PersonKey;
                OnGetPersonKey(ref value);
                return value;
            }
            set
            {
                if (_PersonKey != value)
                {
                  OnPersonKeyChanging(ref value);
                  ReportPropertyChanging("PersonKey");
                  _PersonKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PersonKey");
                  OnPersonKeyChanged();
              }
            }
        }
        private int _PersonKey;
        partial void OnGetPersonKey(ref int value);
        partial void OnPersonKeyChanging(ref int value);
        partial void OnPersonKeyChanged();
    
        /// <summary>
        /// There are no comments for AbsenceFechaInicio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime AbsenceFechaInicio
        {
            get
            {
                global::System.DateTime value = _AbsenceFechaInicio;
                OnGetAbsenceFechaInicio(ref value);
                return value;
            }
            set
            {
                if (_AbsenceFechaInicio != value)
                {
                  OnAbsenceFechaInicioChanging(ref value);
                  ReportPropertyChanging("AbsenceFechaInicio");
                  _AbsenceFechaInicio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AbsenceFechaInicio");
                  OnAbsenceFechaInicioChanged();
              }
            }
        }
        private global::System.DateTime _AbsenceFechaInicio;
        partial void OnGetAbsenceFechaInicio(ref global::System.DateTime value);
        partial void OnAbsenceFechaInicioChanging(ref global::System.DateTime value);
        partial void OnAbsenceFechaInicioChanged();
    
        /// <summary>
        /// There are no comments for AbsenceFechaFin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime AbsenceFechaFin
        {
            get
            {
                global::System.DateTime value = _AbsenceFechaFin;
                OnGetAbsenceFechaFin(ref value);
                return value;
            }
            set
            {
                if (_AbsenceFechaFin != value)
                {
                  OnAbsenceFechaFinChanging(ref value);
                  ReportPropertyChanging("AbsenceFechaFin");
                  _AbsenceFechaFin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AbsenceFechaFin");
                  OnAbsenceFechaFinChanged();
              }
            }
        }
        private global::System.DateTime _AbsenceFechaFin;
        partial void OnGetAbsenceFechaFin(ref global::System.DateTime value);
        partial void OnAbsenceFechaFinChanging(ref global::System.DateTime value);
        partial void OnAbsenceFechaFinChanged();
    
        /// <summary>
        /// There are no comments for Periodkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Periodkey
        {
            get
            {
                int value = _Periodkey;
                OnGetPeriodkey(ref value);
                return value;
            }
            set
            {
                if (_Periodkey != value)
                {
                  OnPeriodkeyChanging(ref value);
                  ReportPropertyChanging("Periodkey");
                  _Periodkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Periodkey");
                  OnPeriodkeyChanged();
              }
            }
        }
        private int _Periodkey;
        partial void OnGetPeriodkey(ref int value);
        partial void OnPeriodkeyChanging(ref int value);
        partial void OnPeriodkeyChanged();

        #endregion

        #region Navigation Properties

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrPeopleIncidence in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PersonKey
    /// IncidenceFechaInicio
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrPeopleIncidence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrPeopleIncidence : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrPeopleIncidence object.
        /// </summary>
        /// <param name="peopleIncidenceKey">Initial value of PeopleIncidenceKey.</param>
        /// <param name="incidenceKey">Initial value of IncidenceKey.</param>
        /// <param name="personKey">Initial value of PersonKey.</param>
        /// <param name="incidenceFechaInicio">Initial value of IncidenceFechaInicio.</param>
        /// <param name="incidenceFechaFin">Initial value of IncidenceFechaFin.</param>
        /// <param name="periodkey">Initial value of Periodkey.</param>
        public static ThrPeopleIncidence CreateThrPeopleIncidence(int peopleIncidenceKey, int incidenceKey, int personKey, global::System.DateTime incidenceFechaInicio, global::System.DateTime incidenceFechaFin, int periodkey)
        {
            ThrPeopleIncidence thrPeopleIncidence = new ThrPeopleIncidence();
            thrPeopleIncidence.PeopleIncidenceKey = peopleIncidenceKey;
            thrPeopleIncidence.IncidenceKey = incidenceKey;
            thrPeopleIncidence.PersonKey = personKey;
            thrPeopleIncidence.IncidenceFechaInicio = incidenceFechaInicio;
            thrPeopleIncidence.IncidenceFechaFin = incidenceFechaFin;
            thrPeopleIncidence.Periodkey = periodkey;
            return thrPeopleIncidence;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PeopleIncidenceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PeopleIncidenceKey
        {
            get
            {
                int value = _PeopleIncidenceKey;
                OnGetPeopleIncidenceKey(ref value);
                return value;
            }
            set
            {
                if (_PeopleIncidenceKey != value)
                {
                  OnPeopleIncidenceKeyChanging(ref value);
                  ReportPropertyChanging("PeopleIncidenceKey");
                  _PeopleIncidenceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeopleIncidenceKey");
                  OnPeopleIncidenceKeyChanged();
              }
            }
        }
        private int _PeopleIncidenceKey;
        partial void OnGetPeopleIncidenceKey(ref int value);
        partial void OnPeopleIncidenceKeyChanging(ref int value);
        partial void OnPeopleIncidenceKeyChanged();
    
        /// <summary>
        /// There are no comments for IncidenceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int IncidenceKey
        {
            get
            {
                int value = _IncidenceKey;
                OnGetIncidenceKey(ref value);
                return value;
            }
            set
            {
                if (_IncidenceKey != value)
                {
                  OnIncidenceKeyChanging(ref value);
                  ReportPropertyChanging("IncidenceKey");
                  _IncidenceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IncidenceKey");
                  OnIncidenceKeyChanged();
              }
            }
        }
        private int _IncidenceKey;
        partial void OnGetIncidenceKey(ref int value);
        partial void OnIncidenceKeyChanging(ref int value);
        partial void OnIncidenceKeyChanged();
    
        /// <summary>
        /// There are no comments for PersonKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PersonKey
        {
            get
            {
                int value = _PersonKey;
                OnGetPersonKey(ref value);
                return value;
            }
            set
            {
                if (_PersonKey != value)
                {
                  OnPersonKeyChanging(ref value);
                  ReportPropertyChanging("PersonKey");
                  _PersonKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PersonKey");
                  OnPersonKeyChanged();
              }
            }
        }
        private int _PersonKey;
        partial void OnGetPersonKey(ref int value);
        partial void OnPersonKeyChanging(ref int value);
        partial void OnPersonKeyChanged();
    
        /// <summary>
        /// There are no comments for IncidenceFechaInicio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime IncidenceFechaInicio
        {
            get
            {
                global::System.DateTime value = _IncidenceFechaInicio;
                OnGetIncidenceFechaInicio(ref value);
                return value;
            }
            set
            {
                if (_IncidenceFechaInicio != value)
                {
                  OnIncidenceFechaInicioChanging(ref value);
                  ReportPropertyChanging("IncidenceFechaInicio");
                  _IncidenceFechaInicio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IncidenceFechaInicio");
                  OnIncidenceFechaInicioChanged();
              }
            }
        }
        private global::System.DateTime _IncidenceFechaInicio;
        partial void OnGetIncidenceFechaInicio(ref global::System.DateTime value);
        partial void OnIncidenceFechaInicioChanging(ref global::System.DateTime value);
        partial void OnIncidenceFechaInicioChanged();
    
        /// <summary>
        /// There are no comments for IncidenceFechaFin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime IncidenceFechaFin
        {
            get
            {
                global::System.DateTime value = _IncidenceFechaFin;
                OnGetIncidenceFechaFin(ref value);
                return value;
            }
            set
            {
                if (_IncidenceFechaFin != value)
                {
                  OnIncidenceFechaFinChanging(ref value);
                  ReportPropertyChanging("IncidenceFechaFin");
                  _IncidenceFechaFin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IncidenceFechaFin");
                  OnIncidenceFechaFinChanged();
              }
            }
        }
        private global::System.DateTime _IncidenceFechaFin;
        partial void OnGetIncidenceFechaFin(ref global::System.DateTime value);
        partial void OnIncidenceFechaFinChanging(ref global::System.DateTime value);
        partial void OnIncidenceFechaFinChanged();
    
        /// <summary>
        /// There are no comments for Periodkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Periodkey
        {
            get
            {
                int value = _Periodkey;
                OnGetPeriodkey(ref value);
                return value;
            }
            set
            {
                if (_Periodkey != value)
                {
                  OnPeriodkeyChanging(ref value);
                  ReportPropertyChanging("Periodkey");
                  _Periodkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Periodkey");
                  OnPeriodkeyChanged();
              }
            }
        }
        private int _Periodkey;
        partial void OnGetPeriodkey(ref int value);
        partial void OnPeriodkeyChanging(ref int value);
        partial void OnPeriodkeyChanged();

        #endregion

        #region Navigation Properties

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrPeopleLicence in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PersonKey
    /// LicenceFechaInicio
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrPeopleLicence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrPeopleLicence : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrPeopleLicence object.
        /// </summary>
        /// <param name="peopleLicenceKey">Initial value of PeopleLicenceKey.</param>
        /// <param name="licenceKey">Initial value of LicenceKey.</param>
        /// <param name="personKey">Initial value of PersonKey.</param>
        /// <param name="licenceFechaInicio">Initial value of LicenceFechaInicio.</param>
        /// <param name="licenceFechaFin">Initial value of LicenceFechaFin.</param>
        /// <param name="periodkey">Initial value of Periodkey.</param>
        public static ThrPeopleLicence CreateThrPeopleLicence(int peopleLicenceKey, int licenceKey, int personKey, global::System.DateTime licenceFechaInicio, global::System.DateTime licenceFechaFin, int periodkey)
        {
            ThrPeopleLicence thrPeopleLicence = new ThrPeopleLicence();
            thrPeopleLicence.PeopleLicenceKey = peopleLicenceKey;
            thrPeopleLicence.LicenceKey = licenceKey;
            thrPeopleLicence.PersonKey = personKey;
            thrPeopleLicence.LicenceFechaInicio = licenceFechaInicio;
            thrPeopleLicence.LicenceFechaFin = licenceFechaFin;
            thrPeopleLicence.Periodkey = periodkey;
            return thrPeopleLicence;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PeopleLicenceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PeopleLicenceKey
        {
            get
            {
                int value = _PeopleLicenceKey;
                OnGetPeopleLicenceKey(ref value);
                return value;
            }
            set
            {
                if (_PeopleLicenceKey != value)
                {
                  OnPeopleLicenceKeyChanging(ref value);
                  ReportPropertyChanging("PeopleLicenceKey");
                  _PeopleLicenceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeopleLicenceKey");
                  OnPeopleLicenceKeyChanged();
              }
            }
        }
        private int _PeopleLicenceKey;
        partial void OnGetPeopleLicenceKey(ref int value);
        partial void OnPeopleLicenceKeyChanging(ref int value);
        partial void OnPeopleLicenceKeyChanged();
    
        /// <summary>
        /// There are no comments for LicenceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int LicenceKey
        {
            get
            {
                int value = _LicenceKey;
                OnGetLicenceKey(ref value);
                return value;
            }
            set
            {
                if (_LicenceKey != value)
                {
                  OnLicenceKeyChanging(ref value);
                  ReportPropertyChanging("LicenceKey");
                  _LicenceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LicenceKey");
                  OnLicenceKeyChanged();
              }
            }
        }
        private int _LicenceKey;
        partial void OnGetLicenceKey(ref int value);
        partial void OnLicenceKeyChanging(ref int value);
        partial void OnLicenceKeyChanged();
    
        /// <summary>
        /// There are no comments for PersonKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PersonKey
        {
            get
            {
                int value = _PersonKey;
                OnGetPersonKey(ref value);
                return value;
            }
            set
            {
                if (_PersonKey != value)
                {
                  OnPersonKeyChanging(ref value);
                  ReportPropertyChanging("PersonKey");
                  _PersonKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PersonKey");
                  OnPersonKeyChanged();
              }
            }
        }
        private int _PersonKey;
        partial void OnGetPersonKey(ref int value);
        partial void OnPersonKeyChanging(ref int value);
        partial void OnPersonKeyChanged();
    
        /// <summary>
        /// There are no comments for LicenceFechaInicio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime LicenceFechaInicio
        {
            get
            {
                global::System.DateTime value = _LicenceFechaInicio;
                OnGetLicenceFechaInicio(ref value);
                return value;
            }
            set
            {
                if (_LicenceFechaInicio != value)
                {
                  OnLicenceFechaInicioChanging(ref value);
                  ReportPropertyChanging("LicenceFechaInicio");
                  _LicenceFechaInicio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LicenceFechaInicio");
                  OnLicenceFechaInicioChanged();
              }
            }
        }
        private global::System.DateTime _LicenceFechaInicio;
        partial void OnGetLicenceFechaInicio(ref global::System.DateTime value);
        partial void OnLicenceFechaInicioChanging(ref global::System.DateTime value);
        partial void OnLicenceFechaInicioChanged();
    
        /// <summary>
        /// There are no comments for LicenceFechaFin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime LicenceFechaFin
        {
            get
            {
                global::System.DateTime value = _LicenceFechaFin;
                OnGetLicenceFechaFin(ref value);
                return value;
            }
            set
            {
                if (_LicenceFechaFin != value)
                {
                  OnLicenceFechaFinChanging(ref value);
                  ReportPropertyChanging("LicenceFechaFin");
                  _LicenceFechaFin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LicenceFechaFin");
                  OnLicenceFechaFinChanged();
              }
            }
        }
        private global::System.DateTime _LicenceFechaFin;
        partial void OnGetLicenceFechaFin(ref global::System.DateTime value);
        partial void OnLicenceFechaFinChanging(ref global::System.DateTime value);
        partial void OnLicenceFechaFinChanged();
    
        /// <summary>
        /// There are no comments for Periodkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Periodkey
        {
            get
            {
                int value = _Periodkey;
                OnGetPeriodkey(ref value);
                return value;
            }
            set
            {
                if (_Periodkey != value)
                {
                  OnPeriodkeyChanging(ref value);
                  ReportPropertyChanging("Periodkey");
                  _Periodkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Periodkey");
                  OnPeriodkeyChanged();
              }
            }
        }
        private int _Periodkey;
        partial void OnGetPeriodkey(ref int value);
        partial void OnPeriodkeyChanging(ref int value);
        partial void OnPeriodkeyChanged();

        #endregion

        #region Navigation Properties

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrPeopleSubsidy in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PersonKey
    /// SubsidyFechaInicio
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrPeopleSubsidy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrPeopleSubsidy : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrPeopleSubsidy object.
        /// </summary>
        /// <param name="peopleSubsidyKey">Initial value of PeopleSubsidyKey.</param>
        /// <param name="subsidyKey">Initial value of SubsidyKey.</param>
        /// <param name="personKey">Initial value of PersonKey.</param>
        /// <param name="subsidyFechaInicio">Initial value of SubsidyFechaInicio.</param>
        /// <param name="subsidyFechaFin">Initial value of SubsidyFechaFin.</param>
        /// <param name="subsidyInicio">Initial value of SubsidyInicio.</param>
        /// <param name="subsidyHospitalizado">Initial value of SubsidyHospitalizado.</param>
        /// <param name="periodkey">Initial value of Periodkey.</param>
        public static ThrPeopleSubsidy CreateThrPeopleSubsidy(int peopleSubsidyKey, int subsidyKey, int personKey, global::System.DateTime subsidyFechaInicio, global::System.DateTime subsidyFechaFin, int subsidyInicio, int subsidyHospitalizado, int periodkey)
        {
            ThrPeopleSubsidy thrPeopleSubsidy = new ThrPeopleSubsidy();
            thrPeopleSubsidy.PeopleSubsidyKey = peopleSubsidyKey;
            thrPeopleSubsidy.SubsidyKey = subsidyKey;
            thrPeopleSubsidy.PersonKey = personKey;
            thrPeopleSubsidy.SubsidyFechaInicio = subsidyFechaInicio;
            thrPeopleSubsidy.SubsidyFechaFin = subsidyFechaFin;
            thrPeopleSubsidy.SubsidyInicio = subsidyInicio;
            thrPeopleSubsidy.SubsidyHospitalizado = subsidyHospitalizado;
            thrPeopleSubsidy.Periodkey = periodkey;
            return thrPeopleSubsidy;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PeopleSubsidyKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PeopleSubsidyKey
        {
            get
            {
                int value = _PeopleSubsidyKey;
                OnGetPeopleSubsidyKey(ref value);
                return value;
            }
            set
            {
                if (_PeopleSubsidyKey != value)
                {
                  OnPeopleSubsidyKeyChanging(ref value);
                  ReportPropertyChanging("PeopleSubsidyKey");
                  _PeopleSubsidyKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeopleSubsidyKey");
                  OnPeopleSubsidyKeyChanged();
              }
            }
        }
        private int _PeopleSubsidyKey;
        partial void OnGetPeopleSubsidyKey(ref int value);
        partial void OnPeopleSubsidyKeyChanging(ref int value);
        partial void OnPeopleSubsidyKeyChanged();
    
        /// <summary>
        /// There are no comments for SubsidyKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SubsidyKey
        {
            get
            {
                int value = _SubsidyKey;
                OnGetSubsidyKey(ref value);
                return value;
            }
            set
            {
                if (_SubsidyKey != value)
                {
                  OnSubsidyKeyChanging(ref value);
                  ReportPropertyChanging("SubsidyKey");
                  _SubsidyKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SubsidyKey");
                  OnSubsidyKeyChanged();
              }
            }
        }
        private int _SubsidyKey;
        partial void OnGetSubsidyKey(ref int value);
        partial void OnSubsidyKeyChanging(ref int value);
        partial void OnSubsidyKeyChanged();
    
        /// <summary>
        /// There are no comments for PersonKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PersonKey
        {
            get
            {
                int value = _PersonKey;
                OnGetPersonKey(ref value);
                return value;
            }
            set
            {
                if (_PersonKey != value)
                {
                  OnPersonKeyChanging(ref value);
                  ReportPropertyChanging("PersonKey");
                  _PersonKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PersonKey");
                  OnPersonKeyChanged();
              }
            }
        }
        private int _PersonKey;
        partial void OnGetPersonKey(ref int value);
        partial void OnPersonKeyChanging(ref int value);
        partial void OnPersonKeyChanged();
    
        /// <summary>
        /// There are no comments for SubsidyFechaInicio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime SubsidyFechaInicio
        {
            get
            {
                global::System.DateTime value = _SubsidyFechaInicio;
                OnGetSubsidyFechaInicio(ref value);
                return value;
            }
            set
            {
                if (_SubsidyFechaInicio != value)
                {
                  OnSubsidyFechaInicioChanging(ref value);
                  ReportPropertyChanging("SubsidyFechaInicio");
                  _SubsidyFechaInicio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SubsidyFechaInicio");
                  OnSubsidyFechaInicioChanged();
              }
            }
        }
        private global::System.DateTime _SubsidyFechaInicio;
        partial void OnGetSubsidyFechaInicio(ref global::System.DateTime value);
        partial void OnSubsidyFechaInicioChanging(ref global::System.DateTime value);
        partial void OnSubsidyFechaInicioChanged();
    
        /// <summary>
        /// There are no comments for SubsidyFechaFin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime SubsidyFechaFin
        {
            get
            {
                global::System.DateTime value = _SubsidyFechaFin;
                OnGetSubsidyFechaFin(ref value);
                return value;
            }
            set
            {
                if (_SubsidyFechaFin != value)
                {
                  OnSubsidyFechaFinChanging(ref value);
                  ReportPropertyChanging("SubsidyFechaFin");
                  _SubsidyFechaFin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SubsidyFechaFin");
                  OnSubsidyFechaFinChanged();
              }
            }
        }
        private global::System.DateTime _SubsidyFechaFin;
        partial void OnGetSubsidyFechaFin(ref global::System.DateTime value);
        partial void OnSubsidyFechaFinChanging(ref global::System.DateTime value);
        partial void OnSubsidyFechaFinChanged();
    
        /// <summary>
        /// There are no comments for SubsidyInicio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SubsidyInicio
        {
            get
            {
                int value = _SubsidyInicio;
                OnGetSubsidyInicio(ref value);
                return value;
            }
            set
            {
                if (_SubsidyInicio != value)
                {
                  OnSubsidyInicioChanging(ref value);
                  ReportPropertyChanging("SubsidyInicio");
                  _SubsidyInicio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SubsidyInicio");
                  OnSubsidyInicioChanged();
              }
            }
        }
        private int _SubsidyInicio;
        partial void OnGetSubsidyInicio(ref int value);
        partial void OnSubsidyInicioChanging(ref int value);
        partial void OnSubsidyInicioChanged();
    
        /// <summary>
        /// There are no comments for SubsidyHospitalizado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SubsidyHospitalizado
        {
            get
            {
                int value = _SubsidyHospitalizado;
                OnGetSubsidyHospitalizado(ref value);
                return value;
            }
            set
            {
                if (_SubsidyHospitalizado != value)
                {
                  OnSubsidyHospitalizadoChanging(ref value);
                  ReportPropertyChanging("SubsidyHospitalizado");
                  _SubsidyHospitalizado = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SubsidyHospitalizado");
                  OnSubsidyHospitalizadoChanged();
              }
            }
        }
        private int _SubsidyHospitalizado;
        partial void OnGetSubsidyHospitalizado(ref int value);
        partial void OnSubsidyHospitalizadoChanging(ref int value);
        partial void OnSubsidyHospitalizadoChanged();
    
        /// <summary>
        /// There are no comments for Periodkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Periodkey
        {
            get
            {
                int value = _Periodkey;
                OnGetPeriodkey(ref value);
                return value;
            }
            set
            {
                if (_Periodkey != value)
                {
                  OnPeriodkeyChanging(ref value);
                  ReportPropertyChanging("Periodkey");
                  _Periodkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Periodkey");
                  OnPeriodkeyChanged();
              }
            }
        }
        private int _Periodkey;
        partial void OnGetPeriodkey(ref int value);
        partial void OnPeriodkeyChanging(ref int value);
        partial void OnPeriodkeyChanged();

        #endregion

        #region Navigation Properties

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrOperationsPeriod in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Periodkey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrOperationsPeriod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrOperationsPeriod : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrOperationsPeriod object.
        /// </summary>
        /// <param name="periodkey">Initial value of Periodkey.</param>
        /// <param name="numeroConsecuitvo">Initial value of NumeroConsecuitvo.</param>
        /// <param name="periodFechaInicio">Initial value of PeriodFechaInicio.</param>
        /// <param name="periodFechaFin">Initial value of PeriodFechaFin.</param>
        /// <param name="periodoDescription">Initial value of PeriodoDescription.</param>
        /// <param name="periodEstado">Initial value of PeriodEstado.</param>
        public static ThrOperationsPeriod CreateThrOperationsPeriod(int periodkey, int numeroConsecuitvo, global::System.DateTime periodFechaInicio, global::System.DateTime periodFechaFin, string periodoDescription, int periodEstado)
        {
            ThrOperationsPeriod thrOperationsPeriod = new ThrOperationsPeriod();
            thrOperationsPeriod.Periodkey = periodkey;
            thrOperationsPeriod.NumeroConsecuitvo = numeroConsecuitvo;
            thrOperationsPeriod.PeriodFechaInicio = periodFechaInicio;
            thrOperationsPeriod.PeriodFechaFin = periodFechaFin;
            thrOperationsPeriod.PeriodoDescription = periodoDescription;
            thrOperationsPeriod.PeriodEstado = periodEstado;
            return thrOperationsPeriod;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Periodkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Periodkey
        {
            get
            {
                int value = _Periodkey;
                OnGetPeriodkey(ref value);
                return value;
            }
            set
            {
                if (_Periodkey != value)
                {
                  OnPeriodkeyChanging(ref value);
                  ReportPropertyChanging("Periodkey");
                  _Periodkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Periodkey");
                  OnPeriodkeyChanged();
              }
            }
        }
        private int _Periodkey;
        partial void OnGetPeriodkey(ref int value);
        partial void OnPeriodkeyChanging(ref int value);
        partial void OnPeriodkeyChanged();
    
        /// <summary>
        /// There are no comments for NumeroConsecuitvo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NumeroConsecuitvo
        {
            get
            {
                int value = _NumeroConsecuitvo;
                OnGetNumeroConsecuitvo(ref value);
                return value;
            }
            set
            {
                if (_NumeroConsecuitvo != value)
                {
                  OnNumeroConsecuitvoChanging(ref value);
                  ReportPropertyChanging("NumeroConsecuitvo");
                  _NumeroConsecuitvo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NumeroConsecuitvo");
                  OnNumeroConsecuitvoChanged();
              }
            }
        }
        private int _NumeroConsecuitvo;
        partial void OnGetNumeroConsecuitvo(ref int value);
        partial void OnNumeroConsecuitvoChanging(ref int value);
        partial void OnNumeroConsecuitvoChanged();
    
        /// <summary>
        /// There are no comments for PeriodFechaInicio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PeriodFechaInicio
        {
            get
            {
                global::System.DateTime value = _PeriodFechaInicio;
                OnGetPeriodFechaInicio(ref value);
                return value;
            }
            set
            {
                if (_PeriodFechaInicio != value)
                {
                  OnPeriodFechaInicioChanging(ref value);
                  ReportPropertyChanging("PeriodFechaInicio");
                  _PeriodFechaInicio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodFechaInicio");
                  OnPeriodFechaInicioChanged();
              }
            }
        }
        private global::System.DateTime _PeriodFechaInicio;
        partial void OnGetPeriodFechaInicio(ref global::System.DateTime value);
        partial void OnPeriodFechaInicioChanging(ref global::System.DateTime value);
        partial void OnPeriodFechaInicioChanged();
    
        /// <summary>
        /// There are no comments for PeriodFechaFin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PeriodFechaFin
        {
            get
            {
                global::System.DateTime value = _PeriodFechaFin;
                OnGetPeriodFechaFin(ref value);
                return value;
            }
            set
            {
                if (_PeriodFechaFin != value)
                {
                  OnPeriodFechaFinChanging(ref value);
                  ReportPropertyChanging("PeriodFechaFin");
                  _PeriodFechaFin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodFechaFin");
                  OnPeriodFechaFinChanged();
              }
            }
        }
        private global::System.DateTime _PeriodFechaFin;
        partial void OnGetPeriodFechaFin(ref global::System.DateTime value);
        partial void OnPeriodFechaFinChanging(ref global::System.DateTime value);
        partial void OnPeriodFechaFinChanged();
    
        /// <summary>
        /// There are no comments for PeriodoDescription in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PeriodoDescription
        {
            get
            {
                string value = _PeriodoDescription;
                OnGetPeriodoDescription(ref value);
                return value;
            }
            set
            {
                if (_PeriodoDescription != value)
                {
                  OnPeriodoDescriptionChanging(ref value);
                  ReportPropertyChanging("PeriodoDescription");
                  _PeriodoDescription = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PeriodoDescription");
                  OnPeriodoDescriptionChanged();
              }
            }
        }
        private string _PeriodoDescription;
        partial void OnGetPeriodoDescription(ref string value);
        partial void OnPeriodoDescriptionChanging(ref string value);
        partial void OnPeriodoDescriptionChanged();
    
        /// <summary>
        /// There are no comments for PeriodEstado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PeriodEstado
        {
            get
            {
                int value = _PeriodEstado;
                OnGetPeriodEstado(ref value);
                return value;
            }
            set
            {
                if (_PeriodEstado != value)
                {
                  OnPeriodEstadoChanging(ref value);
                  ReportPropertyChanging("PeriodEstado");
                  _PeriodEstado = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodEstado");
                  OnPeriodEstadoChanged();
              }
            }
        }
        private int _PeriodEstado;
        partial void OnGetPeriodEstado(ref int value);
        partial void OnPeriodEstadoChanging(ref int value);
        partial void OnPeriodEstadoChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrWorkedTime in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WorkedTimeKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrWorkedTime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrWorkedTime : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrWorkedTime object.
        /// </summary>
        /// <param name="workedTimeKey">Initial value of WorkedTimeKey.</param>
        /// <param name="personKey">Initial value of PersonKey.</param>
        /// <param name="workedHours">Initial value of WorkedHours.</param>
        /// <param name="extraHours">Initial value of ExtraHours.</param>
        /// <param name="holidayDays">Initial value of HolidayDays.</param>
        /// <param name="periodkey">Initial value of Periodkey.</param>
        public static ThrWorkedTime CreateThrWorkedTime(int workedTimeKey, int personKey, decimal workedHours, decimal extraHours, int holidayDays, int periodkey)
        {
            ThrWorkedTime thrWorkedTime = new ThrWorkedTime();
            thrWorkedTime.WorkedTimeKey = workedTimeKey;
            thrWorkedTime.PersonKey = personKey;
            thrWorkedTime.WorkedHours = workedHours;
            thrWorkedTime.ExtraHours = extraHours;
            thrWorkedTime.HolidayDays = holidayDays;
            thrWorkedTime.Periodkey = periodkey;
            return thrWorkedTime;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WorkedTimeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WorkedTimeKey
        {
            get
            {
                int value = _WorkedTimeKey;
                OnGetWorkedTimeKey(ref value);
                return value;
            }
            set
            {
                if (_WorkedTimeKey != value)
                {
                  OnWorkedTimeKeyChanging(ref value);
                  ReportPropertyChanging("WorkedTimeKey");
                  _WorkedTimeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkedTimeKey");
                  OnWorkedTimeKeyChanged();
              }
            }
        }
        private int _WorkedTimeKey;
        partial void OnGetWorkedTimeKey(ref int value);
        partial void OnWorkedTimeKeyChanging(ref int value);
        partial void OnWorkedTimeKeyChanged();
    
        /// <summary>
        /// There are no comments for PersonKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PersonKey
        {
            get
            {
                int value = _PersonKey;
                OnGetPersonKey(ref value);
                return value;
            }
            set
            {
                if (_PersonKey != value)
                {
                  OnPersonKeyChanging(ref value);
                  ReportPropertyChanging("PersonKey");
                  _PersonKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PersonKey");
                  OnPersonKeyChanged();
              }
            }
        }
        private int _PersonKey;
        partial void OnGetPersonKey(ref int value);
        partial void OnPersonKeyChanging(ref int value);
        partial void OnPersonKeyChanged();
    
        /// <summary>
        /// There are no comments for WorkedHours in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WorkedHours
        {
            get
            {
                decimal value = _WorkedHours;
                OnGetWorkedHours(ref value);
                return value;
            }
            set
            {
                if (_WorkedHours != value)
                {
                  OnWorkedHoursChanging(ref value);
                  ReportPropertyChanging("WorkedHours");
                  _WorkedHours = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkedHours");
                  OnWorkedHoursChanged();
              }
            }
        }
        private decimal _WorkedHours;
        partial void OnGetWorkedHours(ref decimal value);
        partial void OnWorkedHoursChanging(ref decimal value);
        partial void OnWorkedHoursChanged();
    
        /// <summary>
        /// There are no comments for ExtraHours in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ExtraHours
        {
            get
            {
                decimal value = _ExtraHours;
                OnGetExtraHours(ref value);
                return value;
            }
            set
            {
                if (_ExtraHours != value)
                {
                  OnExtraHoursChanging(ref value);
                  ReportPropertyChanging("ExtraHours");
                  _ExtraHours = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExtraHours");
                  OnExtraHoursChanged();
              }
            }
        }
        private decimal _ExtraHours;
        partial void OnGetExtraHours(ref decimal value);
        partial void OnExtraHoursChanging(ref decimal value);
        partial void OnExtraHoursChanged();
    
        /// <summary>
        /// There are no comments for HolidayDays in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HolidayDays
        {
            get
            {
                int value = _HolidayDays;
                OnGetHolidayDays(ref value);
                return value;
            }
            set
            {
                if (_HolidayDays != value)
                {
                  OnHolidayDaysChanging(ref value);
                  ReportPropertyChanging("HolidayDays");
                  _HolidayDays = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HolidayDays");
                  OnHolidayDaysChanged();
              }
            }
        }
        private int _HolidayDays;
        partial void OnGetHolidayDays(ref int value);
        partial void OnHolidayDaysChanging(ref int value);
        partial void OnHolidayDaysChanged();
    
        /// <summary>
        /// There are no comments for Periodkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Periodkey
        {
            get
            {
                int value = _Periodkey;
                OnGetPeriodkey(ref value);
                return value;
            }
            set
            {
                if (_Periodkey != value)
                {
                  OnPeriodkeyChanging(ref value);
                  ReportPropertyChanging("Periodkey");
                  _Periodkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Periodkey");
                  OnPeriodkeyChanged();
              }
            }
        }
        private int _Periodkey;
        partial void OnGetPeriodkey(ref int value);
        partial void OnPeriodkeyChanging(ref int value);
        partial void OnPeriodkeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrWorkedTimeAnormalConditions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrWorkedTime_ThrWorkedTimeAnormalCondition", "ThrWorkedTimeAnormalConditions")]
        public virtual EntityCollection<ThrWorkedTimeAnormalCondition> ThrWorkedTimeAnormalConditions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ThrWorkedTimeAnormalCondition>("Sage500AppModel.ThrWorkedTime_ThrWorkedTimeAnormalCondition", "ThrWorkedTimeAnormalConditions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ThrWorkedTimeAnormalCondition>("Sage500AppModel.ThrWorkedTime_ThrWorkedTimeAnormalCondition", "ThrWorkedTimeAnormalConditions", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrWorkedTimeAnormalCondition in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WorkedTimeKey
    /// AnormalConditionkey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrWorkedTimeAnormalCondition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrWorkedTimeAnormalCondition : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrWorkedTimeAnormalCondition object.
        /// </summary>
        /// <param name="workedTimeKey">Initial value of WorkedTimeKey.</param>
        /// <param name="anormalConditionkey">Initial value of AnormalConditionkey.</param>
        /// <param name="workAnormalHours">Initial value of WorkAnormalHours.</param>
        public static ThrWorkedTimeAnormalCondition CreateThrWorkedTimeAnormalCondition(int workedTimeKey, int anormalConditionkey, decimal workAnormalHours)
        {
            ThrWorkedTimeAnormalCondition thrWorkedTimeAnormalCondition = new ThrWorkedTimeAnormalCondition();
            thrWorkedTimeAnormalCondition.WorkedTimeKey = workedTimeKey;
            thrWorkedTimeAnormalCondition.AnormalConditionkey = anormalConditionkey;
            thrWorkedTimeAnormalCondition.WorkAnormalHours = workAnormalHours;
            return thrWorkedTimeAnormalCondition;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WorkedTimeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WorkedTimeKey
        {
            get
            {
                int value = _WorkedTimeKey;
                OnGetWorkedTimeKey(ref value);
                return value;
            }
            set
            {
                if (_WorkedTimeKey != value)
                {
                  OnWorkedTimeKeyChanging(ref value);
                  ReportPropertyChanging("WorkedTimeKey");
                  _WorkedTimeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkedTimeKey");
                  OnWorkedTimeKeyChanged();
              }
            }
        }
        private int _WorkedTimeKey;
        partial void OnGetWorkedTimeKey(ref int value);
        partial void OnWorkedTimeKeyChanging(ref int value);
        partial void OnWorkedTimeKeyChanged();
    
        /// <summary>
        /// There are no comments for AnormalConditionkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AnormalConditionkey
        {
            get
            {
                int value = _AnormalConditionkey;
                OnGetAnormalConditionkey(ref value);
                return value;
            }
            set
            {
                if (_AnormalConditionkey != value)
                {
                  OnAnormalConditionkeyChanging(ref value);
                  ReportPropertyChanging("AnormalConditionkey");
                  _AnormalConditionkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AnormalConditionkey");
                  OnAnormalConditionkeyChanged();
              }
            }
        }
        private int _AnormalConditionkey;
        partial void OnGetAnormalConditionkey(ref int value);
        partial void OnAnormalConditionkeyChanging(ref int value);
        partial void OnAnormalConditionkeyChanged();
    
        /// <summary>
        /// There are no comments for WorkAnormalHours in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WorkAnormalHours
        {
            get
            {
                decimal value = _WorkAnormalHours;
                OnGetWorkAnormalHours(ref value);
                return value;
            }
            set
            {
                if (_WorkAnormalHours != value)
                {
                  OnWorkAnormalHoursChanging(ref value);
                  ReportPropertyChanging("WorkAnormalHours");
                  _WorkAnormalHours = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkAnormalHours");
                  OnWorkAnormalHoursChanged();
              }
            }
        }
        private decimal _WorkAnormalHours;
        partial void OnGetWorkAnormalHours(ref decimal value);
        partial void OnWorkAnormalHoursChanging(ref decimal value);
        partial void OnWorkAnormalHoursChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrAnormalCondition in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrAnormalCondition_ThrWorkedTimeAnormalCondition", "ThrAnormalCondition")]
        public virtual ThrAnormalCondition ThrAnormalCondition
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrAnormalCondition>("Sage500AppModel.ThrAnormalCondition_ThrWorkedTimeAnormalCondition", "ThrAnormalCondition").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrAnormalCondition>("Sage500AppModel.ThrAnormalCondition_ThrWorkedTimeAnormalCondition", "ThrAnormalCondition").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrAnormalCondition in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrAnormalCondition> ThrAnormalConditionReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrAnormalCondition>("Sage500AppModel.ThrAnormalCondition_ThrWorkedTimeAnormalCondition", "ThrAnormalCondition");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrAnormalCondition>("Sage500AppModel.ThrAnormalCondition_ThrWorkedTimeAnormalCondition", "ThrAnormalCondition", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrAnormalCondition>("Sage500AppModel.ThrAnormalCondition_ThrWorkedTimeAnormalCondition", "ThrAnormalCondition").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrWorkedTime in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrWorkedTime_ThrWorkedTimeAnormalCondition", "ThrWorkedTime")]
        public virtual ThrWorkedTime ThrWorkedTime
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrWorkedTime>("Sage500AppModel.ThrWorkedTime_ThrWorkedTimeAnormalCondition", "ThrWorkedTime").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrWorkedTime>("Sage500AppModel.ThrWorkedTime_ThrWorkedTimeAnormalCondition", "ThrWorkedTime").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrWorkedTime in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrWorkedTime> ThrWorkedTimeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrWorkedTime>("Sage500AppModel.ThrWorkedTime_ThrWorkedTimeAnormalCondition", "ThrWorkedTime");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrWorkedTime>("Sage500AppModel.ThrWorkedTime_ThrWorkedTimeAnormalCondition", "ThrWorkedTime", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrWorkedTime>("Sage500AppModel.ThrWorkedTime_ThrWorkedTimeAnormalCondition", "ThrWorkedTime").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrPeopleVacation in the schema.
    /// </summary>
    /// <KeyProperties>
    /// VacationKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrPeopleVacation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrPeopleVacation : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrPeopleVacation object.
        /// </summary>
        /// <param name="vacationKey">Initial value of VacationKey.</param>
        /// <param name="personkey">Initial value of Personkey.</param>
        /// <param name="vacationFechaInicio">Initial value of VacationFechaInicio.</param>
        /// <param name="vacationFechaFin">Initial value of VacationFechaFin.</param>
        /// <param name="hoursDifrutadas">Initial value of HoursDifrutadas.</param>
        /// <param name="periodKey">Initial value of PeriodKey.</param>
        /// <param name="fechaRegister">Initial value of FechaRegister.</param>
        public static ThrPeopleVacation CreateThrPeopleVacation(int vacationKey, int personkey, global::System.DateTime vacationFechaInicio, global::System.DateTime vacationFechaFin, int hoursDifrutadas, int periodKey, global::System.DateTime fechaRegister)
        {
            ThrPeopleVacation thrPeopleVacation = new ThrPeopleVacation();
            thrPeopleVacation.VacationKey = vacationKey;
            thrPeopleVacation.Personkey = personkey;
            thrPeopleVacation.VacationFechaInicio = vacationFechaInicio;
            thrPeopleVacation.VacationFechaFin = vacationFechaFin;
            thrPeopleVacation.HoursDifrutadas = hoursDifrutadas;
            thrPeopleVacation.PeriodKey = periodKey;
            thrPeopleVacation.FechaRegister = fechaRegister;
            return thrPeopleVacation;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for VacationKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VacationKey
        {
            get
            {
                int value = _VacationKey;
                OnGetVacationKey(ref value);
                return value;
            }
            set
            {
                if (_VacationKey != value)
                {
                  OnVacationKeyChanging(ref value);
                  ReportPropertyChanging("VacationKey");
                  _VacationKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VacationKey");
                  OnVacationKeyChanged();
              }
            }
        }
        private int _VacationKey;
        partial void OnGetVacationKey(ref int value);
        partial void OnVacationKeyChanging(ref int value);
        partial void OnVacationKeyChanged();
    
        /// <summary>
        /// There are no comments for Personkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Personkey
        {
            get
            {
                int value = _Personkey;
                OnGetPersonkey(ref value);
                return value;
            }
            set
            {
                if (_Personkey != value)
                {
                  OnPersonkeyChanging(ref value);
                  ReportPropertyChanging("Personkey");
                  _Personkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Personkey");
                  OnPersonkeyChanged();
              }
            }
        }
        private int _Personkey;
        partial void OnGetPersonkey(ref int value);
        partial void OnPersonkeyChanging(ref int value);
        partial void OnPersonkeyChanged();
    
        /// <summary>
        /// There are no comments for VacationFechaInicio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime VacationFechaInicio
        {
            get
            {
                global::System.DateTime value = _VacationFechaInicio;
                OnGetVacationFechaInicio(ref value);
                return value;
            }
            set
            {
                if (_VacationFechaInicio != value)
                {
                  OnVacationFechaInicioChanging(ref value);
                  ReportPropertyChanging("VacationFechaInicio");
                  _VacationFechaInicio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VacationFechaInicio");
                  OnVacationFechaInicioChanged();
              }
            }
        }
        private global::System.DateTime _VacationFechaInicio;
        partial void OnGetVacationFechaInicio(ref global::System.DateTime value);
        partial void OnVacationFechaInicioChanging(ref global::System.DateTime value);
        partial void OnVacationFechaInicioChanged();
    
        /// <summary>
        /// There are no comments for VacationFechaFin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime VacationFechaFin
        {
            get
            {
                global::System.DateTime value = _VacationFechaFin;
                OnGetVacationFechaFin(ref value);
                return value;
            }
            set
            {
                if (_VacationFechaFin != value)
                {
                  OnVacationFechaFinChanging(ref value);
                  ReportPropertyChanging("VacationFechaFin");
                  _VacationFechaFin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VacationFechaFin");
                  OnVacationFechaFinChanged();
              }
            }
        }
        private global::System.DateTime _VacationFechaFin;
        partial void OnGetVacationFechaFin(ref global::System.DateTime value);
        partial void OnVacationFechaFinChanging(ref global::System.DateTime value);
        partial void OnVacationFechaFinChanged();
    
        /// <summary>
        /// There are no comments for HoursDifrutadas in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HoursDifrutadas
        {
            get
            {
                int value = _HoursDifrutadas;
                OnGetHoursDifrutadas(ref value);
                return value;
            }
            set
            {
                if (_HoursDifrutadas != value)
                {
                  OnHoursDifrutadasChanging(ref value);
                  ReportPropertyChanging("HoursDifrutadas");
                  _HoursDifrutadas = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HoursDifrutadas");
                  OnHoursDifrutadasChanged();
              }
            }
        }
        private int _HoursDifrutadas;
        partial void OnGetHoursDifrutadas(ref int value);
        partial void OnHoursDifrutadasChanging(ref int value);
        partial void OnHoursDifrutadasChanged();
    
        /// <summary>
        /// There are no comments for PeriodKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PeriodKey
        {
            get
            {
                int value = _PeriodKey;
                OnGetPeriodKey(ref value);
                return value;
            }
            set
            {
                if (_PeriodKey != value)
                {
                  OnPeriodKeyChanging(ref value);
                  ReportPropertyChanging("PeriodKey");
                  _PeriodKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodKey");
                  OnPeriodKeyChanged();
              }
            }
        }
        private int _PeriodKey;
        partial void OnGetPeriodKey(ref int value);
        partial void OnPeriodKeyChanging(ref int value);
        partial void OnPeriodKeyChanged();
    
        /// <summary>
        /// There are no comments for FechaRegister in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime FechaRegister
        {
            get
            {
                global::System.DateTime value = _FechaRegister;
                OnGetFechaRegister(ref value);
                return value;
            }
            set
            {
                if (_FechaRegister != value)
                {
                  OnFechaRegisterChanging(ref value);
                  ReportPropertyChanging("FechaRegister");
                  _FechaRegister = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaRegister");
                  OnFechaRegisterChanged();
              }
            }
        }
        private global::System.DateTime _FechaRegister;
        partial void OnGetFechaRegister(ref global::System.DateTime value);
        partial void OnFechaRegisterChanging(ref global::System.DateTime value);
        partial void OnFechaRegisterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrPeople in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrPeople_ThrPeopleVacation", "ThrPeople")]
        public virtual ThrPeople ThrPeople
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPeople>("Sage500AppModel.ThrPeople_ThrPeopleVacation", "ThrPeople").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPeople>("Sage500AppModel.ThrPeople_ThrPeopleVacation", "ThrPeople").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPeople in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrPeople> ThrPeopleReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPeople>("Sage500AppModel.ThrPeople_ThrPeopleVacation", "ThrPeople");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrPeople>("Sage500AppModel.ThrPeople_ThrPeopleVacation", "ThrPeople", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPeople>("Sage500AppModel.ThrPeople_ThrPeopleVacation", "ThrPeople").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrPeopleRetention in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Retentionkey
    /// PersonKey
    /// FechaInicio
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrPeopleRetention")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrPeopleRetention : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrPeopleRetention object.
        /// </summary>
        /// <param name="retentionkey">Initial value of Retentionkey.</param>
        /// <param name="personKey">Initial value of PersonKey.</param>
        /// <param name="fechaInicio">Initial value of FechaInicio.</param>
        /// <param name="periodkey">Initial value of Periodkey.</param>
        /// <param name="fechaRegister">Initial value of FechaRegister.</param>
        /// <param name="saldoTotal">Initial value of SaldoTotal.</param>
        /// <param name="saldoMensual">Initial value of SaldoMensual.</param>
        /// <param name="saldoPendiente">Initial value of SaldoPendiente.</param>
        /// <param name="causa">Initial value of Causa.</param>
        public static ThrPeopleRetention CreateThrPeopleRetention(int retentionkey, int personKey, global::System.DateTime fechaInicio, int periodkey, global::System.DateTime fechaRegister, decimal saldoTotal, decimal saldoMensual, decimal saldoPendiente, string causa)
        {
            ThrPeopleRetention thrPeopleRetention = new ThrPeopleRetention();
            thrPeopleRetention.Retentionkey = retentionkey;
            thrPeopleRetention.PersonKey = personKey;
            thrPeopleRetention.FechaInicio = fechaInicio;
            thrPeopleRetention.Periodkey = periodkey;
            thrPeopleRetention.FechaRegister = fechaRegister;
            thrPeopleRetention.SaldoTotal = saldoTotal;
            thrPeopleRetention.SaldoMensual = saldoMensual;
            thrPeopleRetention.SaldoPendiente = saldoPendiente;
            thrPeopleRetention.Causa = causa;
            return thrPeopleRetention;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Retentionkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Retentionkey
        {
            get
            {
                int value = _Retentionkey;
                OnGetRetentionkey(ref value);
                return value;
            }
            set
            {
                if (_Retentionkey != value)
                {
                  OnRetentionkeyChanging(ref value);
                  ReportPropertyChanging("Retentionkey");
                  _Retentionkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Retentionkey");
                  OnRetentionkeyChanged();
              }
            }
        }
        private int _Retentionkey;
        partial void OnGetRetentionkey(ref int value);
        partial void OnRetentionkeyChanging(ref int value);
        partial void OnRetentionkeyChanged();
    
        /// <summary>
        /// There are no comments for PersonKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PersonKey
        {
            get
            {
                int value = _PersonKey;
                OnGetPersonKey(ref value);
                return value;
            }
            set
            {
                if (_PersonKey != value)
                {
                  OnPersonKeyChanging(ref value);
                  ReportPropertyChanging("PersonKey");
                  _PersonKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PersonKey");
                  OnPersonKeyChanged();
              }
            }
        }
        private int _PersonKey;
        partial void OnGetPersonKey(ref int value);
        partial void OnPersonKeyChanging(ref int value);
        partial void OnPersonKeyChanged();
    
        /// <summary>
        /// There are no comments for FechaInicio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime FechaInicio
        {
            get
            {
                global::System.DateTime value = _FechaInicio;
                OnGetFechaInicio(ref value);
                return value;
            }
            set
            {
                if (_FechaInicio != value)
                {
                  OnFechaInicioChanging(ref value);
                  ReportPropertyChanging("FechaInicio");
                  _FechaInicio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaInicio");
                  OnFechaInicioChanged();
              }
            }
        }
        private global::System.DateTime _FechaInicio;
        partial void OnGetFechaInicio(ref global::System.DateTime value);
        partial void OnFechaInicioChanging(ref global::System.DateTime value);
        partial void OnFechaInicioChanged();
    
        /// <summary>
        /// There are no comments for Periodkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Periodkey
        {
            get
            {
                int value = _Periodkey;
                OnGetPeriodkey(ref value);
                return value;
            }
            set
            {
                if (_Periodkey != value)
                {
                  OnPeriodkeyChanging(ref value);
                  ReportPropertyChanging("Periodkey");
                  _Periodkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Periodkey");
                  OnPeriodkeyChanged();
              }
            }
        }
        private int _Periodkey;
        partial void OnGetPeriodkey(ref int value);
        partial void OnPeriodkeyChanging(ref int value);
        partial void OnPeriodkeyChanged();
    
        /// <summary>
        /// There are no comments for FechaRegister in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime FechaRegister
        {
            get
            {
                global::System.DateTime value = _FechaRegister;
                OnGetFechaRegister(ref value);
                return value;
            }
            set
            {
                if (_FechaRegister != value)
                {
                  OnFechaRegisterChanging(ref value);
                  ReportPropertyChanging("FechaRegister");
                  _FechaRegister = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaRegister");
                  OnFechaRegisterChanged();
              }
            }
        }
        private global::System.DateTime _FechaRegister;
        partial void OnGetFechaRegister(ref global::System.DateTime value);
        partial void OnFechaRegisterChanging(ref global::System.DateTime value);
        partial void OnFechaRegisterChanged();
    
        /// <summary>
        /// There are no comments for SaldoTotal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SaldoTotal
        {
            get
            {
                decimal value = _SaldoTotal;
                OnGetSaldoTotal(ref value);
                return value;
            }
            set
            {
                if (_SaldoTotal != value)
                {
                  OnSaldoTotalChanging(ref value);
                  ReportPropertyChanging("SaldoTotal");
                  _SaldoTotal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SaldoTotal");
                  OnSaldoTotalChanged();
              }
            }
        }
        private decimal _SaldoTotal;
        partial void OnGetSaldoTotal(ref decimal value);
        partial void OnSaldoTotalChanging(ref decimal value);
        partial void OnSaldoTotalChanged();
    
        /// <summary>
        /// There are no comments for SaldoMensual in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SaldoMensual
        {
            get
            {
                decimal value = _SaldoMensual;
                OnGetSaldoMensual(ref value);
                return value;
            }
            set
            {
                if (_SaldoMensual != value)
                {
                  OnSaldoMensualChanging(ref value);
                  ReportPropertyChanging("SaldoMensual");
                  _SaldoMensual = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SaldoMensual");
                  OnSaldoMensualChanged();
              }
            }
        }
        private decimal _SaldoMensual;
        partial void OnGetSaldoMensual(ref decimal value);
        partial void OnSaldoMensualChanging(ref decimal value);
        partial void OnSaldoMensualChanged();
    
        /// <summary>
        /// There are no comments for SaldoPendiente in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SaldoPendiente
        {
            get
            {
                decimal value = _SaldoPendiente;
                OnGetSaldoPendiente(ref value);
                return value;
            }
            set
            {
                if (_SaldoPendiente != value)
                {
                  OnSaldoPendienteChanging(ref value);
                  ReportPropertyChanging("SaldoPendiente");
                  _SaldoPendiente = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SaldoPendiente");
                  OnSaldoPendienteChanged();
              }
            }
        }
        private decimal _SaldoPendiente;
        partial void OnGetSaldoPendiente(ref decimal value);
        partial void OnSaldoPendienteChanging(ref decimal value);
        partial void OnSaldoPendienteChanged();
    
        /// <summary>
        /// There are no comments for Causa in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Causa
        {
            get
            {
                string value = _Causa;
                OnGetCausa(ref value);
                return value;
            }
            set
            {
                if (_Causa != value)
                {
                  OnCausaChanging(ref value);
                  ReportPropertyChanging("Causa");
                  _Causa = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Causa");
                  OnCausaChanged();
              }
            }
        }
        private string _Causa;
        partial void OnGetCausa(ref string value);
        partial void OnCausaChanging(ref string value);
        partial void OnCausaChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrPeopleMovement in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PersonKey
    /// FechaMovimiento
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrPeopleMovement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrPeopleMovement : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrPeopleMovement object.
        /// </summary>
        /// <param name="movementkey">Initial value of Movementkey.</param>
        /// <param name="personKey">Initial value of PersonKey.</param>
        /// <param name="periodKey">Initial value of PeriodKey.</param>
        /// <param name="orgUnitKey">Initial value of OrgUnitKey.</param>
        /// <param name="positionKey">Initial value of PositionKey.</param>
        /// <param name="fechaMovimiento">Initial value of FechaMovimiento.</param>
        public static ThrPeopleMovement CreateThrPeopleMovement(int movementkey, int personKey, int periodKey, int orgUnitKey, int positionKey, global::System.DateTime fechaMovimiento)
        {
            ThrPeopleMovement thrPeopleMovement = new ThrPeopleMovement();
            thrPeopleMovement.Movementkey = movementkey;
            thrPeopleMovement.PersonKey = personKey;
            thrPeopleMovement.PeriodKey = periodKey;
            thrPeopleMovement.OrgUnitKey = orgUnitKey;
            thrPeopleMovement.PositionKey = positionKey;
            thrPeopleMovement.FechaMovimiento = fechaMovimiento;
            return thrPeopleMovement;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Movementkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Movementkey
        {
            get
            {
                int value = _Movementkey;
                OnGetMovementkey(ref value);
                return value;
            }
            set
            {
                if (_Movementkey != value)
                {
                  OnMovementkeyChanging(ref value);
                  ReportPropertyChanging("Movementkey");
                  _Movementkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Movementkey");
                  OnMovementkeyChanged();
              }
            }
        }
        private int _Movementkey;
        partial void OnGetMovementkey(ref int value);
        partial void OnMovementkeyChanging(ref int value);
        partial void OnMovementkeyChanged();
    
        /// <summary>
        /// There are no comments for PersonKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PersonKey
        {
            get
            {
                int value = _PersonKey;
                OnGetPersonKey(ref value);
                return value;
            }
            set
            {
                if (_PersonKey != value)
                {
                  OnPersonKeyChanging(ref value);
                  ReportPropertyChanging("PersonKey");
                  _PersonKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PersonKey");
                  OnPersonKeyChanged();
              }
            }
        }
        private int _PersonKey;
        partial void OnGetPersonKey(ref int value);
        partial void OnPersonKeyChanging(ref int value);
        partial void OnPersonKeyChanged();
    
        /// <summary>
        /// There are no comments for PeriodKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PeriodKey
        {
            get
            {
                int value = _PeriodKey;
                OnGetPeriodKey(ref value);
                return value;
            }
            set
            {
                if (_PeriodKey != value)
                {
                  OnPeriodKeyChanging(ref value);
                  ReportPropertyChanging("PeriodKey");
                  _PeriodKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodKey");
                  OnPeriodKeyChanged();
              }
            }
        }
        private int _PeriodKey;
        partial void OnGetPeriodKey(ref int value);
        partial void OnPeriodKeyChanging(ref int value);
        partial void OnPeriodKeyChanged();
    
        /// <summary>
        /// There are no comments for OrgUnitKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OrgUnitKey
        {
            get
            {
                int value = _OrgUnitKey;
                OnGetOrgUnitKey(ref value);
                return value;
            }
            set
            {
                if (_OrgUnitKey != value)
                {
                  OnOrgUnitKeyChanging(ref value);
                  ReportPropertyChanging("OrgUnitKey");
                  _OrgUnitKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrgUnitKey");
                  OnOrgUnitKeyChanged();
              }
            }
        }
        private int _OrgUnitKey;
        partial void OnGetOrgUnitKey(ref int value);
        partial void OnOrgUnitKeyChanging(ref int value);
        partial void OnOrgUnitKeyChanged();
    
        /// <summary>
        /// There are no comments for PositionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PositionKey
        {
            get
            {
                int value = _PositionKey;
                OnGetPositionKey(ref value);
                return value;
            }
            set
            {
                if (_PositionKey != value)
                {
                  OnPositionKeyChanging(ref value);
                  ReportPropertyChanging("PositionKey");
                  _PositionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PositionKey");
                  OnPositionKeyChanged();
              }
            }
        }
        private int _PositionKey;
        partial void OnGetPositionKey(ref int value);
        partial void OnPositionKeyChanging(ref int value);
        partial void OnPositionKeyChanged();
    
        /// <summary>
        /// There are no comments for FechaMovimiento in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime FechaMovimiento
        {
            get
            {
                global::System.DateTime value = _FechaMovimiento;
                OnGetFechaMovimiento(ref value);
                return value;
            }
            set
            {
                if (_FechaMovimiento != value)
                {
                  OnFechaMovimientoChanging(ref value);
                  ReportPropertyChanging("FechaMovimiento");
                  _FechaMovimiento = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaMovimiento");
                  OnFechaMovimientoChanged();
              }
            }
        }
        private global::System.DateTime _FechaMovimiento;
        partial void OnGetFechaMovimiento(ref global::System.DateTime value);
        partial void OnFechaMovimientoChanging(ref global::System.DateTime value);
        partial void OnFechaMovimientoChanged();
    
        /// <summary>
        /// There are no comments for UnidadKeyNext in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? UnidadKeyNext
        {
            get
            {
                int? value = _UnidadKeyNext;
                OnGetUnidadKeyNext(ref value);
                return value;
            }
            set
            {
                if (_UnidadKeyNext != value)
                {
                  OnUnidadKeyNextChanging(ref value);
                  ReportPropertyChanging("UnidadKeyNext");
                  _UnidadKeyNext = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnidadKeyNext");
                  OnUnidadKeyNextChanged();
              }
            }
        }
        private int? _UnidadKeyNext;
        partial void OnGetUnidadKeyNext(ref int? value);
        partial void OnUnidadKeyNextChanging(ref int? value);
        partial void OnUnidadKeyNextChanged();
    
        /// <summary>
        /// There are no comments for PositionKeyNext in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PositionKeyNext
        {
            get
            {
                int? value = _PositionKeyNext;
                OnGetPositionKeyNext(ref value);
                return value;
            }
            set
            {
                if (_PositionKeyNext != value)
                {
                  OnPositionKeyNextChanging(ref value);
                  ReportPropertyChanging("PositionKeyNext");
                  _PositionKeyNext = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PositionKeyNext");
                  OnPositionKeyNextChanged();
              }
            }
        }
        private int? _PositionKeyNext;
        partial void OnGetPositionKeyNext(ref int? value);
        partial void OnPositionKeyNextChanging(ref int? value);
        partial void OnPositionKeyNextChanged();
    
        /// <summary>
        /// There are no comments for Causa in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Causa
        {
            get
            {
                string value = _Causa;
                OnGetCausa(ref value);
                return value;
            }
            set
            {
                if (_Causa != value)
                {
                  OnCausaChanging(ref value);
                  ReportPropertyChanging("Causa");
                  _Causa = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Causa");
                  OnCausaChanged();
              }
            }
        }
        private string _Causa;
        partial void OnGetCausa(ref string value);
        partial void OnCausaChanging(ref string value);
        partial void OnCausaChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ThrOrgUnitPosition in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrOrgUnitPosition_ThrPeopleMovement", "ThrOrgUnitPosition")]
        public virtual ThrOrgUnitPosition ThrOrgUnitPosition
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrOrgUnitPosition>("Sage500AppModel.ThrOrgUnitPosition_ThrPeopleMovement", "ThrOrgUnitPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrOrgUnitPosition>("Sage500AppModel.ThrOrgUnitPosition_ThrPeopleMovement", "ThrOrgUnitPosition").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrOrgUnitPosition in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrOrgUnitPosition> ThrOrgUnitPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrOrgUnitPosition>("Sage500AppModel.ThrOrgUnitPosition_ThrPeopleMovement", "ThrOrgUnitPosition");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrOrgUnitPosition>("Sage500AppModel.ThrOrgUnitPosition_ThrPeopleMovement", "ThrOrgUnitPosition", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrOrgUnitPosition>("Sage500AppModel.ThrOrgUnitPosition_ThrPeopleMovement", "ThrOrgUnitPosition").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPeople in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrPeople_ThrPeopleMovement", "ThrPeople")]
        public virtual ThrPeople ThrPeople
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPeople>("Sage500AppModel.ThrPeople_ThrPeopleMovement", "ThrPeople").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPeople>("Sage500AppModel.ThrPeople_ThrPeopleMovement", "ThrPeople").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrPeople in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrPeople> ThrPeopleReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPeople>("Sage500AppModel.ThrPeople_ThrPeopleMovement", "ThrPeople");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrPeople>("Sage500AppModel.ThrPeople_ThrPeopleMovement", "ThrPeople", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrPeople>("Sage500AppModel.ThrPeople_ThrPeopleMovement", "ThrPeople").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ThrMovement in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sage500AppModel", "ThrMovement_ThrPeopleMovement", "ThrMovement")]
        public virtual ThrMovement ThrMovement
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrMovement>("Sage500AppModel.ThrMovement_ThrPeopleMovement", "ThrMovement").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrMovement>("Sage500AppModel.ThrMovement_ThrPeopleMovement", "ThrMovement").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ThrMovement in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThrMovement> ThrMovementReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrMovement>("Sage500AppModel.ThrMovement_ThrPeopleMovement", "ThrMovement");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ThrMovement>("Sage500AppModel.ThrMovement_ThrPeopleMovement", "ThrMovement", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ThrMovement>("Sage500AppModel.ThrMovement_ThrPeopleMovement", "ThrMovement").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sage500AppModel.ThrPeopleDeduction1 in the schema.
    /// </summary>
    /// <KeyProperties>
    /// DeductionKey
    /// PersonKey
    /// FehaInicio
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sage500AppModel", Name="ThrPeopleDeduction1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThrPeopleDeduction1 : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ThrPeopleDeduction1 object.
        /// </summary>
        /// <param name="deductionKey">Initial value of DeductionKey.</param>
        /// <param name="personKey">Initial value of PersonKey.</param>
        /// <param name="fehaInicio">Initial value of FehaInicio.</param>
        /// <param name="periodkey">Initial value of Periodkey.</param>
        /// <param name="fechaRegister">Initial value of FechaRegister.</param>
        /// <param name="saldoTotal">Initial value of SaldoTotal.</param>
        /// <param name="cuotaMensual">Initial value of CuotaMensual.</param>
        /// <param name="saldoPendiente">Initial value of SaldoPendiente.</param>
        public static ThrPeopleDeduction1 CreateThrPeopleDeduction1(int deductionKey, int personKey, global::System.DateTime fehaInicio, int periodkey, global::System.DateTime fechaRegister, decimal saldoTotal, decimal cuotaMensual, decimal saldoPendiente)
        {
            ThrPeopleDeduction1 thrPeopleDeduction1 = new ThrPeopleDeduction1();
            thrPeopleDeduction1.DeductionKey = deductionKey;
            thrPeopleDeduction1.PersonKey = personKey;
            thrPeopleDeduction1.FehaInicio = fehaInicio;
            thrPeopleDeduction1.Periodkey = periodkey;
            thrPeopleDeduction1.FechaRegister = fechaRegister;
            thrPeopleDeduction1.SaldoTotal = saldoTotal;
            thrPeopleDeduction1.CuotaMensual = cuotaMensual;
            thrPeopleDeduction1.SaldoPendiente = saldoPendiente;
            return thrPeopleDeduction1;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for DeductionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DeductionKey
        {
            get
            {
                int value = _DeductionKey;
                OnGetDeductionKey(ref value);
                return value;
            }
            set
            {
                if (_DeductionKey != value)
                {
                  OnDeductionKeyChanging(ref value);
                  ReportPropertyChanging("DeductionKey");
                  _DeductionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DeductionKey");
                  OnDeductionKeyChanged();
              }
            }
        }
        private int _DeductionKey;
        partial void OnGetDeductionKey(ref int value);
        partial void OnDeductionKeyChanging(ref int value);
        partial void OnDeductionKeyChanged();
    
        /// <summary>
        /// There are no comments for PersonKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PersonKey
        {
            get
            {
                int value = _PersonKey;
                OnGetPersonKey(ref value);
                return value;
            }
            set
            {
                if (_PersonKey != value)
                {
                  OnPersonKeyChanging(ref value);
                  ReportPropertyChanging("PersonKey");
                  _PersonKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PersonKey");
                  OnPersonKeyChanged();
              }
            }
        }
        private int _PersonKey;
        partial void OnGetPersonKey(ref int value);
        partial void OnPersonKeyChanging(ref int value);
        partial void OnPersonKeyChanged();
    
        /// <summary>
        /// There are no comments for FehaInicio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime FehaInicio
        {
            get
            {
                global::System.DateTime value = _FehaInicio;
                OnGetFehaInicio(ref value);
                return value;
            }
            set
            {
                if (_FehaInicio != value)
                {
                  OnFehaInicioChanging(ref value);
                  ReportPropertyChanging("FehaInicio");
                  _FehaInicio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FehaInicio");
                  OnFehaInicioChanged();
              }
            }
        }
        private global::System.DateTime _FehaInicio;
        partial void OnGetFehaInicio(ref global::System.DateTime value);
        partial void OnFehaInicioChanging(ref global::System.DateTime value);
        partial void OnFehaInicioChanged();
    
        /// <summary>
        /// There are no comments for Periodkey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Periodkey
        {
            get
            {
                int value = _Periodkey;
                OnGetPeriodkey(ref value);
                return value;
            }
            set
            {
                if (_Periodkey != value)
                {
                  OnPeriodkeyChanging(ref value);
                  ReportPropertyChanging("Periodkey");
                  _Periodkey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Periodkey");
                  OnPeriodkeyChanged();
              }
            }
        }
        private int _Periodkey;
        partial void OnGetPeriodkey(ref int value);
        partial void OnPeriodkeyChanging(ref int value);
        partial void OnPeriodkeyChanged();
    
        /// <summary>
        /// There are no comments for FechaRegister in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime FechaRegister
        {
            get
            {
                global::System.DateTime value = _FechaRegister;
                OnGetFechaRegister(ref value);
                return value;
            }
            set
            {
                if (_FechaRegister != value)
                {
                  OnFechaRegisterChanging(ref value);
                  ReportPropertyChanging("FechaRegister");
                  _FechaRegister = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaRegister");
                  OnFechaRegisterChanged();
              }
            }
        }
        private global::System.DateTime _FechaRegister;
        partial void OnGetFechaRegister(ref global::System.DateTime value);
        partial void OnFechaRegisterChanging(ref global::System.DateTime value);
        partial void OnFechaRegisterChanged();
    
        /// <summary>
        /// There are no comments for SaldoTotal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SaldoTotal
        {
            get
            {
                decimal value = _SaldoTotal;
                OnGetSaldoTotal(ref value);
                return value;
            }
            set
            {
                if (_SaldoTotal != value)
                {
                  OnSaldoTotalChanging(ref value);
                  ReportPropertyChanging("SaldoTotal");
                  _SaldoTotal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SaldoTotal");
                  OnSaldoTotalChanged();
              }
            }
        }
        private decimal _SaldoTotal;
        partial void OnGetSaldoTotal(ref decimal value);
        partial void OnSaldoTotalChanging(ref decimal value);
        partial void OnSaldoTotalChanged();
    
        /// <summary>
        /// There are no comments for CuotaMensual in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CuotaMensual
        {
            get
            {
                decimal value = _CuotaMensual;
                OnGetCuotaMensual(ref value);
                return value;
            }
            set
            {
                if (_CuotaMensual != value)
                {
                  OnCuotaMensualChanging(ref value);
                  ReportPropertyChanging("CuotaMensual");
                  _CuotaMensual = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CuotaMensual");
                  OnCuotaMensualChanged();
              }
            }
        }
        private decimal _CuotaMensual;
        partial void OnGetCuotaMensual(ref decimal value);
        partial void OnCuotaMensualChanging(ref decimal value);
        partial void OnCuotaMensualChanged();
    
        /// <summary>
        /// There are no comments for SaldoPendiente in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SaldoPendiente
        {
            get
            {
                decimal value = _SaldoPendiente;
                OnGetSaldoPendiente(ref value);
                return value;
            }
            set
            {
                if (_SaldoPendiente != value)
                {
                  OnSaldoPendienteChanging(ref value);
                  ReportPropertyChanging("SaldoPendiente");
                  _SaldoPendiente = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SaldoPendiente");
                  OnSaldoPendienteChanged();
              }
            }
        }
        private decimal _SaldoPendiente;
        partial void OnGetSaldoPendiente(ref decimal value);
        partial void OnSaldoPendienteChanging(ref decimal value);
        partial void OnSaldoPendienteChanged();

        #endregion
    }

}
